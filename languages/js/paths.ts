
    import path from 'path';
    function createProxy(obj) {
        return new Proxy(obj, {
            set: (target, prop, value) => {
                throw new Error('readonly');
            },
            
            get: (target, prop) => {
                if (target[prop] === undefined) {
                    throw new Error(`prop ${prop.toString()} does not exists in ${target}`);
                }
                
                return createProxy(target[prop]);
            },
        });
    }
    type RootPathsType = {
    toAbsolutePath:()=> string,
    toRelativePath:(relativeTo?:string)=> string,
    readonly ".git": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string
    }
,
    readonly ".gitignore": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string
    }
,
    readonly ".idea": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string,
        readonly ".idea.App": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string,
            readonly ".idea": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly ".gitignore": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "encodings.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "indexLayout.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "vcs.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }

            }

        }
,
        readonly ".idea.Projects": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string,
            readonly ".idea": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly ".gitignore": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "aws.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "encodings.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "indexLayout.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "misc.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "vcs.xml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }

            }

        }

    }
,
    readonly ".tye": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string,
        readonly "docker_store": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string
        }
,
        readonly "process_store": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string
        }

    }
,
    readonly ".vs": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string
    }
,
    readonly "dapr": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string,
        readonly "components": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string,
            readonly "custom-secretstore.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "email.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "oauth2-client-credential.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "oauth2.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "pubsub.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "redis-state.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }

        }
,
        readonly "configurations": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string,
            readonly "config.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "pipeline.yaml": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }

        }

    }
,
    readonly "languages": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string,
        readonly "csharp": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string,
            readonly ".gitignore": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".idea": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly ".idea.App": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly ".idea": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".name": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "encodings.xml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "indexLayout.xml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "projectSettingsUpdater.xml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "vcs.xml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "workspace.xml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }

            }
,
            readonly ".vs": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "App.Setup.sln": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "App.sln": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "App.Test.sln": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "Apps": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "Auth": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Auth.Setup": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Client": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "App.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Auth.Setup.Client.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Pages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Counter.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "FetchData.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Index.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Program.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Properties": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "launchSettings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "MainLayout.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "MainLayout.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "NavMenu.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "NavMenu.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SurveyPrompt.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "wwwroot": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "app.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "bootstrap": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "bootstrap.min.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "open-iconic": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "font": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "css": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "open-iconic-bootstrap.min.css": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }
,
                                            readonly "fonts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "open-iconic.eot": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.otf": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.svg": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.ttf": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.woff": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }

                                        }
,
                                        readonly "FONT-LICENSE": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ICON-LICENSE": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "README.md": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "favicon.ico": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "icon-512.png": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "index.html": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "manifest.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "service-worker.js": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "service-worker.published.js": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "_Imports.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Server": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "appsettings.Development.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "appsettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Auth.Setup.Server.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Auth.Setup.Server.csproj.user": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Controllers": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "WeatherForecastController.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Pages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Error.cshtml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Error.cshtml.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Program.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Properties": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "launchSettings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Startup.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shared": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Auth.Setup.Shared.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "WeatherForecast.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Client": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "App.razor": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Auth.Client.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Pages": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Authentication.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Counter.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "FetchData.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Index.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Program.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Properties": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "launchSettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shared": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "LoginDisplay.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "MainLayout.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "MainLayout.razor.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "NavMenu.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "NavMenu.razor.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "RedirectToLogin.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SurveyPrompt.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "wwwroot": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "app.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "bootstrap": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "bootstrap.min.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "open-iconic": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "font": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "open-iconic-bootstrap.min.css": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "fonts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "open-iconic.eot": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.otf": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.svg": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.ttf": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.woff": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }
,
                                    readonly "FONT-LICENSE": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ICON-LICENSE": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "README.md": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "favicon.ico": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "icon-512.png": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.html": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "manifest.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "service-worker.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "service-worker.published.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "_Imports.razor": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Server": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Areas": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Identity": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IdentityHostingStartup.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Pages": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Account": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "AccessDenied.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "AccessDenied.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ConfirmEmail.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ConfirmEmail.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ConfirmEmailChange.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ConfirmEmailChange.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ExternalLogin.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ExternalLogin.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ForgotPassword.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ForgotPassword.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ForgotPasswordConfirmation.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ForgotPasswordConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Lockout.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Lockout.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Login.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Login.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Login.cshtml.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Login.cshtml.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "LoginWith2fa.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "LoginWith2fa.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "LoginWithRecoveryCode.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "LoginWithRecoveryCode.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "LogOut.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Logout.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Manage": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "ChangePassword.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ChangePassword.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "DeletePersonalData.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "DeletePersonalData.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "Disable2fa.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "Disable2fa.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "DownloadPersonalData.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "DownloadPersonalData.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "Email.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "Email.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "EnableAuthenticator.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "EnableAuthenticator.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ExternalLogins.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ExternalLogins.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GenerateRecoveryCodes.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GenerateRecoveryCodes.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "Index.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "Index.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ManageNavPages.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "PersonalData.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "PersonalData.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ResetAuthenticator.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ResetAuthenticator.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "SetPassword.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "SetPassword.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ShowRecoveryCodes.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "ShowRecoveryCodes.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "TwoFactorAuthentication.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "TwoFactorAuthentication.cshtml.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_Layout.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_ManageNav.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_StatusMessage.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_ViewImports.cshtml": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "Register.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Register.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "RegisterConfirmation.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "RegisterConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ResendEmailConfirmation.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ResendEmailConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ResetPassword.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ResetPassword.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ResetPasswordConfirmation.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ResetPasswordConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_StatusMessage.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_ViewImports.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "Error.cshtml": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "Error.cshtml.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_ValidationScriptsPartial.cshtml": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_ViewImports.cshtml": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_ViewStart.cshtml": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "RevalidatingIdentityAuthenticationStateProvider.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Auth.Server.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Auth.Server.csproj.user": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Certificates": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "reference.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "taneware-key.pem": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "compilerconfig.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "compilerconfig.json.defaults": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Controllers": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AuthorizationController.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "OidcConfigurationController.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Dockerfile": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Helpers": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AsyncEnumerableExtensions.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "FormValueRequiredAttribute.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "libman.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Localizations": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Customs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Pos": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ko.po": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "Resources": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Resource.ko.resx": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "Resources": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Resource.Designer.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource.ko.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RespectfulResource.Designer.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RespectfulResource.ko.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Localizations_ContextCodeName__Resource.Designer_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Localizations_ContextCodeName__Resource__Localizations_dotLanguageCode___Gen_.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Templates": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Pots": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Auth.Server.pot": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "SharedLibrary.pot": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "Logs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Auth.Infrastructure20220108.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Pages": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Error.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Error.cshtml.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Index.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Index.cshtml.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Privacy.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Privacy.cshtml.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "_Layout.cshtml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_Layout.cshtml.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_Layout.cshtml.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_LoginPartial.cshtml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_ValidationScriptsPartial.cshtml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "_ViewImports.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "_ViewStart.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Program.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Properties": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "launchSettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.local.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.local.json.user": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "ViewModels": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Authorization": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AuthorizeViewModel.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "LogoutViewModel.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Views": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Authorization": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Authorize.cshtml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Logout.cshtml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "_ViewImports.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "_ViewStart.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Worker.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "wwwroot": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Auth.Shared.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "WeatherForecast.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }
,
                readonly "BlazorApp": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "BlazorApp.Setup": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Client": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "App.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "BlazorApp.Setup.Client.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Pages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Counter.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "FetchData.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Index.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Program.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Properties": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "launchSettings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "MainLayout.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "MainLayout.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "NavMenu.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "NavMenu.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SurveyPrompt.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "wwwroot": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "app.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "bootstrap": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "bootstrap.min.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "open-iconic": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "font": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "css": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "open-iconic-bootstrap.min.css": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }
,
                                            readonly "fonts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "open-iconic.eot": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.otf": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.svg": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.ttf": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "open-iconic.woff": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }

                                        }
,
                                        readonly "FONT-LICENSE": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "ICON-LICENSE": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "README.md": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "favicon.ico": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "index.html": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "_Imports.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Server": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "appsettings.Development.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "appsettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "BlazorApp.Setup.Server.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Controllers": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "WeatherForecastController.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Pages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Error.cshtml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Error.cshtml.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Program.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Properties": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "launchSettings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Startup.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shared": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "BlazorApp.Setup.Shared.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "WeatherForecast.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "BlazorApp.Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "BlazorApp.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "BlazorApp.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "BlazorApp.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "BlazorApp.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "BlazorApp.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "BlazorApp.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Client": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".vs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "App.razor": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "BlazorApp - Backup.Client.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "BlazorApp.Client.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "BlazorApp.Client.csproj.user": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Components": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "ActionButtonGroupComponents": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ChatFloatingActionButton.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ChatFloatingActionButton.razor.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ChatFloatingActionButton.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ChatFloatingActionButton.razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "ChatGroupComponents": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ChatRoom.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ChatRoom.razor.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ChatRoom.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ChatRoom.razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "ValidationComponents": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "CustomValidator.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "CustomValidator.Razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "CustomValidator.Razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "CustomValidatorBase.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Dockerfile": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "libman.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Pages": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AccountPages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "EmailConfirmedPage.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EmailConfirmedPage.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EmailConfirmedPage.razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EmailConfirmedPageBase.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "LoginPage.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "LoginPage.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "LoginPage.razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "LoginPageBase.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterConfirmationPage.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterConfirmationPage.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterConfirmationPage.razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterConfirmationPageBase.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterPage.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterPage.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterPage.razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RegisterPageBase.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Authentication.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Counter.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CustomInputText.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "EntityPages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_BoundedContext_Name__Pages": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "__Entities_Groups_00_Name__Pages": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "__Entities_Name__CreatePageBase_Gen_.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__CreatePage_Gen_.razor": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__CreatePage_Gen_.razor.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__CreatePage_Gen_.razor.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__ListPageBase_Gen_.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__ListPage_Gen_.razor": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__ListPage_Gen_.razor.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__ListPage_Gen_.razor.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__PageBase_Gen_.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__Page_Gen_.razor": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__Page_Gen_.razor.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__Page_Gen_.razor.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__UpdatePageBase_Gen_.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__UpdatePage_Gen_.razor": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__UpdatePage_Gen_.razor.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "__Entities_Name__UpdatePage_Gen_.razor.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "FetchData.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "HomePages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "HomePage.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "HomePage.razor.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "HomePage.razor.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "HomePageBase.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "TestForm.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Program.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Properties": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "launchSettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.local.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.local.json.user": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shared": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "CascadingStates": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "CascadingThemeState.razor": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Layouts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "MainLayout": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "MainLayout.razor": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "MainLayout.razor.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "MainLayout.razor.matblazor.txt": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "MainLayout.razor.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "MainLayoutBase.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "MainLayoutBase.cs.matblazor.txt": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "LoginDisplay.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "NavMenu.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "NavMenu.razor.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "RedirectToLogin.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SurveyPrompt.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "wwwroot": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "appsettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "assets": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.95604739.js": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "service-worker.62536a4c.js": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vendor.c6976955.js": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "index.html": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "_Imports.razor": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Server": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".vs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Areas": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Identity": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Pages": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Shared": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_LoginPartial.cshtml": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }

                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "BlazorApp.Server.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "BlazorApp.Server.csproj.user": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Controllers": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "OidcConfigurationController.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "WeatherForecastController.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Dockerfile": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Logs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Core.Infrastructure20210407.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210528.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210529.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210530.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210531.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210601.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210604.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210701.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210703.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210704.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210704_001.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210920.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20210922.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20211006.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20211008.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20211030.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20211101.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Core.Infrastructure20220105.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Pages": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Error.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Error.cshtml.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Program.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Properties": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "launchSettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.local.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "serviceDependencies.local.json.user": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "wwwroot": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "BlazorApp.Shared.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Localizations": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Customs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Pos": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ko.po": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "Resources": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Resource.ko.resx": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "Pos": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Localizations_languageCode__.po": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Resources": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Resource.Designer.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource.en.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource.es.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource.ko.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource__Context_project_postfix__.koResource.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Resource__Context_project_postfix__Resource.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RespectfulResource.Designer.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RespectfulResource.ko.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RespectfulResource__Context_project_postfix__.koResource.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Localizations_ContextCodeName__Resource__Alias_Postfix__.Designer_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Localizations_ContextCodeName__Resource__Context_project_postfix____Localizations_dotLanguageCode__Resource_Gen_.resx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Templates": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Pots": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SharedLibrary.pot": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "WeatherForecast.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }

            }
,
            readonly "BoundedContexts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "AuthBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Auth.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Auth.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Auth.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Auth.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "AuthDomainConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Entities": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Role.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "RoleClaim.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserClaim.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroup.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupRequest.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupRole.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserLogin.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserToken.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_Role.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_UserGroup.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_UserGroupRole.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "__Entities_Groups_00_Name__Entities": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name___AuthGen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Interfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "RepositoryInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IRoleClaimRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRoleRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserClaimRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserGroupRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserGroupRequestRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserGroupRoleRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserLoginRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserTokenRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUser_RoleRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUser_UserGroupRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUser_UserGroupRoleRepository.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Entities_Groups_00_Name__RepositoryInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "I__Entities_Name__Repository_AuthGen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "ServiceInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IRoleClaimDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRoleDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserClaimDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserGroupDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserGroupRequestDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserGroupRoleDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserLoginDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUserTokenDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUser_RoleDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUser_UserGroupDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUser_UserGroupRoleDomainService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Entities_Groups_00_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "I__Entities_Name__DomainService_AuthGen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Specs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "RoleClaimSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "RoleClaimsByClaimTypeSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RoleClaimsByClaimValueSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RoleClaimsByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RoleClaimsByRoleIdAndClaimTypeAndClaimValueSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RoleClaimsByRoleIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RoleClaimsToClaimsByRoleIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "RoleSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "RolesByConcurrencyStampSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RolesByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RolesByNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RolesByNormalizedNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserClaimSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UserClaimsByClaimTypeSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserClaimsByClaimValueSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserClaimsByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserClaimsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserClaimsToClaimsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserClaimsToUsersByClaimTypeAndClaimValueSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserGroupRequestSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UserGroupRequestsByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupRequestsByUserGroupIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupRequestsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserGroupRoleSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UserGroupRolesByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupRolesByNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupRolesByUserGroupIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserGroupSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UserGroupsByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserLoginSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UserLoginsByLoginProviderSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserLoginsByProviderDisplayNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserLoginsByProviderKeySpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserLoginsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserLoginToUserLoginInfoByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UsersByAccessFailedCountSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByConcurrencyStampSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByEmailConfirmedSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByEmailSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByFirstNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByLastNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByLockoutEnabledSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByLockoutEndSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByMiddleInitialSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByNormalizedEmailSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByNormalizedUserNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByPasswordHashSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByPhoneNumberConfirmedSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByPhoneNumberSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersBySecurityStampSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByTwoFactorEnabledSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UsersByUserNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserTokenSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UserTokensByLoginProviderSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserTokensByNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserTokensByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserTokensByValueSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "User_RoleSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "User_RolesByRoleIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_RolesByUserIdAndNormalizedRoleNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_RolesByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_RolesToRoleNamesByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_RolesToUsersByNormalizedRoleNameSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "User_UserGroupRoleSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "User_UserGroupRolesByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_UserGroupRolesByUserGroupRoleIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_UserGroupRolesByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "User_UserGroupSpecs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "User_UserGroupsByIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_UserGroupsByUserGroupIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_UserGroupsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "__Entities_Groups_00_Name__Specs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name__Specs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_AuthGen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "ValueObjects": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Ids": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "RoleClaimId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "RoleId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "TextMessageProviderIds": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "TwilioIds": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "TwilioVerifySettingId.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "UserClaimId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupRequestId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupRoleId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserLoginId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserTokenId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_RoleId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_UserGroupId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "User_UserGroupRoleId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Entities_Groups_00_Name__Ids": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "__Entities_Name__Id_AuthGen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }

                    }
,
                    readonly "Auth.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Auth.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Data": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Migrations": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "20220108162045_init.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "20220108162045_init.Designer.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AuthDbContextModelSnapshot.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "DbContexts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AuthDbContext.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "EntityTypeConfigurations": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "RoleClaimEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "RoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserClaimEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupRequestEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupRoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserLoginEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserTokenEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_RoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_UserGroupEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_UserGroupRoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name__EntityTypeConfiguration_AuthGen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Extensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "MicrosoftExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AspNetCoreExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IApplicationBuilderExtensions": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "UseAuthServerExtensions.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "EntityFrameworkCoreExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "DbContextOptionsBuilderExtensions": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "BuildCustomDbContextOptionsForOpenIDDictExtension.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "AddAuthDbContextPoolsExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddAuthDbContextsExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddAuthenticationExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddAuthServerExtensions.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddClientAuthServerExtensions.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddIdentityExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddIdentityServerAuthenticationExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddOpenIddictDbContextExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddOpenIddictDbContextPoolExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddOpenIddictExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddStoresExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "Identity": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "CustomRoleStore.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CustomUserStore.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "OpenIdDict": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "CustomOpenIddictApplication.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CustomOpenIddictAuthorization.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CustomOpenIddictScope.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CustomOpenIddictToken.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TokenProviders": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "CustomemailconfirmationTokenProvider.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Repositories": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "RoleClaimRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "RoleRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserClaimRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupRequestRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserGroupRoleRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserLoginRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UserTokenRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_RoleRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_UserGroupRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "User_UserGroupRoleRepository.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "__Entities_Groups_00_Name__Repositories": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name__Repository_AuthGen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "Auth.IntegrationEvents": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Auth.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "SharedAuth.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Dtos": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AuthDtos": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "LoginDto.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "RegisterDto.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "Interfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "SevriceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ISharedRoleApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedRoleClaimApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUserApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUserClaimApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUserGroupApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUserGroupRequestApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUserGroupRoleApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUserLoginApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUserTokenApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUser_RoleApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUser_UserGroupApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ISharedUser_UserGroupRoleApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "__Entities_Groups_00_Name__ServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "IShared__Entities_Name__ApplicationService_AuthGen_.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "Localizations": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Templates": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Pots": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "Models": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "EntityModels": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "RoleClaimModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "RoleModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UserClaimModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UserGroupModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UserGroupRequestModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UserGroupRoleModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UserLoginModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UserModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UserTokenModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "User_RoleModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "User_UserGroupModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "User_UserGroupRoleModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Protos": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "EntityModelProtos": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Entities": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ReferenceEntities": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "EnumReference.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "__Entities_Groups_00_Name__EntityModelProtos": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "__Entities_Name__Proto.proto.txt": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }

                                }
,
                                readonly "ServiceProtos": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "__Entities_Groups_00_Name__ApplicationServiceProtos": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "__Entities_Name__ApplicationServiceProto.proto.txt": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "Services": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "SharedRoleApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedRoleClaimApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUserApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUserClaimApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUserGroupApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUserGroupRequestApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUserGroupRoleApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUserLoginApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUserTokenApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUser_RoleApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUser_UserGroupApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SharedUser_UserGroupRoleApplicationService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "__Entities_Groups_00_Name__Services": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Shared__Entities_Name__ApplicationService_AuthGen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "SharedAuth.Application.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedAuth.Domain": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedAuth.Domain.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedAuth.Infrastructure": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Auth": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AccountClaimsPrincipalFactories": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "CustomUserFactory.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "AuthorizationMessageHandlers": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "CustomAuthenticationMessageHandler.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Extensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "MicrosoftExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "AspNetCoreExtensions": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "WebAssemblyHostBuilderExtensions": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "BuildAuthClientExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }

                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedAuth.Infrastructure.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Auth.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Auth.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Auth.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Auth.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Auth.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Auth.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "AuthoBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }
,
                readonly "DebateBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Debate.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Debate.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Debate.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Debate.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Debate.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Debate.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Debate.IntegrationEvents": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Debate.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Debate.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Debate.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Debate.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Debate.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Debate.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Debate.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "EmailBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Email.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".vs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Email.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "EmailApplicationConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Email.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Email.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "EmailDomainConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Email.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "DbContexts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "EmailDbContext.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Email.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "EmailInfrastructureConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Extensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "MicrosoftExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "AddEmailDbContextPoolsExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddEmailDbContextsExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddEmailServerExtensions.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Email.IntegrationEvents": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Email.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "EmailIntegrationEventsConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "SharedEmail.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Interfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "SevriceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ISharedSampleApplicationService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "Localizations": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Templates": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Pots": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedEmail.Application.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedEmailApplicationConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedEmail.Domain": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedEmail.Domain.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedEmailDomainConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedEmail.Infrastructure": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedEmail.Infrastructure.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedEmailInfrastructureConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Email.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Email.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Email.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Email.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Email.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Email.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "JobBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Job.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Job - Backup.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Job.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Job.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Job.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Job.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Job.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Job.IntegrationEvents": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Job.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Job.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Job.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Job.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Job.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Job.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Job.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "MapBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Map.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Map.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Map.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Map.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Map.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Map.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Map.IntegrationEvents": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Map.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "SharedMap.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedMap.Application.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedMap.Domain": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedMap.Domain.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedMap.Infrastructure": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedMap.Infrastructure.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "ShopBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "SharedShop.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Localizations": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Templates": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Pots": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedShop.Application.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedShopApplicationConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedShop.Domain": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedShop.Domain.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedShopDomainConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedShop.Infrastructure": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedShop.Infrastructure.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedShopInfrastructureConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Shop.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".vs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Shop.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "ShopApplicationConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shop.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Shop.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "ShopDomainConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shop.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "DbContexts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "ShopDbContext.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Extensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "MicrosoftExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "AddShopDbContextPoolsExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddShopDbContextsExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddShopServerExtensions.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Shop.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "ShopInfrastructureConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Shop.IntegrationEvents": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Shop.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "ShopIntegrationEventsConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Shop.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shop.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shop.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shop.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shop.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shop.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "SurveyBoundedContext": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Survey.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Survey - Backup.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Survey.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Survey.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Survey.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Survey.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Survey.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Survey.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Survey.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Survey.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Survey.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Survey.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Survey.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "__EBN__BoundedContext_gen_": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Shared__Entities_BoundedContext_Name__.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Interfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "SevriceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "__Entities_Groups_00_Name__ServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "IShared__Entities_Name__ApplicationService_Gen_.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "Localizations": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "Templates": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Pots": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Services": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Groups_00_Name__Services": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Shared__Entities_Name__ApplicationService_Gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "Shared__Entities_BoundedContext_Name__.Application.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shared__Entities_BoundedContext_Name__ApplicationConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shared__Entities_BoundedContext_Name__.Domain": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shared__Entities_BoundedContext_Name__.Domain.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shared__Entities_BoundedContext_Name__DomainConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Shared__Entities_BoundedContext_Name__.Infrastructure": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shared__Entities_BoundedContext_Name__.Infrastructure.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Shared__Entities_BoundedContext_Name__InfrastructureConfig.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Tests": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "__Entities_BoundedContext_Name__.ArchTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "__Entities_BoundedContext_Name__.ArchTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "__Entities_BoundedContext_Name__.IntegrationTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "__Entities_BoundedContext_Name__.IntegrationTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "__Entities_BoundedContext_Name__.UnitTests": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "UnitTest1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "__Entities_BoundedContext_Name__.UnitTests.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "__Entities_BoundedContext_Name__.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".vs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_BoundedContext_Name__.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_BoundedContext_Name__ApplicationConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "__Entities_BoundedContext_Name__.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Entities": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Groups_00_Name__Entities": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name___Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Interfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "RepositoryInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Groups_00_Name__RepositoryInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "I__Entities_Name__Repository_Gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "ServiceInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Groups_00_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "I__Entities_Name__DomainService_Gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Specs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Groups_00_Name__Specs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name__Specs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "ValueObjects": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Ids": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Groups_00_Name__Ids": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "__Entities_Name__Id_Gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "__Entities_BoundedContext_Name__.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_BoundedContext_Name__DomainConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "__Entities_BoundedContext_Name__.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "DbContexts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_BoundedContext_Name__DbContext_Gen_.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "EntityTypeConfigurations": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name__EntityTypeConfiguration_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Extensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "MicrosoftExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Add__Entities_BoundedContext_Name__DbContextPoolsExtension_gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "Add__Entities_BoundedContext_Name__DbContextsExtension_gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "Add__Entities_BoundedContext_Name__ServerExtensions_gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Repositories": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Groups_00_Name__Repositories": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name__Repository_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "__Entities_BoundedContext_Name__.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_BoundedContext_Name__InfrastructureConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "__Entities_BoundedContext_Name__.IntegrationEvents": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_BoundedContext_Name__.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_BoundedContext_Name__IntegrationEventsConfig.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }

            }
,
            readonly "deploy": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "k8s": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "apigateway.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "basket.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "catalog.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "components": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "pubsub-rabbitmq.yaml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "pubsub-stan.yaml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "sendmail.yaml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "statestore.yaml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "dapr-config.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "identity.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "namespace.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "nats-streaming.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "ordering.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "payment.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "rabbitmq.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "redis.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "secrets.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "seq.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "sqldata.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "start-all.ps1": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "start-all.sh": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "stop-all.ps1": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "stop-all.sh": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "webshoppingagg.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "webspa.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "webstatus.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "zipkin.yaml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }

            }
,
            readonly "Dlls": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "OrchardDlls": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Castle.Core.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "de": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "es": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Fluid.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "fr": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Humanizer.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Irony.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "it": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "ja": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "ko": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Microsoft.AspNetCore.JsonPatch.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.AspNetCore.Mvc.NewtonsoftJson.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.AspNetCore.Mvc.Razor.Extensions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.AspNetCore.Razor.Language.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.Bcl.AsyncInterfaces.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.CodeAnalysis.CSharp.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.CodeAnalysis.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.CodeAnalysis.Razor.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.CodeAnalysis.VisualBasic.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.CodeAnalysis.Workspaces.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Microsoft.Extensions.DependencyModel.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Newtonsoft.Json.Bson.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Newtonsoft.Json.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.Abstractions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.DisplayManagement.Abstractions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.DisplayManagement.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.DisplayManagement.Liquid.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.DynamicCache.Abstractions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.Infrastructure.Abstractions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.Liquid.Abstractions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.Localization.Abstractions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.Mvc.Core.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "OrchardCore.ResourceManagement.Abstractions.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "pl": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "PoExtractor.Core.deps.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Core.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Core.pdb": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.CS.deps.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.CS.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.CS.pdb": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.deps.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.pdb": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.VB.deps.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.VB.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.DotNet.VB.pdb": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Liquid.deps.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Liquid.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Liquid.pdb": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.OrchardCore.deps.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.OrchardCore.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.OrchardCore.exe": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.OrchardCore.pdb": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.OrchardCore.runtimeconfig.dev.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.OrchardCore.runtimeconfig.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Razor.deps.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Razor.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "PoExtractor.Razor.pdb": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "pt-BR": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "ref": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "PoExtractor.OrchardCore.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "refs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.AspNetCore.Antiforgery.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Authentication.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Authentication.Cookies.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Authentication.Core.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Authentication.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Authentication.OAuth.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Authorization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Authorization.Policy.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Components.Authorization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Components.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Components.Forms.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Components.Server.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Components.Web.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Connections.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.CookiePolicy.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Cors.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Cryptography.Internal.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Cryptography.KeyDerivation.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.DataProtection.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.DataProtection.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.DataProtection.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Diagnostics.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Diagnostics.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Diagnostics.HealthChecks.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.HostFiltering.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Hosting.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Hosting.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Hosting.Server.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Html.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Http.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Http.Connections.Common.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Http.Connections.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Http.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Http.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Http.Features.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.HttpOverrides.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.HttpsPolicy.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Identity.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Localization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Localization.Routing.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Metadata.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.ApiExplorer.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.Core.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.Cors.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.DataAnnotations.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.Formatters.Json.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.Formatters.Xml.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.Localization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.Razor.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.RazorPages.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.TagHelpers.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Mvc.ViewFeatures.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Razor.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Razor.Runtime.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.ResponseCaching.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.ResponseCaching.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.ResponseCompression.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Rewrite.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Routing.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Routing.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Server.HttpSys.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Server.IIS.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Server.IISIntegration.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Server.Kestrel.Core.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Server.Kestrel.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.Session.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.SignalR.Common.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.SignalR.Core.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.SignalR.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.SignalR.Protocols.Json.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.StaticFiles.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.WebSockets.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.AspNetCore.WebUtilities.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CSharp.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Caching.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Caching.Memory.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.Binder.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.CommandLine.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.FileExtensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.Ini.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.Json.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.KeyPerFile.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.UserSecrets.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Configuration.Xml.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.DependencyInjection.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Diagnostics.HealthChecks.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.FileProviders.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.FileProviders.Composite.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.FileProviders.Embedded.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.FileProviders.Physical.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.FileSystemGlobbing.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Hosting.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Hosting.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Http.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Identity.Core.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Identity.Stores.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Localization.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Localization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.Abstractions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.Configuration.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.Console.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.Debug.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.EventLog.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.EventSource.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Logging.TraceSource.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.ObjectPool.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Options.DataAnnotations.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Options.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Extensions.WebEncoders.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.JSInterop.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Net.Http.Headers.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.VisualBasic.Core.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.VisualBasic.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Win32.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.Win32.Registry.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "mscorlib.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "netstandard.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.AppContext.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Buffers.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Collections.Concurrent.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Collections.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Collections.Immutable.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Collections.NonGeneric.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Collections.Specialized.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ComponentModel.Annotations.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ComponentModel.DataAnnotations.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ComponentModel.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ComponentModel.EventBasedAsync.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ComponentModel.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ComponentModel.TypeConverter.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Configuration.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Console.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Core.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Data.Common.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Data.DataSetExtensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Data.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.Contracts.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.Debug.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.DiagnosticSource.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.EventLog.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.FileVersionInfo.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.Process.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.StackTrace.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.TextWriterTraceListener.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.Tools.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.TraceSource.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Diagnostics.Tracing.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Drawing.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Drawing.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Dynamic.Runtime.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Formats.Asn1.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Globalization.Calendars.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Globalization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Globalization.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.Compression.Brotli.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.Compression.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.Compression.FileSystem.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.Compression.ZipFile.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.FileSystem.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.FileSystem.DriveInfo.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.FileSystem.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.FileSystem.Watcher.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.IsolatedStorage.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.MemoryMappedFiles.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.Pipelines.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.Pipes.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.IO.UnmanagedMemoryStream.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Linq.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Linq.Expressions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Linq.Parallel.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Linq.Queryable.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Memory.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Http.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Http.Json.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.HttpListener.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Mail.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.NameResolution.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.NetworkInformation.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Ping.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Requests.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Security.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.ServicePoint.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.Sockets.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.WebClient.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.WebHeaderCollection.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.WebProxy.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.WebSockets.Client.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Net.WebSockets.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Numerics.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Numerics.Vectors.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ObjectModel.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.DispatchProxy.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.Emit.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.Emit.ILGeneration.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.Emit.Lightweight.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.Metadata.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Reflection.TypeExtensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Resources.Reader.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Resources.ResourceManager.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Resources.Writer.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.CompilerServices.Unsafe.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.CompilerServices.VisualC.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Handles.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.InteropServices.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.InteropServices.RuntimeInformation.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Intrinsics.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Loader.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Numerics.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Serialization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Serialization.Formatters.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Serialization.Json.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Serialization.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Runtime.Serialization.Xml.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.AccessControl.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Claims.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Cryptography.Algorithms.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Cryptography.Cng.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Cryptography.Csp.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Cryptography.Encoding.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Cryptography.Primitives.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Cryptography.X509Certificates.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Cryptography.Xml.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Permissions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Principal.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.Principal.Windows.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Security.SecureString.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ServiceModel.Web.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ServiceProcess.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Text.Encoding.CodePages.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Text.Encoding.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Text.Encoding.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Text.Encodings.Web.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Text.Json.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Text.RegularExpressions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Channels.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Overlapped.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Tasks.Dataflow.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Tasks.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Tasks.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Tasks.Parallel.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Thread.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.ThreadPool.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Threading.Timer.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Transactions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Transactions.Local.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.ValueTuple.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Web.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Web.HttpUtility.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Windows.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Windows.Extensions.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.Linq.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.ReaderWriter.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.Serialization.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.XDocument.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.XmlDocument.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.XmlSerializer.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.XPath.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "System.Xml.XPath.XDocument.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "WindowsBase.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "ru": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "System.Composition.AttributedModel.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "System.Composition.Convention.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "System.Composition.Hosting.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "System.Composition.Runtime.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "System.Composition.TypedParts.dll": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tr": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "zh-Hans": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "zh-Hant": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }

            }
,
            readonly "Docker": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly ".dockerignore": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "bin": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "Create-DockerfileSolutionRestore.ps1": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "docker-compose.dcproj": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "docker-compose.dcproj.user": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "docker-compose.override.yml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "docker-compose.yml": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "DockerfileSolutionRestore.txt": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "obj": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }

            }
,
            readonly "identityServer_dev_sqlServer.bat": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "obj": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "openIdDict_dev_sqlServer.bat": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "package-lock.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "Setups": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "Setup": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Client": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "App.razor": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Pages": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Counter.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "FetchData.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Index.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Program.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Properties": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "launchSettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Setup.Client.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Shared": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "MainLayout.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "MainLayout.razor.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "NavMenu.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "NavMenu.razor.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SurveyPrompt.razor": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "wwwroot": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "app.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "bootstrap": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "bootstrap.min.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "open-iconic": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "font": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "open-iconic-bootstrap.min.css": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "fonts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "open-iconic.eot": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.otf": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.svg": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.ttf": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "open-iconic.woff": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }
,
                                    readonly "FONT-LICENSE": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ICON-LICENSE": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "README.md": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "favicon.ico": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "icon-512.png": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.html": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "manifest.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "service-worker.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "service-worker.published.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "_Imports.razor": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Server": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".vs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Controllers": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "WeatherForecastController.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Pages": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Error.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Error.cshtml.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Program.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Properties": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "launchSettings.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Setup.Server.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Setup.Server.csproj.user": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Startup.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Temp": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt.error.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input._TemplateData_bce2ef18-6fac-4801-abc9-e47f25ae40e9.temp.txt.xml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.output.tt.temp.txt": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Setup.Shared.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "WeatherForecast.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }
,
                readonly "Shared": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "SetupLibrary.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Attributes": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AliasAttribute.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Models": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "Dictionaries": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "TemplateExtensionToCodeTypeDic.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "TemplateAttribute.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateAttributeProperty.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateAttributeSignature.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateBase.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateBoundedContext.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateCodeType.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateCommand.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateConstructor.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateContext.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateData.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateDbContext.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateDirectory.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateEntity.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateFile.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateGroup.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateInterface.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateInterfaceSignature.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateLocalization.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateLocalizationPluralForm.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateMethod.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateMethodSignature.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateModel.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateParameter.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateParameterSignature.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateProject.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateProperty.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplatePropertyPath.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplatePropertySignature.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateSection.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateSignatureBase.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateStore.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateTokenInfo.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateType.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateTypeSignature.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "TemplateUIProject.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "SetupLibrary.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Utilities": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "CombinatorOfLists": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "CombinatorOfLists.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "SetupLibrary.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "SetupLibrary.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "SetupLibrary.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Extensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "IServiceCollectionExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AddSetupServicesExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Services": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "CodeGeneratorServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "CodeGeneratorService": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "CodeGeneratorService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_Clean.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_CreateData.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_CreateLocalParameters.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_CreateParameters.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_GenerateCodes.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_GetAllMatchingNameToTokenInfoDicWithConstraint.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_GetContextTemplate.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_GetFirstCommandContent.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_GetMatchingNames.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateDbContexts.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateLocalizations.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateLocalizations_ExtractPos.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateLocalizations_ParsePoFileAsync.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateLocalizations_PopulateCustomPoFileResources.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateLocalizations_PopulateEnumResources.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateLocalizations_PopulateTemplatePoFileResources.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateModels.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateProjects.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_PopulateServices.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_Process.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessArgs.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessBulkRefs.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessBulkRunIfs.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessContents.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessContentsBody.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessFile.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessPaths.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessPathsBody.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessProject.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProcessRef.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ProjectNameToProjectDic.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "CodeGeneratorService_ShouldRun.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "DatabaseSetupServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "DatabaseSetupService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "GeoTargetsDatabaseSetupService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ReferencesDatabaseSetupService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "IdGeneratorServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ObjectIdGeneratorService": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IObjectIdGeneratorService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "ObjectIdGeneratorService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "IdServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ObjectIdService": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ObjectIdService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "SetupLibrary.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Startup.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }

            }
,
            readonly "Shared": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "Core.Application": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "bin": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "CommandBase.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Core.Application.csproj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Emails": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "EmailMessage.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Interfaces": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "SevriceInterfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "IRoleApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IRoleClaimApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUserApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUserClaimApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUserGroupApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUserGroupRequestApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUserGroupRoleApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUserLoginApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUserTokenApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUser_RoleApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUser_UserGroupApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "IUser_UserGroupRoleApplicationService.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "__Entities_Groups_00_Name__ServiceInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "I__Entities_Name__ApplicationService_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "QueryBase.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Services": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "RoleApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "RoleClaimApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserClaimApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupRequestApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupRoleApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserLoginApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserTokenApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_RoleApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_UserGroupApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_UserGroupRoleApplicationService.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_Groups_00_Name__ApplicationServices": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Name__ApplicationService_Gen_.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "Core.Domain": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "bin": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Core.Domain.csproj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Entities": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "ReferenceEntities": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "EnumReference.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "__Entities_Groups_00_Name__Entities": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Name___Gen_.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Entity.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Exceptions": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "BusinessRuleValidationException.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Interfaces": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "IAggregateRoot.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "IBusinessRule.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "IDomainEvent.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "IRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "ServiceInterfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Groups_00_Name__ServiceInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "I__Entities_Name__DomainService_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Services": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "__Entities_Groups_00_Name__Services": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Name__DomainService_Gen_.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Specs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "__Entities_Groups_00_Name__Specs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Name__Specs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "TypedIdValueBase.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "ValueObject.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "ValueObjects": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Ids": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Groups_00_Name__Ids": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Name__Id_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }

                }
,
                readonly "Core.Infrastructure": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "bin": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Core.Infrastructure.csproj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "DbContextConnectionConfiguration .cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "DbContexts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "ApplicationDbContext.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "ApplicationDbContextBackup.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "EfRepository.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Emails": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "EmailsConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "EmailSender.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "EntityTypeConfigurationBase.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "EntityTypeConfigurations": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Name__EntityTypeConfiguration_Gen_.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Extensions": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "HotChocolateExtensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "IObjectFieldDescriptorExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IObjectFieldDescriptorExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "UseDbContextExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UseUpperCaseExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "MicrosoftExtensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AspNetCoreExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IApplicationBuilderExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "UseSecurityHeaders.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UseServerExtensions.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UseSwaggerUIExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "IMvcBuilderExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "AddDaprExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "UseODataExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "EntityFrameworkCoreExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "DbContextExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SetExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "DbContextOptionsBuilderExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "BuildDbContextOptionsExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "IConfigurationBuilderExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AddAppSettingsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "IServiceCollectionExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AddControllersWithViewsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddCorsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddDaprClientExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddDbContextPoolsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddDbContextsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddEfRepositoriesExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddGraphQLServerExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddGrpc.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddLiveReloadExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddLocalizationExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddRazorPagesExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddServerExtensions.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddSignalRExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddSwaggerDocExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddSwaggerGenExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ConfigureApplicationCookieExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ConfigureIdentityOptionsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ConfigureIISOptionsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ConfigureIISServerOptionsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ConfigureMvcOptionsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ConfigureSerilogExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ConfigureTwilioExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "ModelBuilderExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AddCommonPropertiesExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ApplyConfigurationsFromAssemblyExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "DefinePrimaryKeysFromKeyAttributesExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SetNoActionsForUpdatedByOptionalAndCreatedByOptionalExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "OdataExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ODataConventionModelBuilderExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SetEntitiesExtension_ServerGen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "ObjectExtensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "DescriptionAttributeMethodExtension.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Graphql": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Models": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "CustomGraphqlTypeInspector.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Inbox": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "InboxMessage.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Interfaces": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "IUnitOfWork.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "StronglyTypedIdValueConverterSelector .cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "UnitOfWork.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }
,
                readonly "Library": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Library.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Interfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "ServiceInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AssemblyServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IAssemblyService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "EvalServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IEvalService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "GitServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IGitService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "JsServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IJsService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "PathServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IPathService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "RegexServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IRegexService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "SerializerServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IXmlSerializerService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "TemplateServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ITemplateService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "UrlServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IUrlService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "__Services_Groups_0_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "I__Services_Name__Service_Gen3_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "Library.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Library.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Library.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Library.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Library.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Services": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AssemblyServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AssemblyService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "EvalServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "EvalService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_EvaluateBulkExpressions.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_EvaluateBulkStatements.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_EvaluateBulkTemplates.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_EvaluateExpression.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_EvaluateStatements.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_EvaluateTemplate.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetAllTypes.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetClassName.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetFooter.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetHeader.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetIntro.backdup.txt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetParametersTemplate.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetParametersTemplate.cs.BACKUP.txt": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_GetTypeFromClassName.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "EvalService_Process.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "GitServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "GitService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "JsServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "JsService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "PathServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "PathService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "RegexServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "RegexService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "SerializerServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "XmlSerializerService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "TemplateServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "TemplateService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "TemplateService_Slow.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UrlServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UrlService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "__Services_Groups_0_Name__Services": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Services_Name__Service_GenX_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Shared.Library.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedLibrary.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Extensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "SystemExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ReflectionExtensions": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ConstructorInfoExtensions": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "GetParametersSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "MethodInfoExtensions": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "GetAccessModifierSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetGenericSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetMethodArgumentsSignatureAsListExension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetNameSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetNameWithGenericSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetParametersSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetTypeSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "PropertyInfoExtensions": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "GetAccessModifierSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetNameSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "GetTypeSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "TypeExtensions": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "IsSimpleTypeExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "TypeExtensionMethods.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "TypeSignatureExtension.cs": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }
,
                                    readonly "ThreadingExtneions": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "TaskExtension.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "Interfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "AssemblyServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedAssemblyService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "EvalServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedEvalService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "JsServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedJsService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "PathServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedPathService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "RegexServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedRegexService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "SerializerServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedXmlSerializerService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "TemplateServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedTemplateService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "UrlServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "ISharedUrlService.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "__Services_Groups_0_Name__ServiceInterfaces": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "IShared__Services_Name__Service.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedLibrary.Application.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "StringEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ServiceLifetimeStringEnums": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ServiceLifetimeStringEnum.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "TypeConverters": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "DescriptionEnumConverter.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "SharedLibrary.Domain": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Class1.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedLibrary.Domain.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedLibrary.Infrastructure": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Services": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AssemblyServices": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SharedAssemblyService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "EvalServices": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SharedEvalService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "RegexServices": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SharedRegexService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "SerializerServices": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SharedXmlSerializerService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "UrlServices": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "SharedUrlService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "__Services_Groups_00_Name__Services": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "Shared__Services_Name__Service_Gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "SharedLibrary.Infrastructure.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "Presentation": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "Presentation.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Interfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "TranslationUiServiceInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ITranslationUiService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Presentation.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Presentation.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Class1.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Entities": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "LocalizationEntryEntity.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "LocalizationPluralFormEntity.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Presentation.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "Presentation.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Presentation.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Services": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "TranslationServices": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "TranslationUiService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "Shared": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "SharedPresentation.Application": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Interfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "MaterialServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IMaterialThemeSharedUiService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "TranslationServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "ITranslationUiSharedService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedPresentation.Application.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedPresentation.Domain": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Models": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "LocalizationEntry.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "LocalizationPluralForm.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedPresentation.Domain.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "SharedPresentation.Infrastructure": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Services": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "MaterialServices": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "MaterialThemeSharedUiService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "TranslationServices": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "TranslationSharedUiService.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "SharedPresentation.Infrastructure.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }
,
                readonly "Shared": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "SharedCore.Application": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Dtos": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "SettingsDtos": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AppSettingsDto.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ProjectSettingsDto.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Interfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "SevriceInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "__Entities_Groups_00_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IShared__Entities_Name__ApplicationService_Gen_.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "Models": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "ReferenceModels": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "EnumReferenceModel.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "TextMessageProviderModels": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "TwilioModels": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "TwilioVerifySettingModel.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Protos": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "greet.proto": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "Services": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Groups_00_Name__Services": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "GreeterService.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Shared__Entities_Name__ApplicationService_Gen_.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "SharedCore.Application.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "SharedCore.Domain": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "Attributes": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "ServiceAttributes": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ServiceLifetimeAttribute.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Enums": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AddressEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AddressEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "AgeEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AgeCategoryEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "AssetEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AssetAsDocumentEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "FamilyEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "FamilyRelationEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "GenderEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "GenderEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "HouseholdEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "HouseholdRoleEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "JobEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "JobCategoryEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "JobRoleEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "JobTitleEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "MessageEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "MessageStateEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "NotificationIconEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "OnlineEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "PregnancyEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "GerminalStageEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "PrenatalStageEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "ProgrammingLanguageEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ClientWebProgrammingLanguageEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "RelationshipEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "RelationshipEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "SecurityEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ViewableByEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "SurveyEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "QuestionEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ServerProgrammingLanguageEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "SurveyQuestionAnswerEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "UserEnums": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "UserActionEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserGroupRoleEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "UserReactionEnum.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "Interfaces": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "ModelInterfaces": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IAuthoredAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IAuthoredBy.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICanAdd.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICanDelete.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICanRead.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICanUpdate.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICreatedAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICreatedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICreatedBy.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ICreatedByOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IDescription.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IDescriptionHtml.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IDisliked.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IDislikedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IEditedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IEndAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IEndedOn.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IFromUser.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IGlobalId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IHtml.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IHtmlOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IJoinedAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IJoinedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IJson.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IJsonOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ILaughedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ILeftAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ILeftAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ILiked.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ILikedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ILocalId.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IOwnedAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IOwnedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IOwnedBy.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IOwnedByOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IPublished.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRead.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IReadAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRequestedAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRequestedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRequestedBy.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRequestedByOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IRequestReceivedByOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ISentAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ISentByOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ISentTo.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IShocked.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IShockedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "ISmiledAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IStartAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IStartedOnOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IToUser.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUpdated.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUpdatedAt.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUpdatedAtOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUpdatedBy.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUpdatedByOptional.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "IUrl.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "SharedCore.Domain.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "SharedCore.Infrastructure": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "AppSettings": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "ConnectionStringsSetting.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SerilogSetting.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "SharedAppsettings.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "bin": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "Extensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "MicrosoftExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AspNetCoreExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "WebAssemblyHostBuilderExtensions": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "BuildClientExtension.cs": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "AddNewtonsoftJsonExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "AddServicesExtension.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }
,
                        readonly "obj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "SharedCore.Infrastructure.csproj": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }
,
                readonly "SharedPackages": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }

            }
,
            readonly "sharedAppsettings.Development.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "sharedAppsettings.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "Tests": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "ArchTests": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "ArchTests.csproj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "bin": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "UnitTest1.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }
,
                readonly "IntegrationTests": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "bin": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "IntegrationTests.csproj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "UnitTest1.cs": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }
,
                readonly "__Entities_BoundedContext_Name__.ArchTests": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "DbContexts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "AuthDbContext.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "EntityTypeConfigurations": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "RoleClaimEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "RoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserClaimEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupRequestEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupRoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserLoginEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserTokenEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_RoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_UserGroupEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_UserGroupRoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Name__EntityTypeConfiguration_AuthGen_.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Extensions": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "MicrosoftExtensions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "AspNetCoreExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "IApplicationBuilderExtensions": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "UseAuthServerExtensions.cs": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "IServiceCollectionExtensions": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AddAuthDbContextPoolsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddAuthDbContextsExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddAuthenticationExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddAuthServerExtensions.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddClientAuthServerExtensions.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddIdentityExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddIdentityServerAuthenticationExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddOpenIddictDbContextExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddOpenIddictDbContextPoolExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddOpenIddictExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "AddStoresExtension.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "Identity": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "CustomRoleStore.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "CustomUserStore.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "OpenIdDict": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "CustomOpenIdApplication.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "CustomOpenIdAuthorization.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "CustomOpenIdScope.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "CustomOpenIdToken.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "TokenProviders": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "CustomemailconfirmationTokenProvider.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "Repositories": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "RoleClaimRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "RoleRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserClaimRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupRequestRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserGroupRoleRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserLoginRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "UserTokenRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_RoleRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_UserGroupRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "User_UserGroupRoleRepository.cs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "__Entities_Groups_00_Name__Repositories": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "__Entities_Name__Repository_AuthGen_.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }

            }
,
            readonly "tools": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "extensions": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "vs extensions": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "CodeGenerator": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly ".vs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "bin": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CodeGenerator.csproj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CodeGenerator.csproj.user": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CodeGenerator.sln": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CodeGeneratorPackage.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Commands": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "GenerateCode.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Common": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "ContentType.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "GenerateCodeHandler.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Helpers": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "PathHelper.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "obj": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "Options": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "BaseOptionPage.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "BaseOptionsModel.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "DialogPageProvider.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "GeneralOptions.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Properties": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "AssemblyInfo.cs": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "Resources": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "GenerateCode.png": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "GenerateResource.png": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "source.extension.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "source.extension.vsixmanifest": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "VSCommandTable.cs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "VSCommandTable.vsct": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "vs-code-extensions": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "code-genenator3": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly ".gitignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".vscode": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "launch.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "settings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "tasks.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly ".vscodeignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "client": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "node_modules": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "package-lock.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "package.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "src": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "extension.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "tsconfig.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "node_modules": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package-lock.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "README.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "server": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "node_modules": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "package-lock.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "package.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "src": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "embeddedSupport.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "languageModelCache.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "languageModes.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "modes": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "cssMode.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "htmlMode.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "server.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "tsconfig.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "syntaxes": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "html1.tmLanguage.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "tsconfig.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "tslint.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "code-generator": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly ".eslintrc.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".gitignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".vscode": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "extensions.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "launch.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "settings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "tasks.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly ".vscodeignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "build": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "node-extension.webpack.config.js": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "CHANGELOG.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "dist": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "node_modules": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package-lock.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "README.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "src": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "extension.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "test": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "runTest.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "suite": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "extension.test.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }

                            }
,
                            readonly "tsconfig.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "vsc-extension-quickstart.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "color-picker": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly ".eslintignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".eslintrc.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".eslintrc.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".gitignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".vscode": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "extensions.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "launch.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "settings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "tasks.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly ".vscodeignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "client": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "node_modules": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "out": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "extension.js": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "package.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "src": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "extension.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "tsconfig.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "node_modules": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "README.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "server": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "node_modules": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "out": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "IColors.js": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "server.js": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "package.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "src": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "server.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "tsconfig.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "tsconfig.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "files-and-folders-renamer": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly ".eslintrc.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".gitignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".vscode": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "extensions.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "launch.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "settings.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "tasks.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly ".vscodeignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "CHANGELOG.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "node_modules": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "out": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "hello": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "src": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "extension.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "test": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "runTest.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "suite": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "extension.test.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "index.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }

                                        }

                                    }

                                }
,
                                readonly "solid": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "assets": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "favicon.0e726a38.ico": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "index.2d7b8374.css": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "index.cb6a5f35.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "vendor.bced61aa.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "index.html": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "src": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "App.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "components": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "Checkbox.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "FilledTextField.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "NumberInput.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "OutlinedButton.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "OutlinedNumberInput.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "OutlinedTextArea.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "OutlinedTextField.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "RadioButton.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "TextButton.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "index.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "Sidebar.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "validation.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "vite": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "plugins": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "vite-plugin-custom.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }
,
                                    readonly "vite.config.js": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "src": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "extension.js": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "routes": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "rename-files-and-folders": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "events": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "index.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }
,
                                            readonly "index.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "models": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "rename-files-and-folders-content-diffs-by-line-number.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "rename-files-and-folders-options.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "rename-files-and-folders-preview-item.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "rename-files-and-folders-state.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }
,
                                            readonly "services": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "diff.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }
,
                                                readonly "rename-files-and-folders.service.js": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }

                                        }
,
                                        readonly "sidebar": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "view-base.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "services": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "webview-service.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "test": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "runTest.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "suite": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "extension.test.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "index.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }
,
                                    readonly "watch.js": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }
,
                            readonly "package-lock.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "README.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "solid": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly ".gitignore": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "dist": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "index.html": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "node_modules": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "package-lock.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "package.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "pnpm-lock.yaml": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "README.md": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "src": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "App.module.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "App.tsx": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "assets": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "favicon.ico": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "components": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "Checkbox.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "FilledTextField.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "NumberInput.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "OutlinedButton.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "OutlinedNumberInput.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "OutlinedTextArea.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "OutlinedTextField.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "RadioButton.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "TextButton.tsx": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "global.d.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "index.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "index.tsx": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "logo.svg": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "Sidebar.tsx": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "styles": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "material": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "button": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "_index.scss": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }
,
                                            readonly "checkbox": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "_index.scss": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }
,
                                            readonly "radio-button": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "_index.scss": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }
,
                                            readonly "textfield": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string,
                                                readonly "_index.scss": {
                                                    toAbsolutePath:()=> string,
                                                    toRelativePath:(relativeTo?:string)=> string
                                                }

                                            }

                                        }

                                    }
,
                                    readonly "validation.tsx": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "tsconfig.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "plugins": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "vite-plugin-custom.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "vite.config.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "src": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "extension.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "routes": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "rename-files-and-folders": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "events": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "models": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "rename-files-and-folders-content-diffs-by-line-number.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "rename-files-and-folders-options.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "rename-files-and-folders-preview-item.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "rename-files-and-folders-state.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "services": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "diff.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "rename-files-and-folders.service.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }
,
                                    readonly "sidebar": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "view-base.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "services": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "webview-service.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "styles": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "reset.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "vscode.css": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "test": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "runTest.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "suite": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "extension.test.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "watch.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "tsconfig.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "vsc-extension-quickstart.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }

                }

            }
,
            readonly "Tye": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "bin": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "components": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "configurations": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "obj": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "Program.cs": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "Tye.csproj": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }

            }

        }
,
        readonly "dart": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string
        }
,
        readonly "js": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string,
            readonly ".eslintrc.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".eslintrc.ts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".gitignore": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".prettierrc.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".prettierrc.ts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".stylelintrc copy.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".stylelintrc.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".stylelintrc.ts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".stylelintrcignore": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly ".vscode": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "launch.json": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "settings.json": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "tasks.json": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }

            }
,
            readonly "apps": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "auth": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly ".eslintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".eslintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".vscode": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "launch.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "settings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "tasks.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "bin": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "compiled": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "configs.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "node_modules": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package-lock.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "paths.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "src": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "app.controller.spec.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.controller.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.module.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.service.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "logo": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "favicon.ico": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "icon-512.png": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "main.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "modules": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "service-worker": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "templates": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "_Layout.cshtml": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "_Layout.html": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "vite": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "configs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite.shared.config.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-dev": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-dev.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-plugins": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-prod": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-prod.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-shared.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite.module.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "web": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.scss": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "libraries": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "tsconfig.backup.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.dev.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.prod.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }
,
                readonly "blazor-app": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly ".eslintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".eslintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".ignored_node_modules": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".vscode": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "launch.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "settings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "tasks.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "berry.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "codegen-config.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "compiled": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "configs.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Graphql.graphql": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Monikers.imagemanifest": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "node_modules": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package-lock.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "paths.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "src": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "app.controller.spec.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.controller.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.module.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.service.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "logo": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "favicon.ico": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "icon-512.png": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "main.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "modules": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "service-worker": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "templates": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.html": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.webpack.html": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "vite": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "configs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite.shared.config.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-dev": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-dev.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-plugins": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-prod": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-prod.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-shared.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite.module.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "web": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.scss": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "libraries": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "tsconfig.backup.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.dev.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.prod.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }
,
                readonly "react-app": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly ".dockerignore": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".eslintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".eslintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".vscode": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "launch.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "settings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "tasks.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "berry.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "codegen-config.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "configs.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "docker-compose.prod.yml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "docker-compose.yml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Dockerfile": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Dockerfile.prod": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Monikers.imagemanifest": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "nginx.conf": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "node_modules": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package-lock.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "paths.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "src": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "app": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly ".eslintrc.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".gitignore": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly ".next": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "build-manifest.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "cache": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "images": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "0.1635779962459.wPvODNXNDTx7iJgazQaNE7lhRgu5TTxLpKDsXCgFH9E=.svg": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }
,
                                    readonly "webpack": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "client-development": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "0.pack": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "index.pack": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "server-development": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "0.pack": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "1.pack": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "index.pack": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "index.pack.old": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }

                                    }

                                }
,
                                readonly "react-loadable-manifest.json": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "server": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "middleware-manifest.json": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "pages": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_app.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_document.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_error.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "pages-manifest.json": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "webpack-runtime.js": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "static": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "chunks": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "amp.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "main.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "pages": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_app.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_error.js": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "polyfills.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "react-refresh.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "webpack.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "development": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_buildManifest.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_middlewareManifest.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_ssgManifest.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "webpack": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "1dd450bc2eab9938.webpack.hot-update.json": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "webpack.1dd450bc2eab9938.hot-update.js": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "trace": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "next-env.d.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "next.config.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "node_modules": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package-lock.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "package.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "pages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "api": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "hello.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "index.tsx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_app.tsx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "public": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "favicon.ico": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vercel.svg": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "README.md": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "styles": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "globals.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "Home.module.css": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "tsconfig.json": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "app.controller.spec.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.controller.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.module.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.service.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "index.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "logo": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "icon-512.png": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "main.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "modules": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "service-worker": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "templates": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "vite": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "configs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite.shared.config.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-dev": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-dev.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-plugins": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-prod": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-prod.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-shared.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite.module.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "web": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.scss": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "libraries": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "tsconfig.backup.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.dev.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.prod.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "wwwroot": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "assets": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "favicon.0e726a38.ico": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.2879edad.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.2a7c026c.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.3aad8aa0.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.8b3702fd.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "vendor.2bf70d6a.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "vendor.a4488c43.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "index.html": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }
,
                readonly "shared": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly ".eslintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".eslintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".t4codegenrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "appsettings.Development.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "appsettings.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "bin": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "configs.base.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "configs.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "FodyWeavers.xml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "FodyWeavers.xsd": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "index.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Monikers.imagemanifest": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "node": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "__tests__": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "packages": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "name": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "package.json": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "noname": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "package.json": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }

                            }

                        }

                    }
,
                    readonly "node_modules": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "obj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package-lock.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "paths.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "SharedLibrary.csproj": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "src": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "app.controller.spec.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.controller.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.module.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.service.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "functions": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "process-providers.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "rename-extension.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "icon-512.png": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "index.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "logo": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "icon-512.png": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "main.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "modules": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "service-worker": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "templates": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.html": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "vite": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "configs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite.shared.config.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-base": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-base.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-base.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-dev": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-dev.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-plugins": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "services": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "vite-plugin-glob-input": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "vite-plugin-glob-input.service copy.ts.txt": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "vite-plugin-glob-input.service.spec.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "vite-plugin-glob-input.service.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "vite-plugin-base": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "vite-plugin-base.service.spec.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "vite-plugin-base.service.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "vite-plugins": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "vite-plugins.service.spec.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "vite-plugins.service.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-prod": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-prod.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-shared.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite.module.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "web": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "bootstrap": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "custom": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "_index.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_index.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_rounded-pills.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "index.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "components": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "btn": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "index.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_index.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "tooltips": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "index.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_index.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_index.scss.d.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "_index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "defaults": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_blazor-default.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_colors.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_css-reset.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_default.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_material-theme-scrollbar.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_material-theme-search.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_material-theme.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "fontawesome": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "jquery": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "material": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "components": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "animation": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "base": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "button": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "card": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "checkbox": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "chips": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "circular-progress": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "data-table": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "density": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "dialog": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "dom": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "drawer": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "elevation": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "fab": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "feature-targeting": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "floating-label": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "form-field": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "icon-button": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "image-list": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "layout-grid": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "line-ripple": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "linear-progress": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "list": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "menu": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "menu-surface": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "notched-outline": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "progress-indicator": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "radio": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "ripple": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "rtl": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "select": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "shape": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "slider": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "snackbar": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "switch": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "tab": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "tab-bar": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "tab-indicator": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "tab-scroller": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "textfield": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "theme": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "tooltip": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "top-app-bar": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "touch-target": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "typography": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "_index.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_index.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "native": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "components": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "animation": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "base": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "button": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "card": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "checkbox": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "chips": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "circular-progress": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "data-table": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "density": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "dialog": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "dom": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "drawer": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "elevation": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "fab": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "feature-targeting": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "floating-label": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "form-field": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "icon-button": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "image-list": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "layout-grid": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "line-ripple": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "linear-progress": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "list": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "menu": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "menu-surface": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "notched-outline": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "progress-indicator": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "radio": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "ripple": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "rtl": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "select": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "shape": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "slider": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "snackbar": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "switch": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "tab": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "tab-bar": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "tab-indicator": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "tab-scroller": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "textfield": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "theme": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "top-app-bar": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "touch-target": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "typography": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string,
                                            readonly "index.ts": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }
,
                                            readonly "_index.scss": {
                                                toAbsolutePath:()=> string,
                                                toRelativePath:(relativeTo?:string)=> string
                                            }

                                        }
,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }

                                }
,
                                readonly "themes": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "asymetric-theme": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "dark-square-theme": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "default-theme": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "light-square-theme": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "rounded-theme": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string,
                                        readonly "index.ts": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }
,
                                        readonly "_index.scss": {
                                            toAbsolutePath:()=> string,
                                            toRelativePath:(relativeTo?:string)=> string
                                        }

                                    }
,
                                    readonly "_index.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_index.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "variables": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "color-types.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "colors-input.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "export.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "index.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "material-colors-nested.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "material-colors.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "sass-variables.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "text-color-schemes.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "texts-input.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_color-types.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_colors-input.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_export.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_index.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_material-colors-nested.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_material-colors.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_text-color-schemes.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "_texts-input.scss": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "_index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "tailwind": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "tailwind.colors.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "tailwind.config.full.js": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "utils": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string,
                                    readonly "classes.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "clicked-outside.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "color.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "css-extractor.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "hide-list-action.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "menu.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }
,
                                    readonly "style.ts": {
                                        toAbsolutePath:()=> string,
                                        toRelativePath:(relativeTo?:string)=> string
                                    }

                                }
,
                                readonly "_base.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_defaults.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "_index.scss.d.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "_index.scss": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "_index.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }

                    }
,
                    readonly "tsconfig.backup.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.backup.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.base.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.dev.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.prod.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "_Imports.razor": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }
,
                readonly "solid-app": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly ".dockerignore": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".eslintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".eslintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".prettierrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".stylelintrc.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly ".vscode": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "launch.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "settings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "tasks.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "app": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly ".gitignore": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "index.html": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "libs": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "dessert-box": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.tsx": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "types.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }
,
                        readonly "node_modules": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "package-lock.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "package.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "pnpm-lock.yaml": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "README.md": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "src": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "App.css.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "App.tsx": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "assets": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "favicon.ico": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "index.scss": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.tsx": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "logo.svg": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "material-colors.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "sprinkles.css.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "vars.css.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "tsconfig.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "vite.config.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }
,
                    readonly "berry.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "codegen-config.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "configs.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "docker-compose.prod.yml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "docker-compose.yml": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Dockerfile": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Dockerfile.prod": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "Monikers.imagemanifest": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "nginx.conf": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "node_modules": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package-lock.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "package.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "paths.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "src": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "app.controller.spec.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.controller.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.module.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "app.service.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.Development.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "appsettings.json": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "index.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "logo": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "icon-512.png": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "main.ts": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "modules": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }
,
                        readonly "service-worker": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "vite": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "configs": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite.shared.config.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-dev": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-dev.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-plugins": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-prod": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-prod.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite-shared": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }
,
                                readonly "vite-shared.service.ts": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }
,
                            readonly "vite.module.ts": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "web": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "index.scss": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "libraries": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string,
                                readonly "index.scss": {
                                    toAbsolutePath:()=> string,
                                    toRelativePath:(relativeTo?:string)=> string
                                }

                            }

                        }

                    }
,
                    readonly "tsconfig.backup.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.json": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "tsconfig.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.dev.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "vite.prod.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "wwwroot": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string,
                        readonly "assets": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string,
                            readonly "favicon.0e726a38.ico": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.2879edad.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.2a7c026c.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.3aad8aa0.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "index.8b3702fd.css": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "vendor.2bf70d6a.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }
,
                            readonly "vendor.a4488c43.js": {
                                toAbsolutePath:()=> string,
                                toRelativePath:(relativeTo?:string)=> string
                            }

                        }
,
                        readonly "index.html": {
                            toAbsolutePath:()=> string,
                            toRelativePath:(relativeTo?:string)=> string
                        }

                    }

                }

            }
,
            readonly "auth.code-workspace": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "blazor-app.code-workspace": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "compiled": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "configs.ts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "index.ts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "lerna.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "licences.txt": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "node_modules": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "package-lock.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "package.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "paths.ts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "powershell": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "remove-js-files.ps1": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "rename-extension-from-css-to-scss.ps1": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "rename-extension-from-scss-to-css.ps1": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }

            }
,
            readonly "reference.txt": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "scripts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "generate-paths.ts": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "generate-scripts.ts": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "rename-index-ts-to-_index-ts.ts": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "rename-_index-ts-to-index-ts.ts": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "Template": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string,
                    readonly "remove_txt.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }
,
                    readonly "rename.ts": {
                        toAbsolutePath:()=> string,
                        toRelativePath:(relativeTo?:string)=> string
                    }

                }

            }
,
            readonly "shared.code-workspace": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "tsconfig.json": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "tsconfig.ts": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string
            }
,
            readonly "workspaces": {
                toAbsolutePath:()=> string,
                toRelativePath:(relativeTo?:string)=> string,
                readonly "apps.code-workspace": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "auth.code-workspace": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "blazor-app.code-workspace": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }
,
                readonly "shared.code-workspace": {
                    toAbsolutePath:()=> string,
                    toRelativePath:(relativeTo?:string)=> string
                }

            }

        }
,
        readonly "python": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string
        }
,
        readonly "rust": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string
        }

    }
,
    readonly "package.json": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string
    }
,
    readonly "secrets": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string,
        readonly "secretstore.json": {
            toAbsolutePath:()=> string,
            toRelativePath:(relativeTo?:string)=> string
        }

    }
,
    readonly "tye.yaml": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string
    }
,
    readonly "tye.yaml2": {
        toAbsolutePath:()=> string,
        toRelativePath:(relativeTo?:string)=> string
    }

}

export const RootPaths:RootPathsType = createProxy( {
    toAbsolutePath:()=> "C:\\app",
    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "") :  path.relative("C:\\app",  "") },
    ".git": {
        toAbsolutePath:()=> "C:\\app\\.git",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.git") :  path.relative("C:\\app",  "C:\\app\\.git") }
    },
    ".gitignore": {
        toAbsolutePath:()=> "C:\\app\\.gitignore",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\.gitignore") }
    },
    ".idea": {
        toAbsolutePath:()=> "C:\\app\\.idea",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea") :  path.relative("C:\\app",  "C:\\app\\.idea") },
        ".idea.App": {
            toAbsolutePath:()=> "C:\\app\\.idea\\.idea.App",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.App") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.App") },
            ".idea": {
                toAbsolutePath:()=> "C:\\app\\.idea\\.idea.App\\.idea",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.App\\.idea") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.App\\.idea") },
                ".gitignore": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.App\\.idea\\.gitignore",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.App\\.idea\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.App\\.idea\\.gitignore") }
                },
                "encodings.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.App\\.idea\\encodings.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.App\\.idea\\encodings.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.App\\.idea\\encodings.xml") }
                },
                "indexLayout.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.App\\.idea\\indexLayout.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.App\\.idea\\indexLayout.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.App\\.idea\\indexLayout.xml") }
                },
                "vcs.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.App\\.idea\\vcs.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.App\\.idea\\vcs.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.App\\.idea\\vcs.xml") }
                }
            }
        },
        ".idea.Projects": {
            toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects") },
            ".idea": {
                toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects\\.idea",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects\\.idea") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects\\.idea") },
                ".gitignore": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects\\.idea\\.gitignore",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects\\.idea\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects\\.idea\\.gitignore") }
                },
                "aws.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects\\.idea\\aws.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects\\.idea\\aws.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects\\.idea\\aws.xml") }
                },
                "encodings.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects\\.idea\\encodings.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects\\.idea\\encodings.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects\\.idea\\encodings.xml") }
                },
                "indexLayout.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects\\.idea\\indexLayout.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects\\.idea\\indexLayout.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects\\.idea\\indexLayout.xml") }
                },
                "misc.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects\\.idea\\misc.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects\\.idea\\misc.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects\\.idea\\misc.xml") }
                },
                "vcs.xml": {
                    toAbsolutePath:()=> "C:\\app\\.idea\\.idea.Projects\\.idea\\vcs.xml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.idea\\.idea.Projects\\.idea\\vcs.xml") :  path.relative("C:\\app",  "C:\\app\\.idea\\.idea.Projects\\.idea\\vcs.xml") }
                }
            }
        }
    },
    ".tye": {
        toAbsolutePath:()=> "C:\\app\\.tye",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.tye") :  path.relative("C:\\app",  "C:\\app\\.tye") },
        "docker_store": {
            toAbsolutePath:()=> "C:\\app\\.tye\\docker_store",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.tye\\docker_store") :  path.relative("C:\\app",  "C:\\app\\.tye\\docker_store") }
        },
        "process_store": {
            toAbsolutePath:()=> "C:\\app\\.tye\\process_store",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.tye\\process_store") :  path.relative("C:\\app",  "C:\\app\\.tye\\process_store") }
        }
    },
    ".vs": {
        toAbsolutePath:()=> "C:\\app\\.vs",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\.vs") :  path.relative("C:\\app",  "C:\\app\\.vs") }
    },
    "dapr": {
        toAbsolutePath:()=> "C:\\app\\dapr",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr") :  path.relative("C:\\app",  "C:\\app\\dapr") },
        "components": {
            toAbsolutePath:()=> "C:\\app\\dapr\\components",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\components") :  path.relative("C:\\app",  "C:\\app\\dapr\\components") },
            "custom-secretstore.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\components\\custom-secretstore.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\components\\custom-secretstore.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\components\\custom-secretstore.yaml") }
            },
            "email.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\components\\email.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\components\\email.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\components\\email.yaml") }
            },
            "oauth2-client-credential.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\components\\oauth2-client-credential.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\components\\oauth2-client-credential.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\components\\oauth2-client-credential.yaml") }
            },
            "oauth2.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\components\\oauth2.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\components\\oauth2.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\components\\oauth2.yaml") }
            },
            "pubsub.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\components\\pubsub.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\components\\pubsub.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\components\\pubsub.yaml") }
            },
            "redis-state.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\components\\redis-state.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\components\\redis-state.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\components\\redis-state.yaml") }
            }
        },
        "configurations": {
            toAbsolutePath:()=> "C:\\app\\dapr\\configurations",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\configurations") :  path.relative("C:\\app",  "C:\\app\\dapr\\configurations") },
            "config.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\configurations\\config.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\configurations\\config.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\configurations\\config.yaml") }
            },
            "pipeline.yaml": {
                toAbsolutePath:()=> "C:\\app\\dapr\\configurations\\pipeline.yaml",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\dapr\\configurations\\pipeline.yaml") :  path.relative("C:\\app",  "C:\\app\\dapr\\configurations\\pipeline.yaml") }
            }
        }
    },
    "languages": {
        toAbsolutePath:()=> "C:\\app\\languages",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages") :  path.relative("C:\\app",  "C:\\app\\languages") },
        "csharp": {
            toAbsolutePath:()=> "C:\\app\\languages\\csharp",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp") },
            ".gitignore": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.gitignore",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.gitignore") }
            },
            ".idea": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea") },
                ".idea.App": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App") },
                    ".idea": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea") },
                        ".name": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\.name",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\.name") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\.name") }
                        },
                        "encodings.xml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\encodings.xml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\encodings.xml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\encodings.xml") }
                        },
                        "indexLayout.xml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\indexLayout.xml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\indexLayout.xml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\indexLayout.xml") }
                        },
                        "projectSettingsUpdater.xml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\projectSettingsUpdater.xml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\projectSettingsUpdater.xml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\projectSettingsUpdater.xml") }
                        },
                        "vcs.xml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\vcs.xml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\vcs.xml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\vcs.xml") }
                        },
                        "workspace.xml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\workspace.xml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\workspace.xml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.idea\\.idea.App\\.idea\\workspace.xml") }
                        }
                    }
                }
            },
            ".vs": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\.vs",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\.vs") }
            },
            "App.Setup.sln": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\App.Setup.sln",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\App.Setup.sln") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\App.Setup.sln") }
            },
            "App.sln": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\App.sln",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\App.sln") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\App.sln") }
            },
            "App.Test.sln": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\App.Test.sln",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\App.Test.sln") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\App.Test.sln") }
            },
            "Apps": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps") },
                "Auth": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth") },
                    "Auth.Setup": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup") },
                        "Client": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client") },
                            "App.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\App.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\App.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\App.razor") }
                            },
                            "Auth.Setup.Client.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Auth.Setup.Client.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Auth.Setup.Client.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Auth.Setup.Client.csproj") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\obj") }
                            },
                            "Pages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages") },
                                "Counter.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\Counter.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\Counter.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\Counter.razor") }
                                },
                                "FetchData.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\FetchData.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\FetchData.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\FetchData.razor") }
                                },
                                "Index.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\Index.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\Index.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Pages\\Index.razor") }
                                }
                            },
                            "Program.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Program.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Program.cs") }
                            },
                            "Properties": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Properties",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Properties") },
                                "launchSettings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Properties\\launchSettings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Properties\\launchSettings.json") }
                                }
                            },
                            "Shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared") },
                                "MainLayout.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\MainLayout.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\MainLayout.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\MainLayout.razor") }
                                },
                                "MainLayout.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\MainLayout.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\MainLayout.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\MainLayout.razor.css") }
                                },
                                "NavMenu.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\NavMenu.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\NavMenu.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\NavMenu.razor") }
                                },
                                "NavMenu.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\NavMenu.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\NavMenu.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\NavMenu.razor.css") }
                                },
                                "SurveyPrompt.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\SurveyPrompt.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\SurveyPrompt.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\Shared\\SurveyPrompt.razor") }
                                }
                            },
                            "wwwroot": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot") },
                                "css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css") },
                                    "app.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\app.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\app.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\app.css") }
                                    },
                                    "bootstrap": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\bootstrap",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\bootstrap") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\bootstrap") },
                                        "bootstrap.min.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") }
                                        }
                                    },
                                    "open-iconic": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic") },
                                        "font": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font") },
                                            "css": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css") },
                                                "open-iconic-bootstrap.min.css": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") }
                                                }
                                            },
                                            "fonts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") },
                                                "open-iconic.eot": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") }
                                                },
                                                "open-iconic.otf": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") }
                                                },
                                                "open-iconic.svg": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") }
                                                },
                                                "open-iconic.ttf": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") }
                                                },
                                                "open-iconic.woff": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") }
                                                }
                                            }
                                        },
                                        "FONT-LICENSE": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") }
                                        },
                                        "ICON-LICENSE": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") }
                                        },
                                        "README.md": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\README.md",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\css\\open-iconic\\README.md") }
                                        }
                                    }
                                },
                                "favicon.ico": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\favicon.ico",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\favicon.ico") }
                                },
                                "icon-512.png": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\icon-512.png",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\icon-512.png") }
                                },
                                "index.html": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\index.html",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\index.html") }
                                },
                                "manifest.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\manifest.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\manifest.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\manifest.json") }
                                },
                                "service-worker.js": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\service-worker.js",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\service-worker.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\service-worker.js") }
                                },
                                "service-worker.published.js": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\service-worker.published.js",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\service-worker.published.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\wwwroot\\service-worker.published.js") }
                                }
                            },
                            "_Imports.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\_Imports.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\_Imports.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Client\\_Imports.razor") }
                            }
                        },
                        "Server": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server") },
                            "appsettings.Development.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\appsettings.Development.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\appsettings.Development.json") }
                            },
                            "appsettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\appsettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\appsettings.json") }
                            },
                            "Auth.Setup.Server.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Auth.Setup.Server.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Auth.Setup.Server.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Auth.Setup.Server.csproj") }
                            },
                            "Auth.Setup.Server.csproj.user": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Auth.Setup.Server.csproj.user",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Auth.Setup.Server.csproj.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Auth.Setup.Server.csproj.user") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\bin") }
                            },
                            "Controllers": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Controllers",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Controllers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Controllers") },
                                "WeatherForecastController.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Controllers\\WeatherForecastController.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Controllers\\WeatherForecastController.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Controllers\\WeatherForecastController.cs") }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\obj") }
                            },
                            "Pages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages") },
                                "Error.cshtml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages\\Error.cshtml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages\\Error.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages\\Error.cshtml") }
                                },
                                "Error.cshtml.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages\\Error.cshtml.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages\\Error.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Pages\\Error.cshtml.cs") }
                                }
                            },
                            "Program.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Program.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Program.cs") }
                            },
                            "Properties": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Properties",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Properties") },
                                "launchSettings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Properties\\launchSettings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Properties\\launchSettings.json") }
                                }
                            },
                            "Startup.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Startup.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Startup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Server\\Startup.cs") }
                            }
                        },
                        "Shared": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared") },
                            "Auth.Setup.Shared.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\Auth.Setup.Shared.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\Auth.Setup.Shared.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\Auth.Setup.Shared.csproj") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\obj") }
                            },
                            "WeatherForecast.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\WeatherForecast.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\WeatherForecast.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Auth.Setup\\Shared\\WeatherForecast.cs") }
                            }
                        }
                    },
                    "Client": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client") },
                        "App.razor": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\App.razor",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\App.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\App.razor") }
                        },
                        "Auth.Client.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Auth.Client.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Auth.Client.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Auth.Client.csproj") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\obj") }
                        },
                        "Pages": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages") },
                            "Authentication.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Authentication.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Authentication.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Authentication.razor") }
                            },
                            "Counter.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Counter.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Counter.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Counter.razor") }
                            },
                            "FetchData.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\FetchData.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\FetchData.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\FetchData.razor") }
                            },
                            "Index.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Index.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Index.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Pages\\Index.razor") }
                            }
                        },
                        "Program.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Program.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Program.cs") }
                        },
                        "Properties": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Properties",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Properties") },
                            "launchSettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Properties\\launchSettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Properties\\launchSettings.json") }
                            }
                        },
                        "Shared": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared") },
                            "LoginDisplay.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\LoginDisplay.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\LoginDisplay.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\LoginDisplay.razor") }
                            },
                            "MainLayout.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\MainLayout.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\MainLayout.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\MainLayout.razor") }
                            },
                            "MainLayout.razor.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\MainLayout.razor.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\MainLayout.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\MainLayout.razor.css") }
                            },
                            "NavMenu.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\NavMenu.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\NavMenu.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\NavMenu.razor") }
                            },
                            "NavMenu.razor.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\NavMenu.razor.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\NavMenu.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\NavMenu.razor.css") }
                            },
                            "RedirectToLogin.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\RedirectToLogin.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\RedirectToLogin.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\RedirectToLogin.razor") }
                            },
                            "SurveyPrompt.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\SurveyPrompt.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\SurveyPrompt.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\Shared\\SurveyPrompt.razor") }
                            }
                        },
                        "wwwroot": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot") },
                            "css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css") },
                                "app.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\app.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\app.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\app.css") }
                                },
                                "bootstrap": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\bootstrap",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\bootstrap") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\bootstrap") },
                                    "bootstrap.min.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") }
                                    }
                                },
                                "open-iconic": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic") },
                                    "font": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font") },
                                        "css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\css") },
                                            "open-iconic-bootstrap.min.css": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") }
                                            }
                                        },
                                        "fonts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") },
                                            "open-iconic.eot": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") }
                                            },
                                            "open-iconic.otf": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") }
                                            },
                                            "open-iconic.svg": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") }
                                            },
                                            "open-iconic.ttf": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") }
                                            },
                                            "open-iconic.woff": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") }
                                            }
                                        }
                                    },
                                    "FONT-LICENSE": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") }
                                    },
                                    "ICON-LICENSE": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") }
                                    },
                                    "README.md": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\README.md",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\css\\open-iconic\\README.md") }
                                    }
                                }
                            },
                            "favicon.ico": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\favicon.ico",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\favicon.ico") }
                            },
                            "icon-512.png": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\icon-512.png",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\icon-512.png") }
                            },
                            "index.html": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\index.html",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\index.html") }
                            },
                            "manifest.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\manifest.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\manifest.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\manifest.json") }
                            },
                            "service-worker.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\service-worker.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\service-worker.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\service-worker.js") }
                            },
                            "service-worker.published.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\service-worker.published.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\service-worker.published.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\wwwroot\\service-worker.published.js") }
                            }
                        },
                        "_Imports.razor": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\_Imports.razor",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\_Imports.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Client\\_Imports.razor") }
                        }
                    },
                    "Server": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server") },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\appsettings.json") }
                        },
                        "Areas": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas") },
                            "Identity": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity") },
                                "IdentityHostingStartup.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\IdentityHostingStartup.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\IdentityHostingStartup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\IdentityHostingStartup.cs") }
                                },
                                "Pages": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages") },
                                    "Account": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account") },
                                        "AccessDenied.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml") }
                                        },
                                        "AccessDenied.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\AccessDenied.cshtml.cs") }
                                        },
                                        "ConfirmEmail.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml") }
                                        },
                                        "ConfirmEmail.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmail.cshtml.cs") }
                                        },
                                        "ConfirmEmailChange.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml") }
                                        },
                                        "ConfirmEmailChange.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ConfirmEmailChange.cshtml.cs") }
                                        },
                                        "ExternalLogin.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml") }
                                        },
                                        "ExternalLogin.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ExternalLogin.cshtml.cs") }
                                        },
                                        "ForgotPassword.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml") }
                                        },
                                        "ForgotPassword.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPassword.cshtml.cs") }
                                        },
                                        "ForgotPasswordConfirmation.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml") }
                                        },
                                        "ForgotPasswordConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ForgotPasswordConfirmation.cshtml.cs") }
                                        },
                                        "Lockout.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Lockout.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Lockout.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Lockout.cshtml") }
                                        },
                                        "Lockout.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Lockout.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Lockout.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Lockout.cshtml.cs") }
                                        },
                                        "Login.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml") }
                                        },
                                        "Login.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.cs") }
                                        },
                                        "Login.cshtml.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.css") }
                                        },
                                        "Login.cshtml.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Login.cshtml.scss") }
                                        },
                                        "LoginWith2fa.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml") }
                                        },
                                        "LoginWith2fa.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWith2fa.cshtml.cs") }
                                        },
                                        "LoginWithRecoveryCode.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml") }
                                        },
                                        "LoginWithRecoveryCode.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LoginWithRecoveryCode.cshtml.cs") }
                                        },
                                        "LogOut.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LogOut.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LogOut.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\LogOut.cshtml") }
                                        },
                                        "Logout.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Logout.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Logout.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Logout.cshtml.cs") }
                                        },
                                        "Manage": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage") },
                                            "ChangePassword.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml") }
                                            },
                                            "ChangePassword.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ChangePassword.cshtml.cs") }
                                            },
                                            "DeletePersonalData.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml") }
                                            },
                                            "DeletePersonalData.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DeletePersonalData.cshtml.cs") }
                                            },
                                            "Disable2fa.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml") }
                                            },
                                            "Disable2fa.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Disable2fa.cshtml.cs") }
                                            },
                                            "DownloadPersonalData.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml") }
                                            },
                                            "DownloadPersonalData.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\DownloadPersonalData.cshtml.cs") }
                                            },
                                            "Email.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml") }
                                            },
                                            "Email.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Email.cshtml.cs") }
                                            },
                                            "EnableAuthenticator.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml") }
                                            },
                                            "EnableAuthenticator.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs") }
                                            },
                                            "ExternalLogins.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml") }
                                            },
                                            "ExternalLogins.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ExternalLogins.cshtml.cs") }
                                            },
                                            "GenerateRecoveryCodes.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml") }
                                            },
                                            "GenerateRecoveryCodes.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs") }
                                            },
                                            "Index.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml") }
                                            },
                                            "Index.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\Index.cshtml.cs") }
                                            },
                                            "ManageNavPages.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ManageNavPages.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ManageNavPages.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ManageNavPages.cs") }
                                            },
                                            "PersonalData.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml") }
                                            },
                                            "PersonalData.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\PersonalData.cshtml.cs") }
                                            },
                                            "ResetAuthenticator.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml") }
                                            },
                                            "ResetAuthenticator.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ResetAuthenticator.cshtml.cs") }
                                            },
                                            "SetPassword.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml") }
                                            },
                                            "SetPassword.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\SetPassword.cshtml.cs") }
                                            },
                                            "ShowRecoveryCodes.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml") }
                                            },
                                            "ShowRecoveryCodes.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs") }
                                            },
                                            "TwoFactorAuthentication.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml") }
                                            },
                                            "TwoFactorAuthentication.cshtml.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\TwoFactorAuthentication.cshtml.cs") }
                                            },
                                            "_Layout.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_Layout.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_Layout.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_Layout.cshtml") }
                                            },
                                            "_ManageNav.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_ManageNav.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_ManageNav.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_ManageNav.cshtml") }
                                            },
                                            "_StatusMessage.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_StatusMessage.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_StatusMessage.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_StatusMessage.cshtml") }
                                            },
                                            "_ViewImports.cshtml": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_ViewImports.cshtml",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_ViewImports.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Manage\\_ViewImports.cshtml") }
                                            }
                                        },
                                        "Register.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Register.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Register.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Register.cshtml") }
                                        },
                                        "Register.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Register.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Register.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\Register.cshtml.cs") }
                                        },
                                        "RegisterConfirmation.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml") }
                                        },
                                        "RegisterConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\RegisterConfirmation.cshtml.cs") }
                                        },
                                        "ResendEmailConfirmation.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml") }
                                        },
                                        "ResendEmailConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResendEmailConfirmation.cshtml.cs") }
                                        },
                                        "ResetPassword.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml") }
                                        },
                                        "ResetPassword.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPassword.cshtml.cs") }
                                        },
                                        "ResetPasswordConfirmation.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml") }
                                        },
                                        "ResetPasswordConfirmation.cshtml.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\ResetPasswordConfirmation.cshtml.cs") }
                                        },
                                        "_StatusMessage.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\_StatusMessage.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\_StatusMessage.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\_StatusMessage.cshtml") }
                                        },
                                        "_ViewImports.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\_ViewImports.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\_ViewImports.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Account\\_ViewImports.cshtml") }
                                        }
                                    },
                                    "Error.cshtml": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Error.cshtml",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Error.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Error.cshtml") }
                                    },
                                    "Error.cshtml.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Error.cshtml.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Error.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\Error.cshtml.cs") }
                                    },
                                    "_ValidationScriptsPartial.cshtml": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ValidationScriptsPartial.cshtml",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ValidationScriptsPartial.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ValidationScriptsPartial.cshtml") }
                                    },
                                    "_ViewImports.cshtml": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ViewImports.cshtml",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ViewImports.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ViewImports.cshtml") }
                                    },
                                    "_ViewStart.cshtml": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ViewStart.cshtml",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ViewStart.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\Pages\\_ViewStart.cshtml") }
                                    }
                                },
                                "RevalidatingIdentityAuthenticationStateProvider.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\RevalidatingIdentityAuthenticationStateProvider.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\RevalidatingIdentityAuthenticationStateProvider.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Areas\\Identity\\RevalidatingIdentityAuthenticationStateProvider.cs") }
                                }
                            }
                        },
                        "Auth.Server.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Auth.Server.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Auth.Server.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Auth.Server.csproj") }
                        },
                        "Auth.Server.csproj.user": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Auth.Server.csproj.user",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Auth.Server.csproj.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Auth.Server.csproj.user") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\bin") }
                        },
                        "Certificates": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates") },
                            "reference.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates\\reference.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates\\reference.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates\\reference.txt") }
                            },
                            "taneware-key.pem": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates\\taneware-key.pem",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates\\taneware-key.pem") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Certificates\\taneware-key.pem") }
                            }
                        },
                        "compilerconfig.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\compilerconfig.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\compilerconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\compilerconfig.json") }
                        },
                        "compilerconfig.json.defaults": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\compilerconfig.json.defaults",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\compilerconfig.json.defaults") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\compilerconfig.json.defaults") }
                        },
                        "Controllers": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers") },
                            "AuthorizationController.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers\\AuthorizationController.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers\\AuthorizationController.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers\\AuthorizationController.cs") }
                            },
                            "OidcConfigurationController.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers\\OidcConfigurationController.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers\\OidcConfigurationController.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Controllers\\OidcConfigurationController.cs") }
                            }
                        },
                        "Dockerfile": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Dockerfile",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Dockerfile") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Dockerfile") }
                        },
                        "Helpers": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers") },
                            "AsyncEnumerableExtensions.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers\\AsyncEnumerableExtensions.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers\\AsyncEnumerableExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers\\AsyncEnumerableExtensions.cs") }
                            },
                            "FormValueRequiredAttribute.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers\\FormValueRequiredAttribute.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers\\FormValueRequiredAttribute.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Helpers\\FormValueRequiredAttribute.cs") }
                            }
                        },
                        "libman.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\libman.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\libman.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\libman.json") }
                        },
                        "Localizations": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations") },
                            "Customs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs") },
                                "Pos": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Pos",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Pos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Pos") },
                                    "ko.po": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Pos\\ko.po",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Pos\\ko.po") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Pos\\ko.po") }
                                    }
                                },
                                "Resources": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Resources",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Resources") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Resources") },
                                    "Resource.ko.resx": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Resources\\Resource.ko.resx",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Resources\\Resource.ko.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Customs\\Resources\\Resource.ko.resx") }
                                    }
                                }
                            },
                            "Resources": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources") },
                                "Resource.Designer.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.Designer.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.Designer.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.Designer.cs") }
                                },
                                "Resource.ko.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.ko.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.ko.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.ko.resx") }
                                },
                                "Resource.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\Resource.resx") }
                                },
                                "RespectfulResource.Designer.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\RespectfulResource.Designer.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\RespectfulResource.Designer.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\RespectfulResource.Designer.cs") }
                                },
                                "RespectfulResource.ko.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\RespectfulResource.ko.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\RespectfulResource.ko.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\RespectfulResource.ko.resx") }
                                },
                                "__Localizations_ContextCodeName__Resource.Designer_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource.Designer_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource.Designer_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource.Designer_Gen_.cs") }
                                },
                                "__Localizations_ContextCodeName__Resource__Localizations_dotLanguageCode___Gen_.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Localizations_dotLanguageCode___Gen_.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Localizations_dotLanguageCode___Gen_.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Localizations_dotLanguageCode___Gen_.resx") }
                                }
                            },
                            "Templates": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates") },
                                "Pots": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots") },
                                    "Auth.Server.pot": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots\\Auth.Server.pot",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots\\Auth.Server.pot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots\\Auth.Server.pot") }
                                    },
                                    "SharedLibrary.pot": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots\\SharedLibrary.pot",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots\\SharedLibrary.pot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Localizations\\Templates\\Pots\\SharedLibrary.pot") }
                                    }
                                }
                            }
                        },
                        "Logs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Logs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Logs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Logs") },
                            "Auth.Infrastructure20220108.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Logs\\Auth.Infrastructure20220108.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Logs\\Auth.Infrastructure20220108.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Logs\\Auth.Infrastructure20220108.txt") }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\obj") }
                        },
                        "Pages": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages") },
                            "Error.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Error.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Error.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Error.cshtml") }
                            },
                            "Error.cshtml.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Error.cshtml.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Error.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Error.cshtml.cs") }
                            },
                            "Index.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Index.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Index.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Index.cshtml") }
                            },
                            "Index.cshtml.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Index.cshtml.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Index.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Index.cshtml.cs") }
                            },
                            "Privacy.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Privacy.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Privacy.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Privacy.cshtml") }
                            },
                            "Privacy.cshtml.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Privacy.cshtml.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Privacy.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Privacy.cshtml.cs") }
                            },
                            "Shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared") },
                                "_Layout.cshtml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml") }
                                },
                                "_Layout.cshtml.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml.css") }
                                },
                                "_Layout.cshtml.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_Layout.cshtml.scss") }
                                },
                                "_LoginPartial.cshtml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_LoginPartial.cshtml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_LoginPartial.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_LoginPartial.cshtml") }
                                },
                                "_ValidationScriptsPartial.cshtml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_ValidationScriptsPartial.cshtml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_ValidationScriptsPartial.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\Shared\\_ValidationScriptsPartial.cshtml") }
                                }
                            },
                            "_ViewImports.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\_ViewImports.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\_ViewImports.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\_ViewImports.cshtml") }
                            },
                            "_ViewStart.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\_ViewStart.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\_ViewStart.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Pages\\_ViewStart.cshtml") }
                            }
                        },
                        "Program.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Program.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Program.cs") }
                        },
                        "Properties": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties") },
                            "launchSettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\launchSettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\launchSettings.json") }
                            },
                            "serviceDependencies.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.json") }
                            },
                            "serviceDependencies.local.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.local.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.local.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.local.json") }
                            },
                            "serviceDependencies.local.json.user": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.local.json.user",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.local.json.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Properties\\serviceDependencies.local.json.user") }
                            }
                        },
                        "ViewModels": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels") },
                            "Authorization": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization") },
                                "AuthorizeViewModel.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization\\AuthorizeViewModel.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization\\AuthorizeViewModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization\\AuthorizeViewModel.cs") }
                                },
                                "LogoutViewModel.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization\\LogoutViewModel.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization\\LogoutViewModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\ViewModels\\Authorization\\LogoutViewModel.cs") }
                                }
                            }
                        },
                        "Views": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views") },
                            "Authorization": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization") },
                                "Authorize.cshtml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization\\Authorize.cshtml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization\\Authorize.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization\\Authorize.cshtml") }
                                },
                                "Logout.cshtml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization\\Logout.cshtml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization\\Logout.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\Authorization\\Logout.cshtml") }
                                }
                            },
                            "_ViewImports.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\_ViewImports.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\_ViewImports.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\_ViewImports.cshtml") }
                            },
                            "_ViewStart.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\_ViewStart.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\_ViewStart.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Views\\_ViewStart.cshtml") }
                            }
                        },
                        "Worker.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Worker.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Worker.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\Worker.cs") }
                        },
                        "wwwroot": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\wwwroot",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Server\\wwwroot") }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared") },
                        "Auth.Shared.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\Auth.Shared.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\Auth.Shared.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\Auth.Shared.csproj") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\obj") }
                        },
                        "WeatherForecast.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\WeatherForecast.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\WeatherForecast.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\Auth\\Shared\\WeatherForecast.cs") }
                        }
                    }
                },
                "BlazorApp": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp") },
                    "BlazorApp.Setup": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup") },
                        "Client": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client") },
                            "App.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\App.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\App.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\App.razor") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\bin") }
                            },
                            "BlazorApp.Setup.Client.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\BlazorApp.Setup.Client.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\BlazorApp.Setup.Client.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\BlazorApp.Setup.Client.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\obj") }
                            },
                            "Pages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages") },
                                "Counter.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\Counter.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\Counter.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\Counter.razor") }
                                },
                                "FetchData.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\FetchData.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\FetchData.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\FetchData.razor") }
                                },
                                "Index.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\Index.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\Index.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Pages\\Index.razor") }
                                }
                            },
                            "Program.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Program.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Program.cs") }
                            },
                            "Properties": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Properties",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Properties") },
                                "launchSettings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Properties\\launchSettings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Properties\\launchSettings.json") }
                                }
                            },
                            "Shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared") },
                                "MainLayout.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\MainLayout.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\MainLayout.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\MainLayout.razor") }
                                },
                                "MainLayout.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\MainLayout.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\MainLayout.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\MainLayout.razor.css") }
                                },
                                "NavMenu.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\NavMenu.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\NavMenu.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\NavMenu.razor") }
                                },
                                "NavMenu.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\NavMenu.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\NavMenu.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\NavMenu.razor.css") }
                                },
                                "SurveyPrompt.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\SurveyPrompt.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\SurveyPrompt.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\Shared\\SurveyPrompt.razor") }
                                }
                            },
                            "wwwroot": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot") },
                                "css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css") },
                                    "app.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\app.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\app.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\app.css") }
                                    },
                                    "bootstrap": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\bootstrap",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\bootstrap") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\bootstrap") },
                                        "bootstrap.min.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") }
                                        }
                                    },
                                    "open-iconic": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic") },
                                        "font": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font") },
                                            "css": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css") },
                                                "open-iconic-bootstrap.min.css": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") }
                                                }
                                            },
                                            "fonts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") },
                                                "open-iconic.eot": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") }
                                                },
                                                "open-iconic.otf": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") }
                                                },
                                                "open-iconic.svg": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") }
                                                },
                                                "open-iconic.ttf": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") }
                                                },
                                                "open-iconic.woff": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") }
                                                }
                                            }
                                        },
                                        "FONT-LICENSE": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") }
                                        },
                                        "ICON-LICENSE": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") }
                                        },
                                        "README.md": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\README.md",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\css\\open-iconic\\README.md") }
                                        }
                                    }
                                },
                                "favicon.ico": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\favicon.ico",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\favicon.ico") }
                                },
                                "index.html": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\index.html",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\wwwroot\\index.html") }
                                }
                            },
                            "_Imports.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\_Imports.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\_Imports.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Client\\_Imports.razor") }
                            }
                        },
                        "Server": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server") },
                            "appsettings.Development.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\appsettings.Development.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\appsettings.Development.json") }
                            },
                            "appsettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\appsettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\appsettings.json") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\bin") }
                            },
                            "BlazorApp.Setup.Server.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\BlazorApp.Setup.Server.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\BlazorApp.Setup.Server.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\BlazorApp.Setup.Server.csproj") }
                            },
                            "Controllers": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Controllers",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Controllers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Controllers") },
                                "WeatherForecastController.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Controllers\\WeatherForecastController.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Controllers\\WeatherForecastController.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Controllers\\WeatherForecastController.cs") }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\obj") }
                            },
                            "Pages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages") },
                                "Error.cshtml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages\\Error.cshtml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages\\Error.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages\\Error.cshtml") }
                                },
                                "Error.cshtml.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages\\Error.cshtml.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages\\Error.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Pages\\Error.cshtml.cs") }
                                }
                            },
                            "Program.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Program.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Program.cs") }
                            },
                            "Properties": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Properties",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Properties") },
                                "launchSettings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Properties\\launchSettings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Properties\\launchSettings.json") }
                                }
                            },
                            "Startup.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Startup.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Startup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Server\\Startup.cs") }
                            }
                        },
                        "Shared": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\bin") }
                            },
                            "BlazorApp.Setup.Shared.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\BlazorApp.Setup.Shared.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\BlazorApp.Setup.Shared.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\BlazorApp.Setup.Shared.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\obj") }
                            },
                            "WeatherForecast.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\WeatherForecast.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\WeatherForecast.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Setup\\Shared\\WeatherForecast.cs") }
                            }
                        }
                    },
                    "BlazorApp.Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests") },
                        "BlazorApp.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\bin") }
                            },
                            "BlazorApp.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\BlazorApp.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\BlazorApp.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\BlazorApp.ArchTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.ArchTests\\UnitTest1.cs") }
                            }
                        },
                        "BlazorApp.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\bin") }
                            },
                            "BlazorApp.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\BlazorApp.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\BlazorApp.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\BlazorApp.IntegrationTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.IntegrationTests\\UnitTest1.cs") }
                            }
                        },
                        "BlazorApp.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\bin") }
                            },
                            "BlazorApp.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\BlazorApp.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\BlazorApp.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\BlazorApp.UnitTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\BlazorApp.Tests\\BlazorApp.UnitTests\\UnitTest1.cs") }
                            }
                        }
                    },
                    "Client": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client") },
                        ".vs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\.vs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\.vs") }
                        },
                        "App.razor": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\App.razor",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\App.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\App.razor") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\bin") }
                        },
                        "BlazorApp - Backup.Client.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp - Backup.Client.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp - Backup.Client.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp - Backup.Client.csproj") }
                        },
                        "BlazorApp.Client.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp.Client.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp.Client.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp.Client.csproj") }
                        },
                        "BlazorApp.Client.csproj.user": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp.Client.csproj.user",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp.Client.csproj.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\BlazorApp.Client.csproj.user") }
                        },
                        "Components": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components") },
                            "ActionButtonGroupComponents": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents") },
                                "ChatFloatingActionButton.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor") }
                                },
                                "ChatFloatingActionButton.razor.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.cs") }
                                },
                                "ChatFloatingActionButton.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.css") }
                                },
                                "ChatFloatingActionButton.razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ActionButtonGroupComponents\\ChatFloatingActionButton.razor.scss") }
                                }
                            },
                            "ChatGroupComponents": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents") },
                                "ChatRoom.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor") }
                                },
                                "ChatRoom.razor.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.cs") }
                                },
                                "ChatRoom.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.css") }
                                },
                                "ChatRoom.razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ChatGroupComponents\\ChatRoom.razor.scss") }
                                }
                            },
                            "ValidationComponents": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents") },
                                "CustomValidator.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.razor") }
                                },
                                "CustomValidator.Razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.Razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.Razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.Razor.css") }
                                },
                                "CustomValidator.Razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.Razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.Razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidator.Razor.scss") }
                                },
                                "CustomValidatorBase.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidatorBase.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidatorBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Components\\ValidationComponents\\CustomValidatorBase.cs") }
                                }
                            }
                        },
                        "Dockerfile": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Dockerfile",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Dockerfile") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Dockerfile") }
                        },
                        "libman.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\libman.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\libman.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\libman.json") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\obj") }
                        },
                        "Pages": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages") },
                            "AccountPages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages") },
                                "EmailConfirmedPage.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor") }
                                },
                                "EmailConfirmedPage.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor.css") }
                                },
                                "EmailConfirmedPage.razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPage.razor.scss") }
                                },
                                "EmailConfirmedPageBase.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPageBase.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPageBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\EmailConfirmedPageBase.cs") }
                                },
                                "LoginPage.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor") }
                                },
                                "LoginPage.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor.css") }
                                },
                                "LoginPage.razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPage.razor.scss") }
                                },
                                "LoginPageBase.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPageBase.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPageBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\LoginPageBase.cs") }
                                },
                                "RegisterConfirmationPage.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor") }
                                },
                                "RegisterConfirmationPage.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor.css") }
                                },
                                "RegisterConfirmationPage.razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPage.razor.scss") }
                                },
                                "RegisterConfirmationPageBase.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPageBase.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPageBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterConfirmationPageBase.cs") }
                                },
                                "RegisterPage.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor") }
                                },
                                "RegisterPage.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor.css") }
                                },
                                "RegisterPage.razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPage.razor.scss") }
                                },
                                "RegisterPageBase.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPageBase.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPageBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\AccountPages\\RegisterPageBase.cs") }
                                }
                            },
                            "Authentication.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\Authentication.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\Authentication.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\Authentication.razor") }
                            },
                            "Counter.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\Counter.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\Counter.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\Counter.razor") }
                            },
                            "CustomInputText.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\CustomInputText.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\CustomInputText.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\CustomInputText.razor") }
                            },
                            "EntityPages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages") },
                                "__Entities_BoundedContext_Name__Pages": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages") },
                                    "__Entities_Groups_00_Name__Pages": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages") },
                                        "__Entities_Name__CreatePageBase_Gen_.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePageBase_Gen_.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePageBase_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePageBase_Gen_.cs") }
                                        },
                                        "__Entities_Name__CreatePage_Gen_.razor": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor") }
                                        },
                                        "__Entities_Name__CreatePage_Gen_.razor.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor.css") }
                                        },
                                        "__Entities_Name__CreatePage_Gen_.razor.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__CreatePage_Gen_.razor.scss") }
                                        },
                                        "__Entities_Name__ListPageBase_Gen_.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPageBase_Gen_.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPageBase_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPageBase_Gen_.cs") }
                                        },
                                        "__Entities_Name__ListPage_Gen_.razor": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor") }
                                        },
                                        "__Entities_Name__ListPage_Gen_.razor.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor.css") }
                                        },
                                        "__Entities_Name__ListPage_Gen_.razor.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__ListPage_Gen_.razor.scss") }
                                        },
                                        "__Entities_Name__PageBase_Gen_.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__PageBase_Gen_.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__PageBase_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__PageBase_Gen_.cs") }
                                        },
                                        "__Entities_Name__Page_Gen_.razor": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor") }
                                        },
                                        "__Entities_Name__Page_Gen_.razor.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor.css") }
                                        },
                                        "__Entities_Name__Page_Gen_.razor.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__Page_Gen_.razor.scss") }
                                        },
                                        "__Entities_Name__UpdatePageBase_Gen_.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePageBase_Gen_.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePageBase_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePageBase_Gen_.cs") }
                                        },
                                        "__Entities_Name__UpdatePage_Gen_.razor": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor") }
                                        },
                                        "__Entities_Name__UpdatePage_Gen_.razor.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor.css") }
                                        },
                                        "__Entities_Name__UpdatePage_Gen_.razor.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\EntityPages\\__Entities_BoundedContext_Name__Pages\\__Entities_Groups_00_Name__Pages\\__Entities_Name__UpdatePage_Gen_.razor.scss") }
                                        }
                                    }
                                }
                            },
                            "FetchData.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\FetchData.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\FetchData.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\FetchData.razor") }
                            },
                            "HomePages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages") },
                                "HomePage.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor") }
                                },
                                "HomePage.razor.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor.css") }
                                },
                                "HomePage.razor.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePage.razor.scss") }
                                },
                                "HomePageBase.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePageBase.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePageBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\HomePages\\HomePageBase.cs") }
                                }
                            },
                            "TestForm.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\TestForm.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\TestForm.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Pages\\TestForm.razor") }
                            }
                        },
                        "Program.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Program.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Program.cs") }
                        },
                        "Properties": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties") },
                            "launchSettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\launchSettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\launchSettings.json") }
                            },
                            "serviceDependencies.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.json") }
                            },
                            "serviceDependencies.local.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.local.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.local.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.local.json") }
                            },
                            "serviceDependencies.local.json.user": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.local.json.user",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.local.json.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Properties\\serviceDependencies.local.json.user") }
                            }
                        },
                        "Shared": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared") },
                            "CascadingStates": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\CascadingStates",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\CascadingStates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\CascadingStates") },
                                "CascadingThemeState.razor": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\CascadingStates\\CascadingThemeState.razor",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\CascadingStates\\CascadingThemeState.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\CascadingStates\\CascadingThemeState.razor") }
                                }
                            },
                            "Layouts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts") },
                                "MainLayout": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout") },
                                    "MainLayout.razor": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor") }
                                    },
                                    "MainLayout.razor.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.css") }
                                    },
                                    "MainLayout.razor.matblazor.txt": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.matblazor.txt",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.matblazor.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.matblazor.txt") }
                                    },
                                    "MainLayout.razor.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayout.razor.scss") }
                                    },
                                    "MainLayoutBase.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayoutBase.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayoutBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayoutBase.cs") }
                                    },
                                    "MainLayoutBase.cs.matblazor.txt": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayoutBase.cs.matblazor.txt",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayoutBase.cs.matblazor.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\Layouts\\MainLayout\\MainLayoutBase.cs.matblazor.txt") }
                                    }
                                }
                            },
                            "LoginDisplay.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\LoginDisplay.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\LoginDisplay.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\LoginDisplay.razor") }
                            },
                            "NavMenu.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\NavMenu.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\NavMenu.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\NavMenu.razor") }
                            },
                            "NavMenu.razor.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\NavMenu.razor.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\NavMenu.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\NavMenu.razor.css") }
                            },
                            "RedirectToLogin.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\RedirectToLogin.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\RedirectToLogin.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\RedirectToLogin.razor") }
                            },
                            "SurveyPrompt.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\SurveyPrompt.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\SurveyPrompt.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\Shared\\SurveyPrompt.razor") }
                            }
                        },
                        "wwwroot": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot") },
                            "appsettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\appsettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\appsettings.json") }
                            },
                            "assets": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets") },
                                "index.95604739.js": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\index.95604739.js",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\index.95604739.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\index.95604739.js") }
                                },
                                "service-worker.62536a4c.js": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\service-worker.62536a4c.js",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\service-worker.62536a4c.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\service-worker.62536a4c.js") }
                                },
                                "vendor.c6976955.js": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\vendor.c6976955.js",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\vendor.c6976955.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\assets\\vendor.c6976955.js") }
                                }
                            },
                            "index.html": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\index.html",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\wwwroot\\index.html") }
                            }
                        },
                        "_Imports.razor": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\_Imports.razor",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\_Imports.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Client\\_Imports.razor") }
                        }
                    },
                    "Server": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server") },
                        ".vs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\.vs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\.vs") }
                        },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\appsettings.json") }
                        },
                        "Areas": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas") },
                            "Identity": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity") },
                                "Pages": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages") },
                                    "Shared": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages\\Shared",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages\\Shared") },
                                        "_LoginPartial.cshtml": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Areas\\Identity\\Pages\\Shared\\_LoginPartial.cshtml") }
                                        }
                                    }
                                }
                            }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\bin") }
                        },
                        "BlazorApp.Server.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\BlazorApp.Server.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\BlazorApp.Server.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\BlazorApp.Server.csproj") }
                        },
                        "BlazorApp.Server.csproj.user": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\BlazorApp.Server.csproj.user",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\BlazorApp.Server.csproj.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\BlazorApp.Server.csproj.user") }
                        },
                        "Controllers": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers") },
                            "OidcConfigurationController.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers\\OidcConfigurationController.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers\\OidcConfigurationController.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers\\OidcConfigurationController.cs") }
                            },
                            "WeatherForecastController.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers\\WeatherForecastController.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers\\WeatherForecastController.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Controllers\\WeatherForecastController.cs") }
                            }
                        },
                        "Dockerfile": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Dockerfile",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Dockerfile") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Dockerfile") }
                        },
                        "Logs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs") },
                            "Core.Infrastructure20210407.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210407.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210407.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210407.txt") }
                            },
                            "Core.Infrastructure20210528.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210528.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210528.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210528.txt") }
                            },
                            "Core.Infrastructure20210529.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210529.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210529.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210529.txt") }
                            },
                            "Core.Infrastructure20210530.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210530.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210530.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210530.txt") }
                            },
                            "Core.Infrastructure20210531.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210531.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210531.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210531.txt") }
                            },
                            "Core.Infrastructure20210601.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210601.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210601.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210601.txt") }
                            },
                            "Core.Infrastructure20210604.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210604.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210604.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210604.txt") }
                            },
                            "Core.Infrastructure20210701.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210701.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210701.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210701.txt") }
                            },
                            "Core.Infrastructure20210703.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210703.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210703.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210703.txt") }
                            },
                            "Core.Infrastructure20210704.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210704.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210704.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210704.txt") }
                            },
                            "Core.Infrastructure20210704_001.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210704_001.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210704_001.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210704_001.txt") }
                            },
                            "Core.Infrastructure20210920.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210920.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210920.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210920.txt") }
                            },
                            "Core.Infrastructure20210922.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210922.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210922.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20210922.txt") }
                            },
                            "Core.Infrastructure20211006.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211006.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211006.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211006.txt") }
                            },
                            "Core.Infrastructure20211008.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211008.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211008.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211008.txt") }
                            },
                            "Core.Infrastructure20211030.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211030.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211030.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211030.txt") }
                            },
                            "Core.Infrastructure20211101.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211101.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211101.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20211101.txt") }
                            },
                            "Core.Infrastructure20220105.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20220105.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20220105.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Logs\\Core.Infrastructure20220105.txt") }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\obj") }
                        },
                        "Pages": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages") },
                            "Error.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages\\Error.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages\\Error.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages\\Error.cshtml") }
                            },
                            "Error.cshtml.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages\\Error.cshtml.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages\\Error.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Pages\\Error.cshtml.cs") }
                            }
                        },
                        "Program.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Program.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Program.cs") }
                        },
                        "Properties": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties") },
                            "launchSettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\launchSettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\launchSettings.json") }
                            },
                            "serviceDependencies.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.json") }
                            },
                            "serviceDependencies.local.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.local.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.local.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.local.json") }
                            },
                            "serviceDependencies.local.json.user": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.local.json.user",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.local.json.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\Properties\\serviceDependencies.local.json.user") }
                            }
                        },
                        "wwwroot": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\wwwroot",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Server\\wwwroot") }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\bin") }
                        },
                        "BlazorApp.Shared.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\BlazorApp.Shared.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\BlazorApp.Shared.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\BlazorApp.Shared.csproj") }
                        },
                        "Localizations": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations") },
                            "Customs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs") },
                                "Pos": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Pos",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Pos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Pos") },
                                    "ko.po": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Pos\\ko.po",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Pos\\ko.po") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Pos\\ko.po") }
                                    }
                                },
                                "Resources": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Resources",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Resources") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Resources") },
                                    "Resource.ko.resx": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Resources\\Resource.ko.resx",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Resources\\Resource.ko.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Customs\\Resources\\Resource.ko.resx") }
                                    }
                                }
                            },
                            "Pos": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Pos",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Pos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Pos") },
                                "__Localizations_languageCode__.po": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Pos\\__Localizations_languageCode__.po",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Pos\\__Localizations_languageCode__.po") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Pos\\__Localizations_languageCode__.po") }
                                }
                            },
                            "Resources": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources") },
                                "Resource.Designer.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.Designer.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.Designer.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.Designer.cs") }
                                },
                                "Resource.en.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.en.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.en.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.en.resx") }
                                },
                                "Resource.es.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.es.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.es.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.es.resx") }
                                },
                                "Resource.ko.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.ko.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.ko.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.ko.resx") }
                                },
                                "Resource.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource.resx") }
                                },
                                "Resource__Context_project_postfix__.koResource.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource__Context_project_postfix__.koResource.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource__Context_project_postfix__.koResource.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource__Context_project_postfix__.koResource.resx") }
                                },
                                "Resource__Context_project_postfix__Resource.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource__Context_project_postfix__Resource.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource__Context_project_postfix__Resource.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\Resource__Context_project_postfix__Resource.resx") }
                                },
                                "RespectfulResource.Designer.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource.Designer.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource.Designer.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource.Designer.cs") }
                                },
                                "RespectfulResource.ko.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource.ko.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource.ko.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource.ko.resx") }
                                },
                                "RespectfulResource__Context_project_postfix__.koResource.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource__Context_project_postfix__.koResource.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource__Context_project_postfix__.koResource.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\RespectfulResource__Context_project_postfix__.koResource.resx") }
                                },
                                "__Localizations_ContextCodeName__Resource__Alias_Postfix__.Designer_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Alias_Postfix__.Designer_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Alias_Postfix__.Designer_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Alias_Postfix__.Designer_Gen_.cs") }
                                },
                                "__Localizations_ContextCodeName__Resource__Context_project_postfix____Localizations_dotLanguageCode__Resource_Gen_.resx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Context_project_postfix____Localizations_dotLanguageCode__Resource_Gen_.resx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Context_project_postfix____Localizations_dotLanguageCode__Resource_Gen_.resx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Resources\\__Localizations_ContextCodeName__Resource__Context_project_postfix____Localizations_dotLanguageCode__Resource_Gen_.resx") }
                                }
                            },
                            "Templates": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates") },
                                "Pots": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates\\Pots",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates\\Pots") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates\\Pots") },
                                    "SharedLibrary.pot": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates\\Pots\\SharedLibrary.pot",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates\\Pots\\SharedLibrary.pot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\Localizations\\Templates\\Pots\\SharedLibrary.pot") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\obj") }
                        },
                        "WeatherForecast.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\WeatherForecast.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\WeatherForecast.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Apps\\BlazorApp\\Shared\\WeatherForecast.cs") }
                        }
                    }
                }
            },
            "BoundedContexts": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts") },
                "AuthBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext") },
                    "Auth.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application") },
                        "Auth.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\Auth.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\Auth.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\Auth.Application.csproj") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\Class1.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Application\\obj") }
                        }
                    },
                    "Auth.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain") },
                        "Auth.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Auth.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Auth.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Auth.Domain.csproj") }
                        },
                        "AuthDomainConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\AuthDomainConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\AuthDomainConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\AuthDomainConfig.cs") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\bin") }
                        },
                        "Entities": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities") },
                            "Role.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\Role.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\Role.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\Role.cs") }
                            },
                            "RoleClaim.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\RoleClaim.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\RoleClaim.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\RoleClaim.cs") }
                            },
                            "User.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User.cs") }
                            },
                            "UserClaim.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserClaim.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserClaim.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserClaim.cs") }
                            },
                            "UserGroup.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroup.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroup.cs") }
                            },
                            "UserGroupRequest.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroupRequest.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroupRequest.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroupRequest.cs") }
                            },
                            "UserGroupRole.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroupRole.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroupRole.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserGroupRole.cs") }
                            },
                            "UserLogin.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserLogin.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserLogin.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserLogin.cs") }
                            },
                            "UserToken.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserToken.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserToken.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\UserToken.cs") }
                            },
                            "User_Role.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_Role.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_Role.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_Role.cs") }
                            },
                            "User_UserGroup.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_UserGroup.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_UserGroup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_UserGroup.cs") }
                            },
                            "User_UserGroupRole.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_UserGroupRole.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_UserGroupRole.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\User_UserGroupRole.cs") }
                            },
                            "__Entities_Groups_00_Name__Entities": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\__Entities_Groups_00_Name__Entities",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\__Entities_Groups_00_Name__Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\__Entities_Groups_00_Name__Entities") },
                                "__Entities_Name___AuthGen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___AuthGen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___AuthGen_.cs") }
                                }
                            }
                        },
                        "Interfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces") },
                            "RepositoryInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces") },
                                "IRoleClaimRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IRoleClaimRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IRoleClaimRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IRoleClaimRepository.cs") }
                                },
                                "IRoleRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IRoleRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IRoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IRoleRepository.cs") }
                                },
                                "IUserClaimRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserClaimRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserClaimRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserClaimRepository.cs") }
                                },
                                "IUserGroupRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRepository.cs") }
                                },
                                "IUserGroupRequestRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRequestRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRequestRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRequestRepository.cs") }
                                },
                                "IUserGroupRoleRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRoleRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserGroupRoleRepository.cs") }
                                },
                                "IUserLoginRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserLoginRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserLoginRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserLoginRepository.cs") }
                                },
                                "IUserRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserRepository.cs") }
                                },
                                "IUserTokenRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserTokenRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserTokenRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUserTokenRepository.cs") }
                                },
                                "IUser_RoleRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_RoleRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_RoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_RoleRepository.cs") }
                                },
                                "IUser_UserGroupRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_UserGroupRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_UserGroupRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_UserGroupRepository.cs") }
                                },
                                "IUser_UserGroupRoleRepository.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_UserGroupRoleRepository.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_UserGroupRoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\IUser_UserGroupRoleRepository.cs") }
                                },
                                "__Entities_Groups_00_Name__RepositoryInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces") },
                                    "I__Entities_Name__Repository_AuthGen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces\\I__Entities_Name__Repository_AuthGen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces\\I__Entities_Name__Repository_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces\\I__Entities_Name__Repository_AuthGen_.cs") }
                                    }
                                }
                            },
                            "ServiceInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces") },
                                "IRoleClaimDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IRoleClaimDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IRoleClaimDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IRoleClaimDomainService.cs") }
                                },
                                "IRoleDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IRoleDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IRoleDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IRoleDomainService.cs") }
                                },
                                "IUserClaimDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserClaimDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserClaimDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserClaimDomainService.cs") }
                                },
                                "IUserDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserDomainService.cs") }
                                },
                                "IUserGroupDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupDomainService.cs") }
                                },
                                "IUserGroupRequestDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupRequestDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupRequestDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupRequestDomainService.cs") }
                                },
                                "IUserGroupRoleDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupRoleDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupRoleDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserGroupRoleDomainService.cs") }
                                },
                                "IUserLoginDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserLoginDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserLoginDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserLoginDomainService.cs") }
                                },
                                "IUserTokenDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserTokenDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserTokenDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUserTokenDomainService.cs") }
                                },
                                "IUser_RoleDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_RoleDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_RoleDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_RoleDomainService.cs") }
                                },
                                "IUser_UserGroupDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_UserGroupDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_UserGroupDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_UserGroupDomainService.cs") }
                                },
                                "IUser_UserGroupRoleDomainService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_UserGroupRoleDomainService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_UserGroupRoleDomainService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\IUser_UserGroupRoleDomainService.cs") }
                                },
                                "__Entities_Groups_00_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") },
                                    "I__Entities_Name__DomainService_AuthGen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_AuthGen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_AuthGen_.cs") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\obj") }
                        },
                        "Specs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs") },
                            "RoleClaimSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs") },
                                "RoleClaimsByClaimTypeSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByClaimTypeSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByClaimTypeSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByClaimTypeSpec.cs") }
                                },
                                "RoleClaimsByClaimValueSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByClaimValueSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByClaimValueSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByClaimValueSpec.cs") }
                                },
                                "RoleClaimsByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByIdSpec.cs") }
                                },
                                "RoleClaimsByRoleIdAndClaimTypeAndClaimValueSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByRoleIdAndClaimTypeAndClaimValueSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByRoleIdAndClaimTypeAndClaimValueSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByRoleIdAndClaimTypeAndClaimValueSpec.cs") }
                                },
                                "RoleClaimsByRoleIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByRoleIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByRoleIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsByRoleIdSpec.cs") }
                                },
                                "RoleClaimsToClaimsByRoleIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsToClaimsByRoleIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsToClaimsByRoleIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleClaimSpecs\\RoleClaimsToClaimsByRoleIdSpec.cs") }
                                }
                            },
                            "RoleSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs") },
                                "RolesByConcurrencyStampSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByConcurrencyStampSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByConcurrencyStampSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByConcurrencyStampSpec.cs") }
                                },
                                "RolesByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByIdSpec.cs") }
                                },
                                "RolesByNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByNameSpec.cs") }
                                },
                                "RolesByNormalizedNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByNormalizedNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByNormalizedNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\RoleSpecs\\RolesByNormalizedNameSpec.cs") }
                                }
                            },
                            "UserClaimSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs") },
                                "UserClaimsByClaimTypeSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByClaimTypeSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByClaimTypeSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByClaimTypeSpec.cs") }
                                },
                                "UserClaimsByClaimValueSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByClaimValueSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByClaimValueSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByClaimValueSpec.cs") }
                                },
                                "UserClaimsByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByIdSpec.cs") }
                                },
                                "UserClaimsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsByUserIdSpec.cs") }
                                },
                                "UserClaimsToClaimsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsToClaimsByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsToClaimsByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsToClaimsByUserIdSpec.cs") }
                                },
                                "UserClaimsToUsersByClaimTypeAndClaimValueSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsToUsersByClaimTypeAndClaimValueSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsToUsersByClaimTypeAndClaimValueSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserClaimSpecs\\UserClaimsToUsersByClaimTypeAndClaimValueSpec.cs") }
                                }
                            },
                            "UserGroupRequestSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs") },
                                "UserGroupRequestsByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByIdSpec.cs") }
                                },
                                "UserGroupRequestsByUserGroupIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByUserGroupIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByUserGroupIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByUserGroupIdSpec.cs") }
                                },
                                "UserGroupRequestsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRequestSpecs\\UserGroupRequestsByUserIdSpec.cs") }
                                }
                            },
                            "UserGroupRoleSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs") },
                                "UserGroupRolesByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByIdSpec.cs") }
                                },
                                "UserGroupRolesByNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByNameSpec.cs") }
                                },
                                "UserGroupRolesByUserGroupIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByUserGroupIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByUserGroupIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupRoleSpecs\\UserGroupRolesByUserGroupIdSpec.cs") }
                                }
                            },
                            "UserGroupSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupSpecs") },
                                "UserGroupsByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupSpecs\\UserGroupsByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupSpecs\\UserGroupsByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserGroupSpecs\\UserGroupsByIdSpec.cs") }
                                }
                            },
                            "UserLoginSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs") },
                                "UserLoginsByLoginProviderSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByLoginProviderSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByLoginProviderSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByLoginProviderSpec.cs") }
                                },
                                "UserLoginsByProviderDisplayNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByProviderDisplayNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByProviderDisplayNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByProviderDisplayNameSpec.cs") }
                                },
                                "UserLoginsByProviderKeySpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByProviderKeySpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByProviderKeySpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByProviderKeySpec.cs") }
                                },
                                "UserLoginsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginsByUserIdSpec.cs") }
                                },
                                "UserLoginToUserLoginInfoByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginToUserLoginInfoByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginToUserLoginInfoByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserLoginSpecs\\UserLoginToUserLoginInfoByUserIdSpec.cs") }
                                }
                            },
                            "UserSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs") },
                                "UsersByAccessFailedCountSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByAccessFailedCountSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByAccessFailedCountSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByAccessFailedCountSpec.cs") }
                                },
                                "UsersByConcurrencyStampSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByConcurrencyStampSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByConcurrencyStampSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByConcurrencyStampSpec.cs") }
                                },
                                "UsersByEmailConfirmedSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByEmailConfirmedSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByEmailConfirmedSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByEmailConfirmedSpec.cs") }
                                },
                                "UsersByEmailSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByEmailSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByEmailSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByEmailSpec.cs") }
                                },
                                "UsersByFirstNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByFirstNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByFirstNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByFirstNameSpec.cs") }
                                },
                                "UsersByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByIdSpec.cs") }
                                },
                                "UsersByLastNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLastNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLastNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLastNameSpec.cs") }
                                },
                                "UsersByLockoutEnabledSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLockoutEnabledSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLockoutEnabledSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLockoutEnabledSpec.cs") }
                                },
                                "UsersByLockoutEndSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLockoutEndSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLockoutEndSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByLockoutEndSpec.cs") }
                                },
                                "UsersByMiddleInitialSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByMiddleInitialSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByMiddleInitialSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByMiddleInitialSpec.cs") }
                                },
                                "UsersByNormalizedEmailSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByNormalizedEmailSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByNormalizedEmailSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByNormalizedEmailSpec.cs") }
                                },
                                "UsersByNormalizedUserNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByNormalizedUserNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByNormalizedUserNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByNormalizedUserNameSpec.cs") }
                                },
                                "UsersByPasswordHashSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPasswordHashSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPasswordHashSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPasswordHashSpec.cs") }
                                },
                                "UsersByPhoneNumberConfirmedSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPhoneNumberConfirmedSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPhoneNumberConfirmedSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPhoneNumberConfirmedSpec.cs") }
                                },
                                "UsersByPhoneNumberSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPhoneNumberSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPhoneNumberSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByPhoneNumberSpec.cs") }
                                },
                                "UsersBySecurityStampSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersBySecurityStampSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersBySecurityStampSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersBySecurityStampSpec.cs") }
                                },
                                "UsersByTwoFactorEnabledSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByTwoFactorEnabledSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByTwoFactorEnabledSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByTwoFactorEnabledSpec.cs") }
                                },
                                "UsersByUserNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByUserNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByUserNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserSpecs\\UsersByUserNameSpec.cs") }
                                }
                            },
                            "UserTokenSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs") },
                                "UserTokensByLoginProviderSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByLoginProviderSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByLoginProviderSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByLoginProviderSpec.cs") }
                                },
                                "UserTokensByNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByNameSpec.cs") }
                                },
                                "UserTokensByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByUserIdSpec.cs") }
                                },
                                "UserTokensByValueSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByValueSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByValueSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\UserTokenSpecs\\UserTokensByValueSpec.cs") }
                                }
                            },
                            "User_RoleSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs") },
                                "User_RolesByRoleIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByRoleIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByRoleIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByRoleIdSpec.cs") }
                                },
                                "User_RolesByUserIdAndNormalizedRoleNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByUserIdAndNormalizedRoleNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByUserIdAndNormalizedRoleNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByUserIdAndNormalizedRoleNameSpec.cs") }
                                },
                                "User_RolesByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesByUserIdSpec.cs") }
                                },
                                "User_RolesToRoleNamesByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesToRoleNamesByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesToRoleNamesByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesToRoleNamesByUserIdSpec.cs") }
                                },
                                "User_RolesToUsersByNormalizedRoleNameSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesToUsersByNormalizedRoleNameSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesToUsersByNormalizedRoleNameSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_RoleSpecs\\User_RolesToUsersByNormalizedRoleNameSpec.cs") }
                                }
                            },
                            "User_UserGroupRoleSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs") },
                                "User_UserGroupRolesByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByIdSpec.cs") }
                                },
                                "User_UserGroupRolesByUserGroupRoleIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByUserGroupRoleIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByUserGroupRoleIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByUserGroupRoleIdSpec.cs") }
                                },
                                "User_UserGroupRolesByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupRoleSpecs\\User_UserGroupRolesByUserIdSpec.cs") }
                                }
                            },
                            "User_UserGroupSpecs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs") },
                                "User_UserGroupsByIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByIdSpec.cs") }
                                },
                                "User_UserGroupsByUserGroupIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByUserGroupIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByUserGroupIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByUserGroupIdSpec.cs") }
                                },
                                "User_UserGroupsByUserIdSpec.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByUserIdSpec.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByUserIdSpec.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\User_UserGroupSpecs\\User_UserGroupsByUserIdSpec.cs") }
                                }
                            },
                            "__Entities_Groups_00_Name__Specs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs") },
                                "__Entities_Name__Specs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs") },
                                    "__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_AuthGen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_AuthGen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_AuthGen_.cs") }
                                    }
                                }
                            }
                        },
                        "ValueObjects": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects") },
                            "Ids": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids") },
                                "RoleClaimId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\RoleClaimId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\RoleClaimId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\RoleClaimId.cs") }
                                },
                                "RoleId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\RoleId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\RoleId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\RoleId.cs") }
                                },
                                "TextMessageProviderIds": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds") },
                                    "TwilioIds": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds\\TwilioIds",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds\\TwilioIds") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds\\TwilioIds") },
                                        "TwilioVerifySettingId.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds\\TwilioIds\\TwilioVerifySettingId.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds\\TwilioIds\\TwilioVerifySettingId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\TextMessageProviderIds\\TwilioIds\\TwilioVerifySettingId.cs") }
                                        }
                                    }
                                },
                                "UserClaimId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserClaimId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserClaimId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserClaimId.cs") }
                                },
                                "UserGroupId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupId.cs") }
                                },
                                "UserGroupRequestId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupRequestId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupRequestId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupRequestId.cs") }
                                },
                                "UserGroupRoleId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupRoleId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupRoleId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserGroupRoleId.cs") }
                                },
                                "UserId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserId.cs") }
                                },
                                "UserLoginId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserLoginId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserLoginId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserLoginId.cs") }
                                },
                                "UserTokenId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserTokenId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserTokenId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\UserTokenId.cs") }
                                },
                                "User_RoleId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_RoleId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_RoleId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_RoleId.cs") }
                                },
                                "User_UserGroupId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_UserGroupId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_UserGroupId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_UserGroupId.cs") }
                                },
                                "User_UserGroupRoleId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_UserGroupRoleId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_UserGroupRoleId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\User_UserGroupRoleId.cs") }
                                },
                                "__Entities_Groups_00_Name__Ids": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids") },
                                    "__Entities_Name__Id_AuthGen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_AuthGen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_AuthGen_.cs") }
                                    }
                                }
                            }
                        }
                    },
                    "Auth.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure") },
                        "Auth.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Auth.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Auth.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Auth.Infrastructure.csproj") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\bin") }
                        },
                        "Data": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data") },
                            "Migrations": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations") },
                                "20220108162045_init.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\20220108162045_init.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\20220108162045_init.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\20220108162045_init.cs") }
                                },
                                "20220108162045_init.Designer.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\20220108162045_init.Designer.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\20220108162045_init.Designer.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\20220108162045_init.Designer.cs") }
                                },
                                "AuthDbContextModelSnapshot.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\AuthDbContextModelSnapshot.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\AuthDbContextModelSnapshot.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Data\\Migrations\\AuthDbContextModelSnapshot.cs") }
                                }
                            }
                        },
                        "DbContexts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\DbContexts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\DbContexts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\DbContexts") },
                            "AuthDbContext.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\DbContexts\\AuthDbContext.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\DbContexts\\AuthDbContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\DbContexts\\AuthDbContext.cs") }
                            }
                        },
                        "EntityTypeConfigurations": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations") },
                            "RoleClaimEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\RoleClaimEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\RoleClaimEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\RoleClaimEntityTypeConfiguration.cs") }
                            },
                            "RoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\RoleEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\RoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\RoleEntityTypeConfiguration.cs") }
                            },
                            "UserClaimEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserClaimEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserClaimEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserClaimEntityTypeConfiguration.cs") }
                            },
                            "UserEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserEntityTypeConfiguration.cs") }
                            },
                            "UserGroupEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupEntityTypeConfiguration.cs") }
                            },
                            "UserGroupRequestEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupRequestEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupRequestEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupRequestEntityTypeConfiguration.cs") }
                            },
                            "UserGroupRoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupRoleEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupRoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserGroupRoleEntityTypeConfiguration.cs") }
                            },
                            "UserLoginEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserLoginEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserLoginEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserLoginEntityTypeConfiguration.cs") }
                            },
                            "UserTokenEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserTokenEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserTokenEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\UserTokenEntityTypeConfiguration.cs") }
                            },
                            "User_RoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_RoleEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_RoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_RoleEntityTypeConfiguration.cs") }
                            },
                            "User_UserGroupEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_UserGroupEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_UserGroupEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_UserGroupEntityTypeConfiguration.cs") }
                            },
                            "User_UserGroupRoleEntityTypeConfiguration.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_UserGroupRoleEntityTypeConfiguration.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_UserGroupRoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\User_UserGroupRoleEntityTypeConfiguration.cs") }
                            },
                            "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") },
                                "__Entities_Name__EntityTypeConfiguration_AuthGen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_AuthGen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_AuthGen_.cs") }
                                }
                            }
                        },
                        "Extensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions") },
                            "MicrosoftExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions") },
                                "AspNetCoreExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") },
                                    "IApplicationBuilderExtensions": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions") },
                                        "UseAuthServerExtensions.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseAuthServerExtensions.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseAuthServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseAuthServerExtensions.cs") }
                                        }
                                    }
                                },
                                "EntityFrameworkCoreExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions") },
                                    "DbContextOptionsBuilderExtensions": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions") },
                                        "BuildCustomDbContextOptionsForOpenIDDictExtension.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions\\BuildCustomDbContextOptionsForOpenIDDictExtension.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions\\BuildCustomDbContextOptionsForOpenIDDictExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions\\BuildCustomDbContextOptionsForOpenIDDictExtension.cs") }
                                        }
                                    }
                                },
                                "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") },
                                    "AddAuthDbContextPoolsExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextPoolsExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextPoolsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextPoolsExtension.cs") }
                                    },
                                    "AddAuthDbContextsExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextsExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextsExtension.cs") }
                                    },
                                    "AddAuthenticationExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthenticationExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthenticationExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthenticationExtension.cs") }
                                    },
                                    "AddAuthServerExtensions.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthServerExtensions.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthServerExtensions.cs") }
                                    },
                                    "AddClientAuthServerExtensions.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddClientAuthServerExtensions.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddClientAuthServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddClientAuthServerExtensions.cs") }
                                    },
                                    "AddIdentityExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityExtension.cs") }
                                    },
                                    "AddIdentityServerAuthenticationExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityServerAuthenticationExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityServerAuthenticationExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityServerAuthenticationExtension.cs") }
                                    },
                                    "AddOpenIddictDbContextExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextExtension.cs") }
                                    },
                                    "AddOpenIddictDbContextPoolExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextPoolExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextPoolExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextPoolExtension.cs") }
                                    },
                                    "AddOpenIddictExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictExtension.cs") }
                                    },
                                    "AddStoresExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddStoresExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddStoresExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddStoresExtension.cs") }
                                    }
                                }
                            }
                        },
                        "Identity": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity") },
                            "CustomRoleStore.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity\\CustomRoleStore.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity\\CustomRoleStore.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity\\CustomRoleStore.cs") }
                            },
                            "CustomUserStore.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity\\CustomUserStore.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity\\CustomUserStore.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Identity\\CustomUserStore.cs") }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\obj") }
                        },
                        "OpenIdDict": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict") },
                            "CustomOpenIddictApplication.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictApplication.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictApplication.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictApplication.cs") }
                            },
                            "CustomOpenIddictAuthorization.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictAuthorization.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictAuthorization.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictAuthorization.cs") }
                            },
                            "CustomOpenIddictScope.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictScope.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictScope.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictScope.cs") }
                            },
                            "CustomOpenIddictToken.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictToken.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictToken.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\CustomOpenIddictToken.cs") }
                            },
                            "TokenProviders": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\TokenProviders",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\TokenProviders") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\TokenProviders") },
                                "CustomemailconfirmationTokenProvider.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\TokenProviders\\CustomemailconfirmationTokenProvider.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\TokenProviders\\CustomemailconfirmationTokenProvider.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\OpenIdDict\\TokenProviders\\CustomemailconfirmationTokenProvider.cs") }
                                }
                            }
                        },
                        "Repositories": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories") },
                            "RoleClaimRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\RoleClaimRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\RoleClaimRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\RoleClaimRepository.cs") }
                            },
                            "RoleRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\RoleRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\RoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\RoleRepository.cs") }
                            },
                            "UserClaimRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserClaimRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserClaimRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserClaimRepository.cs") }
                            },
                            "UserGroupRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRepository.cs") }
                            },
                            "UserGroupRequestRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRequestRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRequestRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRequestRepository.cs") }
                            },
                            "UserGroupRoleRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRoleRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserGroupRoleRepository.cs") }
                            },
                            "UserLoginRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserLoginRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserLoginRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserLoginRepository.cs") }
                            },
                            "UserRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserRepository.cs") }
                            },
                            "UserTokenRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserTokenRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserTokenRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\UserTokenRepository.cs") }
                            },
                            "User_RoleRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_RoleRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_RoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_RoleRepository.cs") }
                            },
                            "User_UserGroupRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_UserGroupRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_UserGroupRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_UserGroupRepository.cs") }
                            },
                            "User_UserGroupRoleRepository.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_UserGroupRoleRepository.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_UserGroupRoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\User_UserGroupRoleRepository.cs") }
                            },
                            "__Entities_Groups_00_Name__Repositories": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories") },
                                "__Entities_Name__Repository_AuthGen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_AuthGen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_AuthGen_.cs") }
                                }
                            }
                        }
                    },
                    "Auth.IntegrationEvents": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents") },
                        "Auth.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\Auth.IntegrationEvents.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\Auth.IntegrationEvents.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\Auth.IntegrationEvents.csproj") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\Class1.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Auth.IntegrationEvents\\obj") }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared") },
                        "SharedAuth.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Class1.cs") }
                            },
                            "Dtos": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos") },
                                "AuthDtos": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos") },
                                    "LoginDto.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos\\LoginDto.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos\\LoginDto.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos\\LoginDto.cs") }
                                    },
                                    "RegisterDto.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos\\RegisterDto.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos\\RegisterDto.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Dtos\\AuthDtos\\RegisterDto.cs") }
                                    }
                                }
                            },
                            "Interfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces") },
                                "SevriceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces") },
                                    "ISharedRoleApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedRoleApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedRoleApplicationService.cs") }
                                    },
                                    "ISharedRoleClaimApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedRoleClaimApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedRoleClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedRoleClaimApplicationService.cs") }
                                    },
                                    "ISharedUserApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserApplicationService.cs") }
                                    },
                                    "ISharedUserClaimApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserClaimApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserClaimApplicationService.cs") }
                                    },
                                    "ISharedUserGroupApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupApplicationService.cs") }
                                    },
                                    "ISharedUserGroupRequestApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupRequestApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupRequestApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupRequestApplicationService.cs") }
                                    },
                                    "ISharedUserGroupRoleApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupRoleApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserGroupRoleApplicationService.cs") }
                                    },
                                    "ISharedUserLoginApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserLoginApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserLoginApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserLoginApplicationService.cs") }
                                    },
                                    "ISharedUserTokenApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserTokenApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserTokenApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUserTokenApplicationService.cs") }
                                    },
                                    "ISharedUser_RoleApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_RoleApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_RoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_RoleApplicationService.cs") }
                                    },
                                    "ISharedUser_UserGroupApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_UserGroupApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_UserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_UserGroupApplicationService.cs") }
                                    },
                                    "ISharedUser_UserGroupRoleApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_UserGroupRoleApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_UserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\ISharedUser_UserGroupRoleApplicationService.cs") }
                                    },
                                    "__Entities_Groups_00_Name__ServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") },
                                        "IShared__Entities_Name__ApplicationService_AuthGen_.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_AuthGen_.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_AuthGen_.cs") }
                                        }
                                    }
                                }
                            },
                            "Localizations": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations") },
                                "Templates": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates") },
                                    "Pots": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates\\Pots",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates\\Pots") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates\\Pots") },
                                        "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") }
                                        }
                                    }
                                }
                            },
                            "Models": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models") },
                                "EntityModels": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels") },
                                    "RoleClaimModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\RoleClaimModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\RoleClaimModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\RoleClaimModel.cs") }
                                    },
                                    "RoleModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\RoleModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\RoleModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\RoleModel.cs") }
                                    },
                                    "UserClaimModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserClaimModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserClaimModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserClaimModel.cs") }
                                    },
                                    "UserGroupModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupModel.cs") }
                                    },
                                    "UserGroupRequestModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupRequestModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupRequestModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupRequestModel.cs") }
                                    },
                                    "UserGroupRoleModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupRoleModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupRoleModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserGroupRoleModel.cs") }
                                    },
                                    "UserLoginModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserLoginModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserLoginModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserLoginModel.cs") }
                                    },
                                    "UserModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserModel.cs") }
                                    },
                                    "UserTokenModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserTokenModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserTokenModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\UserTokenModel.cs") }
                                    },
                                    "User_RoleModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_RoleModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_RoleModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_RoleModel.cs") }
                                    },
                                    "User_UserGroupModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_UserGroupModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_UserGroupModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_UserGroupModel.cs") }
                                    },
                                    "User_UserGroupRoleModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_UserGroupRoleModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_UserGroupRoleModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Models\\EntityModels\\User_UserGroupRoleModel.cs") }
                                    }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\obj") }
                            },
                            "Protos": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos") },
                                "EntityModelProtos": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos") },
                                    "Entities": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities") },
                                        "ReferenceEntities": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\ReferenceEntities",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\ReferenceEntities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\ReferenceEntities") },
                                            "EnumReference.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\ReferenceEntities\\EnumReference.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\ReferenceEntities\\EnumReference.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\ReferenceEntities\\EnumReference.cs") }
                                            }
                                        },
                                        "__Entities_Groups_00_Name__EntityModelProtos": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\__Entities_Groups_00_Name__EntityModelProtos",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\__Entities_Groups_00_Name__EntityModelProtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\__Entities_Groups_00_Name__EntityModelProtos") },
                                            "__Entities_Name__Proto.proto.txt": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\__Entities_Groups_00_Name__EntityModelProtos\\__Entities_Name__Proto.proto.txt",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\__Entities_Groups_00_Name__EntityModelProtos\\__Entities_Name__Proto.proto.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\EntityModelProtos\\Entities\\__Entities_Groups_00_Name__EntityModelProtos\\__Entities_Name__Proto.proto.txt") }
                                            }
                                        }
                                    }
                                },
                                "ServiceProtos": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos") },
                                    "__Entities_Groups_00_Name__ApplicationServiceProtos": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos\\__Entities_Groups_00_Name__ApplicationServiceProtos",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos\\__Entities_Groups_00_Name__ApplicationServiceProtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos\\__Entities_Groups_00_Name__ApplicationServiceProtos") },
                                        "__Entities_Name__ApplicationServiceProto.proto.txt": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos\\__Entities_Groups_00_Name__ApplicationServiceProtos\\__Entities_Name__ApplicationServiceProto.proto.txt",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos\\__Entities_Groups_00_Name__ApplicationServiceProtos\\__Entities_Name__ApplicationServiceProto.proto.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Protos\\ServiceProtos\\__Entities_Groups_00_Name__ApplicationServiceProtos\\__Entities_Name__ApplicationServiceProto.proto.txt") }
                                        }
                                    }
                                }
                            },
                            "Services": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services") },
                                "SharedRoleApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedRoleApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedRoleApplicationService.cs") }
                                },
                                "SharedRoleClaimApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedRoleClaimApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedRoleClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedRoleClaimApplicationService.cs") }
                                },
                                "SharedUserApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserApplicationService.cs") }
                                },
                                "SharedUserClaimApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserClaimApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserClaimApplicationService.cs") }
                                },
                                "SharedUserGroupApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupApplicationService.cs") }
                                },
                                "SharedUserGroupRequestApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupRequestApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupRequestApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupRequestApplicationService.cs") }
                                },
                                "SharedUserGroupRoleApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupRoleApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserGroupRoleApplicationService.cs") }
                                },
                                "SharedUserLoginApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserLoginApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserLoginApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserLoginApplicationService.cs") }
                                },
                                "SharedUserTokenApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserTokenApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserTokenApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUserTokenApplicationService.cs") }
                                },
                                "SharedUser_RoleApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_RoleApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_RoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_RoleApplicationService.cs") }
                                },
                                "SharedUser_UserGroupApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_UserGroupApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_UserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_UserGroupApplicationService.cs") }
                                },
                                "SharedUser_UserGroupRoleApplicationService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_UserGroupRoleApplicationService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_UserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\SharedUser_UserGroupRoleApplicationService.cs") }
                                },
                                "__Entities_Groups_00_Name__Services": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\__Entities_Groups_00_Name__Services",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\__Entities_Groups_00_Name__Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\__Entities_Groups_00_Name__Services") },
                                    "Shared__Entities_Name__ApplicationService_AuthGen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_AuthGen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_AuthGen_.cs") }
                                    }
                                }
                            },
                            "SharedAuth.Application.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\SharedAuth.Application.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\SharedAuth.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Application\\SharedAuth.Application.csproj") }
                            }
                        },
                        "SharedAuth.Domain": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\Class1.cs") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\obj") }
                            },
                            "SharedAuth.Domain.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\SharedAuth.Domain.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\SharedAuth.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Domain\\SharedAuth.Domain.csproj") }
                            }
                        },
                        "SharedAuth.Infrastructure": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure") },
                            "Auth": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth") },
                                "AccountClaimsPrincipalFactories": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AccountClaimsPrincipalFactories",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AccountClaimsPrincipalFactories") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AccountClaimsPrincipalFactories") },
                                    "CustomUserFactory.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AccountClaimsPrincipalFactories\\CustomUserFactory.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AccountClaimsPrincipalFactories\\CustomUserFactory.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AccountClaimsPrincipalFactories\\CustomUserFactory.cs") }
                                    }
                                },
                                "AuthorizationMessageHandlers": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AuthorizationMessageHandlers",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AuthorizationMessageHandlers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AuthorizationMessageHandlers") },
                                    "CustomAuthenticationMessageHandler.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AuthorizationMessageHandlers\\CustomAuthenticationMessageHandler.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AuthorizationMessageHandlers\\CustomAuthenticationMessageHandler.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Auth\\AuthorizationMessageHandlers\\CustomAuthenticationMessageHandler.cs") }
                                    }
                                }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Class1.cs") }
                            },
                            "Extensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions") },
                                "MicrosoftExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions") },
                                    "AspNetCoreExtensions": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") },
                                        "WebAssemblyHostBuilderExtensions": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions") },
                                            "BuildAuthClientExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions\\BuildAuthClientExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions\\BuildAuthClientExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions\\BuildAuthClientExtension.cs") }
                                            }
                                        }
                                    }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\obj") }
                            },
                            "SharedAuth.Infrastructure.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\SharedAuth.Infrastructure.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\SharedAuth.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Shared\\SharedAuth.Infrastructure\\SharedAuth.Infrastructure.csproj") }
                            }
                        }
                    },
                    "Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests") },
                        "Auth.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests") },
                            "Auth.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\Auth.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\Auth.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\Auth.ArchTests.csproj") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.ArchTests\\UnitTest1.cs") }
                            }
                        },
                        "Auth.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests") },
                            "Auth.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\Auth.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\Auth.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\Auth.IntegrationTests.csproj") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.IntegrationTests\\UnitTest1.cs") }
                            }
                        },
                        "Auth.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests") },
                            "Auth.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\Auth.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\Auth.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\Auth.UnitTests.csproj") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthBoundedContext\\Tests\\Auth.UnitTests\\UnitTest1.cs") }
                            }
                        }
                    }
                },
                "AuthoBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthoBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthoBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthoBoundedContext") },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\AuthoBoundedContext\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthoBoundedContext\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\AuthoBoundedContext\\obj") }
                    }
                },
                "DebateBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext") },
                    "Debate.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\Class1.cs") }
                        },
                        "Debate.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\Debate.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\Debate.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\Debate.Application.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Application\\obj") }
                        }
                    },
                    "Debate.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\Class1.cs") }
                        },
                        "Debate.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\Debate.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\Debate.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\Debate.Domain.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Domain\\obj") }
                        }
                    },
                    "Debate.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\Class1.cs") }
                        },
                        "Debate.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\Debate.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\Debate.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\Debate.Infrastructure.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.Infrastructure\\obj") }
                        }
                    },
                    "Debate.IntegrationEvents": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\Class1.cs") }
                        },
                        "Debate.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\Debate.IntegrationEvents.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\Debate.IntegrationEvents.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\Debate.IntegrationEvents.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Debate.IntegrationEvents\\obj") }
                        }
                    },
                    "Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests") },
                        "Debate.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\bin") }
                            },
                            "Debate.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\Debate.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\Debate.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\Debate.ArchTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.ArchTests\\UnitTest1.cs") }
                            }
                        },
                        "Debate.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\bin") }
                            },
                            "Debate.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\Debate.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\Debate.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\Debate.IntegrationTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.IntegrationTests\\UnitTest1.cs") }
                            }
                        },
                        "Debate.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\bin") }
                            },
                            "Debate.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\Debate.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\Debate.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\Debate.UnitTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\DebateBoundedContext\\Tests\\Debate.UnitTests\\UnitTest1.cs") }
                            }
                        }
                    }
                },
                "EmailBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext") },
                    "Email.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application") },
                        ".vs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\.vs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\.vs") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\Class1.cs") }
                        },
                        "Email.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\Email.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\Email.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\Email.Application.csproj") }
                        },
                        "EmailApplicationConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\EmailApplicationConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\EmailApplicationConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\EmailApplicationConfig.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Application\\obj") }
                        }
                    },
                    "Email.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\bin") }
                        },
                        "Email.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\Email.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\Email.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\Email.Domain.csproj") }
                        },
                        "EmailDomainConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\EmailDomainConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\EmailDomainConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\EmailDomainConfig.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Domain\\obj") }
                        }
                    },
                    "Email.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\bin") }
                        },
                        "DbContexts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\DbContexts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\DbContexts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\DbContexts") },
                            "EmailDbContext.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\DbContexts\\EmailDbContext.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\DbContexts\\EmailDbContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\DbContexts\\EmailDbContext.cs") }
                            }
                        },
                        "Email.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Email.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Email.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Email.Infrastructure.csproj") }
                        },
                        "EmailInfrastructureConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\EmailInfrastructureConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\EmailInfrastructureConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\EmailInfrastructureConfig.cs") }
                        },
                        "Extensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions") },
                            "MicrosoftExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions") },
                                "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") },
                                    "AddEmailDbContextPoolsExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailDbContextPoolsExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailDbContextPoolsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailDbContextPoolsExtension.cs") }
                                    },
                                    "AddEmailDbContextsExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailDbContextsExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailDbContextsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailDbContextsExtension.cs") }
                                    },
                                    "AddEmailServerExtensions.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailServerExtensions.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEmailServerExtensions.cs") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.Infrastructure\\obj") }
                        }
                    },
                    "Email.IntegrationEvents": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\Class1.cs") }
                        },
                        "Email.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\Email.IntegrationEvents.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\Email.IntegrationEvents.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\Email.IntegrationEvents.csproj") }
                        },
                        "EmailIntegrationEventsConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\EmailIntegrationEventsConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\EmailIntegrationEventsConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\EmailIntegrationEventsConfig.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Email.IntegrationEvents\\obj") }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared") },
                        "SharedEmail.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\bin") }
                            },
                            "Interfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces") },
                                "SevriceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces\\SevriceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces\\SevriceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces\\SevriceInterfaces") },
                                    "ISharedSampleApplicationService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces\\SevriceInterfaces\\ISharedSampleApplicationService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces\\SevriceInterfaces\\ISharedSampleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Interfaces\\SevriceInterfaces\\ISharedSampleApplicationService.cs") }
                                    }
                                }
                            },
                            "Localizations": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations") },
                                "Templates": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates") },
                                    "Pots": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates\\Pots",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates\\Pots") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates\\Pots") },
                                        "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") }
                                        }
                                    }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\obj") }
                            },
                            "SharedEmail.Application.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\SharedEmail.Application.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\SharedEmail.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\SharedEmail.Application.csproj") }
                            },
                            "SharedEmailApplicationConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\SharedEmailApplicationConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\SharedEmailApplicationConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Application\\SharedEmailApplicationConfig.cs") }
                            }
                        },
                        "SharedEmail.Domain": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\obj") }
                            },
                            "SharedEmail.Domain.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\SharedEmail.Domain.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\SharedEmail.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\SharedEmail.Domain.csproj") }
                            },
                            "SharedEmailDomainConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\SharedEmailDomainConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\SharedEmailDomainConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Domain\\SharedEmailDomainConfig.cs") }
                            }
                        },
                        "SharedEmail.Infrastructure": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\Class1.cs") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\obj") }
                            },
                            "SharedEmail.Infrastructure.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\SharedEmail.Infrastructure.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\SharedEmail.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\SharedEmail.Infrastructure.csproj") }
                            },
                            "SharedEmailInfrastructureConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\SharedEmailInfrastructureConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\SharedEmailInfrastructureConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Shared\\SharedEmail.Infrastructure\\SharedEmailInfrastructureConfig.cs") }
                            }
                        }
                    },
                    "Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests") },
                        "Email.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\bin") }
                            },
                            "Email.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\Email.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\Email.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\Email.ArchTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.ArchTests\\UnitTest1.cs") }
                            }
                        },
                        "Email.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\bin") }
                            },
                            "Email.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\Email.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\Email.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\Email.IntegrationTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.IntegrationTests\\UnitTest1.cs") }
                            }
                        },
                        "Email.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\bin") }
                            },
                            "Email.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\Email.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\Email.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\Email.UnitTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\EmailBoundedContext\\Tests\\Email.UnitTests\\UnitTest1.cs") }
                            }
                        }
                    }
                },
                "JobBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext") },
                    "Job.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Class1.cs") }
                        },
                        "Job - Backup.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Job - Backup.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Job - Backup.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Job - Backup.Application.csproj") }
                        },
                        "Job.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Job.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Job.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\Job.Application.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Application\\obj") }
                        }
                    },
                    "Job.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\Class1.cs") }
                        },
                        "Job.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\Job.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\Job.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\Job.Domain.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Domain\\obj") }
                        }
                    },
                    "Job.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\Class1.cs") }
                        },
                        "Job.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\Job.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\Job.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\Job.Infrastructure.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.Infrastructure\\obj") }
                        }
                    },
                    "Job.IntegrationEvents": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\Class1.cs") }
                        },
                        "Job.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\Job.IntegrationEvents.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\Job.IntegrationEvents.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\Job.IntegrationEvents.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Job.IntegrationEvents\\obj") }
                        }
                    },
                    "Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests") },
                        "Job.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\bin") }
                            },
                            "Job.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\Job.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\Job.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\Job.ArchTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.ArchTests\\UnitTest1.cs") }
                            }
                        },
                        "Job.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\bin") }
                            },
                            "Job.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\Job.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\Job.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\Job.IntegrationTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.IntegrationTests\\UnitTest1.cs") }
                            }
                        },
                        "Job.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\bin") }
                            },
                            "Job.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\Job.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\Job.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\Job.UnitTests.csproj") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\JobBoundedContext\\Tests\\Job.UnitTests\\UnitTest1.cs") }
                            }
                        }
                    }
                },
                "MapBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext") },
                    "Map.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\Class1.cs") }
                        },
                        "Map.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\Map.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\Map.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\Map.Application.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Application\\obj") }
                        }
                    },
                    "Map.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\Class1.cs") }
                        },
                        "Map.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\Map.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\Map.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\Map.Domain.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Domain\\obj") }
                        }
                    },
                    "Map.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\Class1.cs") }
                        },
                        "Map.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\Map.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\Map.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\Map.Infrastructure.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.Infrastructure\\obj") }
                        }
                    },
                    "Map.IntegrationEvents": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\Class1.cs") }
                        },
                        "Map.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\Map.IntegrationEvents.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\Map.IntegrationEvents.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\Map.IntegrationEvents.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Map.IntegrationEvents\\obj") }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared") },
                        "SharedMap.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\Class1.cs") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\obj") }
                            },
                            "SharedMap.Application.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\SharedMap.Application.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\SharedMap.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Application\\SharedMap.Application.csproj") }
                            }
                        },
                        "SharedMap.Domain": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\Class1.cs") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\obj") }
                            },
                            "SharedMap.Domain.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\SharedMap.Domain.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\SharedMap.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Domain\\SharedMap.Domain.csproj") }
                            }
                        },
                        "SharedMap.Infrastructure": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\Class1.cs") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\obj") }
                            },
                            "SharedMap.Infrastructure.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\SharedMap.Infrastructure.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\SharedMap.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\MapBoundedContext\\Shared\\SharedMap.Infrastructure\\SharedMap.Infrastructure.csproj") }
                            }
                        }
                    }
                },
                "ShopBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext") },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared") },
                        "SharedShop.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\bin") }
                            },
                            "Localizations": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations") },
                                "Templates": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates") },
                                    "Pots": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates\\Pots",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates\\Pots") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates\\Pots") },
                                        "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") }
                                        }
                                    }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\obj") }
                            },
                            "SharedShop.Application.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\SharedShop.Application.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\SharedShop.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\SharedShop.Application.csproj") }
                            },
                            "SharedShopApplicationConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\SharedShopApplicationConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\SharedShopApplicationConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Application\\SharedShopApplicationConfig.cs") }
                            }
                        },
                        "SharedShop.Domain": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\obj") }
                            },
                            "SharedShop.Domain.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\SharedShop.Domain.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\SharedShop.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\SharedShop.Domain.csproj") }
                            },
                            "SharedShopDomainConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\SharedShopDomainConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\SharedShopDomainConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Domain\\SharedShopDomainConfig.cs") }
                            }
                        },
                        "SharedShop.Infrastructure": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\obj") }
                            },
                            "SharedShop.Infrastructure.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\SharedShop.Infrastructure.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\SharedShop.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\SharedShop.Infrastructure.csproj") }
                            },
                            "SharedShopInfrastructureConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\SharedShopInfrastructureConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\SharedShopInfrastructureConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shared\\SharedShop.Infrastructure\\SharedShopInfrastructureConfig.cs") }
                            }
                        }
                    },
                    "Shop.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application") },
                        ".vs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\.vs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\.vs") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\obj") }
                        },
                        "Shop.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\Shop.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\Shop.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\Shop.Application.csproj") }
                        },
                        "ShopApplicationConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\ShopApplicationConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\ShopApplicationConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Application\\ShopApplicationConfig.cs") }
                        }
                    },
                    "Shop.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\obj") }
                        },
                        "Shop.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\Shop.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\Shop.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\Shop.Domain.csproj") }
                        },
                        "ShopDomainConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\ShopDomainConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\ShopDomainConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Domain\\ShopDomainConfig.cs") }
                        }
                    },
                    "Shop.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\bin") }
                        },
                        "DbContexts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\DbContexts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\DbContexts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\DbContexts") },
                            "ShopDbContext.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\DbContexts\\ShopDbContext.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\DbContexts\\ShopDbContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\DbContexts\\ShopDbContext.cs") }
                            }
                        },
                        "Extensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions") },
                            "MicrosoftExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions") },
                                "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") },
                                    "AddShopDbContextPoolsExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopDbContextPoolsExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopDbContextPoolsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopDbContextPoolsExtension.cs") }
                                    },
                                    "AddShopDbContextsExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopDbContextsExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopDbContextsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopDbContextsExtension.cs") }
                                    },
                                    "AddShopServerExtensions.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopServerExtensions.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddShopServerExtensions.cs") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\obj") }
                        },
                        "Shop.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Shop.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Shop.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\Shop.Infrastructure.csproj") }
                        },
                        "ShopInfrastructureConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\ShopInfrastructureConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\ShopInfrastructureConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.Infrastructure\\ShopInfrastructureConfig.cs") }
                        }
                    },
                    "Shop.IntegrationEvents": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\obj") }
                        },
                        "Shop.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\Shop.IntegrationEvents.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\Shop.IntegrationEvents.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\Shop.IntegrationEvents.csproj") }
                        },
                        "ShopIntegrationEventsConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\ShopIntegrationEventsConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\ShopIntegrationEventsConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Shop.IntegrationEvents\\ShopIntegrationEventsConfig.cs") }
                        }
                    },
                    "Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests") },
                        "Shop.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\obj") }
                            },
                            "Shop.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\Shop.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\Shop.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\Shop.ArchTests.csproj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.ArchTests\\UnitTest1.cs") }
                            }
                        },
                        "Shop.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\obj") }
                            },
                            "Shop.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\Shop.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\Shop.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\Shop.IntegrationTests.csproj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.IntegrationTests\\UnitTest1.cs") }
                            }
                        },
                        "Shop.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\obj") }
                            },
                            "Shop.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\Shop.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\Shop.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\Shop.UnitTests.csproj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\ShopBoundedContext\\Tests\\Shop.UnitTests\\UnitTest1.cs") }
                            }
                        }
                    }
                },
                "SurveyBoundedContext": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext") },
                    "Survey.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Class1.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\obj") }
                        },
                        "Survey - Backup.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Survey - Backup.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Survey - Backup.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Survey - Backup.Application.csproj") }
                        },
                        "Survey.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Survey.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Survey.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Application\\Survey.Application.csproj") }
                        }
                    },
                    "Survey.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\Class1.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\obj") }
                        },
                        "Survey.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\Survey.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\Survey.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Domain\\Survey.Domain.csproj") }
                        }
                    },
                    "Survey.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\Class1.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\obj") }
                        },
                        "Survey.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\Survey.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\Survey.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Survey.Infrastructure\\Survey.Infrastructure.csproj") }
                        }
                    },
                    "Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests") },
                        "Survey.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\obj") }
                            },
                            "Survey.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\Survey.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\Survey.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\Survey.ArchTests.csproj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.ArchTests\\UnitTest1.cs") }
                            }
                        },
                        "Survey.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\obj") }
                            },
                            "Survey.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\Survey.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\Survey.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\Survey.IntegrationTests.csproj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.IntegrationTests\\UnitTest1.cs") }
                            }
                        },
                        "Survey.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\obj") }
                            },
                            "Survey.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\Survey.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\Survey.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\Survey.UnitTests.csproj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\SurveyBoundedContext\\Tests\\Survey.UnitTests\\UnitTest1.cs") }
                            }
                        }
                    }
                },
                "__EBN__BoundedContext_gen_": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_") },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared") },
                        "Shared__Entities_BoundedContext_Name__.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\bin") }
                            },
                            "Interfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces") },
                                "SevriceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces") },
                                    "__Entities_Groups_00_Name__ServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") },
                                        "IShared__Entities_Name__ApplicationService_Gen_.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_Gen_.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_Gen_.cs") }
                                        }
                                    }
                                }
                            },
                            "Localizations": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations") },
                                "Templates": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates") },
                                    "Pots": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates\\Pots",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates\\Pots") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates\\Pots") },
                                        "SharedAuth.Application.pot": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Localizations\\Templates\\Pots\\SharedAuth.Application.pot") }
                                        }
                                    }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\obj") }
                            },
                            "Services": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services") },
                                "__Entities_Groups_00_Name__Services": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services\\__Entities_Groups_00_Name__Services",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services\\__Entities_Groups_00_Name__Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services\\__Entities_Groups_00_Name__Services") },
                                    "Shared__Entities_Name__ApplicationService_Gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_Gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_Gen_.cs") }
                                    }
                                }
                            },
                            "Shared__Entities_BoundedContext_Name__.Application.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Shared__Entities_BoundedContext_Name__.Application.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Shared__Entities_BoundedContext_Name__.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Shared__Entities_BoundedContext_Name__.Application.csproj") }
                            },
                            "Shared__Entities_BoundedContext_Name__ApplicationConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Shared__Entities_BoundedContext_Name__ApplicationConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Shared__Entities_BoundedContext_Name__ApplicationConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Application\\Shared__Entities_BoundedContext_Name__ApplicationConfig.cs") }
                            }
                        },
                        "Shared__Entities_BoundedContext_Name__.Domain": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\obj") }
                            },
                            "Shared__Entities_BoundedContext_Name__.Domain.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\Shared__Entities_BoundedContext_Name__.Domain.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\Shared__Entities_BoundedContext_Name__.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\Shared__Entities_BoundedContext_Name__.Domain.csproj") }
                            },
                            "Shared__Entities_BoundedContext_Name__DomainConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\Shared__Entities_BoundedContext_Name__DomainConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\Shared__Entities_BoundedContext_Name__DomainConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Domain\\Shared__Entities_BoundedContext_Name__DomainConfig.cs") }
                            }
                        },
                        "Shared__Entities_BoundedContext_Name__.Infrastructure": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\obj") }
                            },
                            "Shared__Entities_BoundedContext_Name__.Infrastructure.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\Shared__Entities_BoundedContext_Name__.Infrastructure.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\Shared__Entities_BoundedContext_Name__.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\Shared__Entities_BoundedContext_Name__.Infrastructure.csproj") }
                            },
                            "Shared__Entities_BoundedContext_Name__InfrastructureConfig.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\Shared__Entities_BoundedContext_Name__InfrastructureConfig.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\Shared__Entities_BoundedContext_Name__InfrastructureConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Shared\\Shared__Entities_BoundedContext_Name__.Infrastructure\\Shared__Entities_BoundedContext_Name__InfrastructureConfig.cs") }
                            }
                        }
                    },
                    "Tests": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests") },
                        "__Entities_BoundedContext_Name__.ArchTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\UnitTest1.cs") }
                            },
                            "__Entities_BoundedContext_Name__.ArchTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\__Entities_BoundedContext_Name__.ArchTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\__Entities_BoundedContext_Name__.ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\__Entities_BoundedContext_Name__.ArchTests.csproj") }
                            }
                        },
                        "__Entities_BoundedContext_Name__.IntegrationTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\UnitTest1.cs") }
                            },
                            "__Entities_BoundedContext_Name__.IntegrationTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\__Entities_BoundedContext_Name__.IntegrationTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\__Entities_BoundedContext_Name__.IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.IntegrationTests\\__Entities_BoundedContext_Name__.IntegrationTests.csproj") }
                            }
                        },
                        "__Entities_BoundedContext_Name__.UnitTests": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\obj") }
                            },
                            "UnitTest1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\UnitTest1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\UnitTest1.cs") }
                            },
                            "__Entities_BoundedContext_Name__.UnitTests.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\__Entities_BoundedContext_Name__.UnitTests.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\__Entities_BoundedContext_Name__.UnitTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\Tests\\__Entities_BoundedContext_Name__.UnitTests\\__Entities_BoundedContext_Name__.UnitTests.csproj") }
                            }
                        }
                    },
                    "__Entities_BoundedContext_Name__.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application") },
                        ".vs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\.vs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\.vs") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\obj") }
                        },
                        "__Entities_BoundedContext_Name__.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\__Entities_BoundedContext_Name__.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\__Entities_BoundedContext_Name__.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\__Entities_BoundedContext_Name__.Application.csproj") }
                        },
                        "__Entities_BoundedContext_Name__ApplicationConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\__Entities_BoundedContext_Name__ApplicationConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\__Entities_BoundedContext_Name__ApplicationConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Application\\__Entities_BoundedContext_Name__ApplicationConfig.cs") }
                        }
                    },
                    "__Entities_BoundedContext_Name__.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\bin") }
                        },
                        "Entities": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities") },
                            "__Entities_Groups_00_Name__Entities": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities\\__Entities_Groups_00_Name__Entities",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities\\__Entities_Groups_00_Name__Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities\\__Entities_Groups_00_Name__Entities") },
                                "__Entities_Name___Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___Gen_.cs") }
                                }
                            }
                        },
                        "Interfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces") },
                            "RepositoryInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces") },
                                "__Entities_Groups_00_Name__RepositoryInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces") },
                                    "I__Entities_Name__Repository_Gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces\\I__Entities_Name__Repository_Gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces\\I__Entities_Name__Repository_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\RepositoryInterfaces\\__Entities_Groups_00_Name__RepositoryInterfaces\\I__Entities_Name__Repository_Gen_.cs") }
                                    }
                                }
                            },
                            "ServiceInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces") },
                                "__Entities_Groups_00_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") },
                                    "I__Entities_Name__DomainService_Gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_Gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_Gen_.cs") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\obj") }
                        },
                        "Specs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs") },
                            "__Entities_Groups_00_Name__Specs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs") },
                                "__Entities_Name__Specs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs") },
                                    "__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs") }
                                    }
                                }
                            }
                        },
                        "ValueObjects": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects") },
                            "Ids": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids") },
                                "__Entities_Groups_00_Name__Ids": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids") },
                                    "__Entities_Name__Id_Gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_Gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_Gen_.cs") }
                                    }
                                }
                            }
                        },
                        "__Entities_BoundedContext_Name__.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\__Entities_BoundedContext_Name__.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\__Entities_BoundedContext_Name__.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\__Entities_BoundedContext_Name__.Domain.csproj") }
                        },
                        "__Entities_BoundedContext_Name__DomainConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\__Entities_BoundedContext_Name__DomainConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\__Entities_BoundedContext_Name__DomainConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Domain\\__Entities_BoundedContext_Name__DomainConfig.cs") }
                        }
                    },
                    "__Entities_BoundedContext_Name__.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\bin") }
                        },
                        "DbContexts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\DbContexts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\DbContexts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\DbContexts") },
                            "__Entities_BoundedContext_Name__DbContext_Gen_.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\DbContexts\\__Entities_BoundedContext_Name__DbContext_Gen_.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\DbContexts\\__Entities_BoundedContext_Name__DbContext_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\DbContexts\\__Entities_BoundedContext_Name__DbContext_Gen_.cs") }
                            }
                        },
                        "EntityTypeConfigurations": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations") },
                            "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") },
                                "__Entities_Name__EntityTypeConfiguration_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_Gen_.cs") }
                                }
                            }
                        },
                        "Extensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions") },
                            "MicrosoftExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions") },
                                "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") },
                                    "Add__Entities_BoundedContext_Name__DbContextPoolsExtension_gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__DbContextPoolsExtension_gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__DbContextPoolsExtension_gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__DbContextPoolsExtension_gen_.cs") }
                                    },
                                    "Add__Entities_BoundedContext_Name__DbContextsExtension_gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__DbContextsExtension_gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__DbContextsExtension_gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__DbContextsExtension_gen_.cs") }
                                    },
                                    "Add__Entities_BoundedContext_Name__ServerExtensions_gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__ServerExtensions_gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__ServerExtensions_gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\Add__Entities_BoundedContext_Name__ServerExtensions_gen_.cs") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\obj") }
                        },
                        "Repositories": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories") },
                            "__Entities_Groups_00_Name__Repositories": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories") },
                                "__Entities_Name__Repository_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_Gen_.cs") }
                                }
                            }
                        },
                        "__Entities_BoundedContext_Name__.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\__Entities_BoundedContext_Name__.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\__Entities_BoundedContext_Name__.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\__Entities_BoundedContext_Name__.Infrastructure.csproj") }
                        },
                        "__Entities_BoundedContext_Name__InfrastructureConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\__Entities_BoundedContext_Name__InfrastructureConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\__Entities_BoundedContext_Name__InfrastructureConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.Infrastructure\\__Entities_BoundedContext_Name__InfrastructureConfig.cs") }
                        }
                    },
                    "__Entities_BoundedContext_Name__.IntegrationEvents": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\obj") }
                        },
                        "__Entities_BoundedContext_Name__.IntegrationEvents.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\__Entities_BoundedContext_Name__.IntegrationEvents.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\__Entities_BoundedContext_Name__.IntegrationEvents.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\__Entities_BoundedContext_Name__.IntegrationEvents.csproj") }
                        },
                        "__Entities_BoundedContext_Name__IntegrationEventsConfig.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\__Entities_BoundedContext_Name__IntegrationEventsConfig.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\__Entities_BoundedContext_Name__IntegrationEventsConfig.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\BoundedContexts\\__EBN__BoundedContext_gen_\\__Entities_BoundedContext_Name__.IntegrationEvents\\__Entities_BoundedContext_Name__IntegrationEventsConfig.cs") }
                        }
                    }
                }
            },
            "deploy": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy") },
                "k8s": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s") },
                    "apigateway.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\apigateway.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\apigateway.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\apigateway.yaml") }
                    },
                    "basket.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\basket.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\basket.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\basket.yaml") }
                    },
                    "catalog.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\catalog.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\catalog.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\catalog.yaml") }
                    },
                    "components": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\components",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\components") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\components") },
                        "pubsub-rabbitmq.yaml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\pubsub-rabbitmq.yaml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\pubsub-rabbitmq.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\pubsub-rabbitmq.yaml") }
                        },
                        "pubsub-stan.yaml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\pubsub-stan.yaml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\pubsub-stan.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\pubsub-stan.yaml") }
                        },
                        "sendmail.yaml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\sendmail.yaml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\sendmail.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\sendmail.yaml") }
                        },
                        "statestore.yaml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\statestore.yaml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\statestore.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\components\\statestore.yaml") }
                        }
                    },
                    "dapr-config.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\dapr-config.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\dapr-config.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\dapr-config.yaml") }
                    },
                    "identity.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\identity.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\identity.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\identity.yaml") }
                    },
                    "namespace.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\namespace.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\namespace.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\namespace.yaml") }
                    },
                    "nats-streaming.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\nats-streaming.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\nats-streaming.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\nats-streaming.yaml") }
                    },
                    "ordering.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\ordering.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\ordering.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\ordering.yaml") }
                    },
                    "payment.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\payment.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\payment.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\payment.yaml") }
                    },
                    "rabbitmq.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\rabbitmq.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\rabbitmq.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\rabbitmq.yaml") }
                    },
                    "redis.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\redis.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\redis.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\redis.yaml") }
                    },
                    "secrets.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\secrets.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\secrets.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\secrets.yaml") }
                    },
                    "seq.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\seq.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\seq.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\seq.yaml") }
                    },
                    "sqldata.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\sqldata.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\sqldata.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\sqldata.yaml") }
                    },
                    "start-all.ps1": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\start-all.ps1",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\start-all.ps1") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\start-all.ps1") }
                    },
                    "start-all.sh": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\start-all.sh",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\start-all.sh") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\start-all.sh") }
                    },
                    "stop-all.ps1": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\stop-all.ps1",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\stop-all.ps1") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\stop-all.ps1") }
                    },
                    "stop-all.sh": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\stop-all.sh",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\stop-all.sh") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\stop-all.sh") }
                    },
                    "webshoppingagg.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\webshoppingagg.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\webshoppingagg.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\webshoppingagg.yaml") }
                    },
                    "webspa.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\webspa.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\webspa.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\webspa.yaml") }
                    },
                    "webstatus.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\webstatus.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\webstatus.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\webstatus.yaml") }
                    },
                    "zipkin.yaml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\deploy\\k8s\\zipkin.yaml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\deploy\\k8s\\zipkin.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\deploy\\k8s\\zipkin.yaml") }
                    }
                }
            },
            "Dlls": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls") },
                "OrchardDlls": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls") },
                    "Castle.Core.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Castle.Core.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Castle.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Castle.Core.dll") }
                    },
                    "cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\cs\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "de": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\de\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "es": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\es\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "Fluid.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Fluid.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Fluid.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Fluid.dll") }
                    },
                    "fr": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\fr\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "Humanizer.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Humanizer.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Humanizer.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Humanizer.dll") }
                    },
                    "Irony.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Irony.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Irony.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Irony.dll") }
                    },
                    "it": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\it\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "ja": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ja\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "ko": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ko\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "Microsoft.AspNetCore.JsonPatch.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.JsonPatch.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.JsonPatch.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.JsonPatch.dll") }
                    },
                    "Microsoft.AspNetCore.Mvc.NewtonsoftJson.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.NewtonsoftJson.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.NewtonsoftJson.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.NewtonsoftJson.dll") }
                    },
                    "Microsoft.AspNetCore.Mvc.Razor.Extensions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll") }
                    },
                    "Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.dll") }
                    },
                    "Microsoft.AspNetCore.Razor.Language.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Razor.Language.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Razor.Language.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.AspNetCore.Razor.Language.dll") }
                    },
                    "Microsoft.Bcl.AsyncInterfaces.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.Bcl.AsyncInterfaces.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.Bcl.AsyncInterfaces.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.Bcl.AsyncInterfaces.dll") }
                    },
                    "Microsoft.CodeAnalysis.CSharp.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.CSharp.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.CSharp.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.CSharp.dll") }
                    },
                    "Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.CSharp.Workspaces.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.CSharp.Workspaces.dll") }
                    },
                    "Microsoft.CodeAnalysis.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.dll") }
                    },
                    "Microsoft.CodeAnalysis.Razor.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.Razor.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.Razor.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.Razor.dll") }
                    },
                    "Microsoft.CodeAnalysis.VisualBasic.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.VisualBasic.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.VisualBasic.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.VisualBasic.dll") }
                    },
                    "Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.dll") }
                    },
                    "Microsoft.CodeAnalysis.Workspaces.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.Workspaces.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.Workspaces.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.CodeAnalysis.Workspaces.dll") }
                    },
                    "Microsoft.Extensions.DependencyModel.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.Extensions.DependencyModel.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.Extensions.DependencyModel.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Microsoft.Extensions.DependencyModel.dll") }
                    },
                    "Newtonsoft.Json.Bson.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Newtonsoft.Json.Bson.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Newtonsoft.Json.Bson.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Newtonsoft.Json.Bson.dll") }
                    },
                    "Newtonsoft.Json.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Newtonsoft.Json.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Newtonsoft.Json.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\Newtonsoft.Json.dll") }
                    },
                    "OrchardCore.Abstractions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Abstractions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Abstractions.dll") }
                    },
                    "OrchardCore.DisplayManagement.Abstractions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.Abstractions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.Abstractions.dll") }
                    },
                    "OrchardCore.DisplayManagement.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.dll") }
                    },
                    "OrchardCore.DisplayManagement.Liquid.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.Liquid.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.Liquid.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DisplayManagement.Liquid.dll") }
                    },
                    "OrchardCore.DynamicCache.Abstractions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DynamicCache.Abstractions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DynamicCache.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.DynamicCache.Abstractions.dll") }
                    },
                    "OrchardCore.Infrastructure.Abstractions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Infrastructure.Abstractions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Infrastructure.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Infrastructure.Abstractions.dll") }
                    },
                    "OrchardCore.Liquid.Abstractions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Liquid.Abstractions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Liquid.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Liquid.Abstractions.dll") }
                    },
                    "OrchardCore.Localization.Abstractions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Localization.Abstractions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Localization.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Localization.Abstractions.dll") }
                    },
                    "OrchardCore.Mvc.Core.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Mvc.Core.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Mvc.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.Mvc.Core.dll") }
                    },
                    "OrchardCore.ResourceManagement.Abstractions.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.ResourceManagement.Abstractions.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.ResourceManagement.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\OrchardCore.ResourceManagement.Abstractions.dll") }
                    },
                    "pl": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pl\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "PoExtractor.Core.deps.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.deps.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.deps.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.deps.json") }
                    },
                    "PoExtractor.Core.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.dll") }
                    },
                    "PoExtractor.Core.pdb": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.pdb",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.pdb") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Core.pdb") }
                    },
                    "PoExtractor.DotNet.CS.deps.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.deps.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.deps.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.deps.json") }
                    },
                    "PoExtractor.DotNet.CS.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.dll") }
                    },
                    "PoExtractor.DotNet.CS.pdb": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.pdb",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.pdb") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.CS.pdb") }
                    },
                    "PoExtractor.DotNet.deps.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.deps.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.deps.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.deps.json") }
                    },
                    "PoExtractor.DotNet.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.dll") }
                    },
                    "PoExtractor.DotNet.pdb": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.pdb",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.pdb") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.pdb") }
                    },
                    "PoExtractor.DotNet.VB.deps.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.deps.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.deps.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.deps.json") }
                    },
                    "PoExtractor.DotNet.VB.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.dll") }
                    },
                    "PoExtractor.DotNet.VB.pdb": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.pdb",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.pdb") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.DotNet.VB.pdb") }
                    },
                    "PoExtractor.Liquid.deps.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.deps.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.deps.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.deps.json") }
                    },
                    "PoExtractor.Liquid.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.dll") }
                    },
                    "PoExtractor.Liquid.pdb": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.pdb",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.pdb") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Liquid.pdb") }
                    },
                    "PoExtractor.OrchardCore.deps.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.deps.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.deps.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.deps.json") }
                    },
                    "PoExtractor.OrchardCore.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.dll") }
                    },
                    "PoExtractor.OrchardCore.exe": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.exe",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.exe") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.exe") }
                    },
                    "PoExtractor.OrchardCore.pdb": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.pdb",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.pdb") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.pdb") }
                    },
                    "PoExtractor.OrchardCore.runtimeconfig.dev.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.runtimeconfig.dev.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.runtimeconfig.dev.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.runtimeconfig.dev.json") }
                    },
                    "PoExtractor.OrchardCore.runtimeconfig.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.runtimeconfig.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.runtimeconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.OrchardCore.runtimeconfig.json") }
                    },
                    "PoExtractor.Razor.deps.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.deps.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.deps.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.deps.json") }
                    },
                    "PoExtractor.Razor.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.dll") }
                    },
                    "PoExtractor.Razor.pdb": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.pdb",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.pdb") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\PoExtractor.Razor.pdb") }
                    },
                    "pt-BR": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\pt-BR\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "ref": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ref",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ref") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ref") },
                        "PoExtractor.OrchardCore.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ref\\PoExtractor.OrchardCore.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ref\\PoExtractor.OrchardCore.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ref\\PoExtractor.OrchardCore.dll") }
                        }
                    },
                    "refs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs") },
                        "Microsoft.AspNetCore.Antiforgery.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Antiforgery.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Antiforgery.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Antiforgery.dll") }
                        },
                        "Microsoft.AspNetCore.Authentication.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Authentication.Cookies.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Cookies.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Cookies.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Cookies.dll") }
                        },
                        "Microsoft.AspNetCore.Authentication.Core.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Core.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.Core.dll") }
                        },
                        "Microsoft.AspNetCore.Authentication.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.dll") }
                        },
                        "Microsoft.AspNetCore.Authentication.OAuth.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.OAuth.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.OAuth.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authentication.OAuth.dll") }
                        },
                        "Microsoft.AspNetCore.Authorization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authorization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authorization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authorization.dll") }
                        },
                        "Microsoft.AspNetCore.Authorization.Policy.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authorization.Policy.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authorization.Policy.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Authorization.Policy.dll") }
                        },
                        "Microsoft.AspNetCore.Components.Authorization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Authorization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Authorization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Authorization.dll") }
                        },
                        "Microsoft.AspNetCore.Components.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.dll") }
                        },
                        "Microsoft.AspNetCore.Components.Forms.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Forms.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Forms.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Forms.dll") }
                        },
                        "Microsoft.AspNetCore.Components.Server.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Server.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Server.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Server.dll") }
                        },
                        "Microsoft.AspNetCore.Components.Web.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Web.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Web.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Components.Web.dll") }
                        },
                        "Microsoft.AspNetCore.Connections.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Connections.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Connections.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Connections.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.CookiePolicy.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.CookiePolicy.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.CookiePolicy.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.CookiePolicy.dll") }
                        },
                        "Microsoft.AspNetCore.Cors.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cors.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cors.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cors.dll") }
                        },
                        "Microsoft.AspNetCore.Cryptography.Internal.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cryptography.Internal.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cryptography.Internal.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cryptography.Internal.dll") }
                        },
                        "Microsoft.AspNetCore.Cryptography.KeyDerivation.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cryptography.KeyDerivation.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cryptography.KeyDerivation.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Cryptography.KeyDerivation.dll") }
                        },
                        "Microsoft.AspNetCore.DataProtection.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.DataProtection.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.dll") }
                        },
                        "Microsoft.AspNetCore.DataProtection.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.DataProtection.Extensions.dll") }
                        },
                        "Microsoft.AspNetCore.Diagnostics.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Diagnostics.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.dll") }
                        },
                        "Microsoft.AspNetCore.Diagnostics.HealthChecks.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.HealthChecks.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.HealthChecks.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Diagnostics.HealthChecks.dll") }
                        },
                        "Microsoft.AspNetCore.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.dll") }
                        },
                        "Microsoft.AspNetCore.HostFiltering.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HostFiltering.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HostFiltering.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HostFiltering.dll") }
                        },
                        "Microsoft.AspNetCore.Hosting.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Hosting.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.dll") }
                        },
                        "Microsoft.AspNetCore.Hosting.Server.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Html.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Html.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Html.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Html.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Http.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Http.Connections.Common.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Connections.Common.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Connections.Common.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Connections.Common.dll") }
                        },
                        "Microsoft.AspNetCore.Http.Connections.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Connections.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Connections.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Connections.dll") }
                        },
                        "Microsoft.AspNetCore.Http.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.dll") }
                        },
                        "Microsoft.AspNetCore.Http.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Extensions.dll") }
                        },
                        "Microsoft.AspNetCore.Http.Features.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Features.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Features.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Http.Features.dll") }
                        },
                        "Microsoft.AspNetCore.HttpOverrides.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HttpOverrides.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HttpOverrides.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HttpOverrides.dll") }
                        },
                        "Microsoft.AspNetCore.HttpsPolicy.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HttpsPolicy.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HttpsPolicy.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.HttpsPolicy.dll") }
                        },
                        "Microsoft.AspNetCore.Identity.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Identity.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Identity.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Identity.dll") }
                        },
                        "Microsoft.AspNetCore.Localization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Localization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Localization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Localization.dll") }
                        },
                        "Microsoft.AspNetCore.Localization.Routing.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Localization.Routing.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Localization.Routing.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Localization.Routing.dll") }
                        },
                        "Microsoft.AspNetCore.Metadata.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Metadata.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Metadata.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Metadata.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.ApiExplorer.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.Core.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Core.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Core.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.Cors.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Cors.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Cors.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Cors.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.DataAnnotations.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.Formatters.Json.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.Formatters.Xml.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Formatters.Xml.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Formatters.Xml.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Formatters.Xml.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.Localization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Localization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Localization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Localization.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.Razor.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Razor.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Razor.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.Razor.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.RazorPages.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.RazorPages.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.RazorPages.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.RazorPages.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.TagHelpers.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.TagHelpers.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.TagHelpers.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.TagHelpers.dll") }
                        },
                        "Microsoft.AspNetCore.Mvc.ViewFeatures.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll") }
                        },
                        "Microsoft.AspNetCore.Razor.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Razor.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Razor.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Razor.dll") }
                        },
                        "Microsoft.AspNetCore.Razor.Runtime.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Razor.Runtime.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Razor.Runtime.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Razor.Runtime.dll") }
                        },
                        "Microsoft.AspNetCore.ResponseCaching.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.ResponseCaching.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCaching.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCaching.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCaching.dll") }
                        },
                        "Microsoft.AspNetCore.ResponseCompression.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCompression.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCompression.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.ResponseCompression.dll") }
                        },
                        "Microsoft.AspNetCore.Rewrite.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Rewrite.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Rewrite.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Rewrite.dll") }
                        },
                        "Microsoft.AspNetCore.Routing.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Routing.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Routing.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Routing.Abstractions.dll") }
                        },
                        "Microsoft.AspNetCore.Routing.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Routing.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Routing.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Routing.dll") }
                        },
                        "Microsoft.AspNetCore.Server.HttpSys.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.HttpSys.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.HttpSys.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.HttpSys.dll") }
                        },
                        "Microsoft.AspNetCore.Server.IIS.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.IIS.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.IIS.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.IIS.dll") }
                        },
                        "Microsoft.AspNetCore.Server.IISIntegration.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.IISIntegration.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.IISIntegration.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.IISIntegration.dll") }
                        },
                        "Microsoft.AspNetCore.Server.Kestrel.Core.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.Core.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.Core.dll") }
                        },
                        "Microsoft.AspNetCore.Server.Kestrel.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.dll") }
                        },
                        "Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.dll") }
                        },
                        "Microsoft.AspNetCore.Session.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Session.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Session.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.Session.dll") }
                        },
                        "Microsoft.AspNetCore.SignalR.Common.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Common.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Common.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Common.dll") }
                        },
                        "Microsoft.AspNetCore.SignalR.Core.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Core.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Core.dll") }
                        },
                        "Microsoft.AspNetCore.SignalR.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.dll") }
                        },
                        "Microsoft.AspNetCore.SignalR.Protocols.Json.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Protocols.Json.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Protocols.Json.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.SignalR.Protocols.Json.dll") }
                        },
                        "Microsoft.AspNetCore.StaticFiles.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.StaticFiles.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.StaticFiles.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.StaticFiles.dll") }
                        },
                        "Microsoft.AspNetCore.WebSockets.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.WebSockets.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.WebSockets.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.WebSockets.dll") }
                        },
                        "Microsoft.AspNetCore.WebUtilities.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.WebUtilities.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.WebUtilities.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.AspNetCore.WebUtilities.dll") }
                        },
                        "Microsoft.CSharp.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.CSharp.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.CSharp.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.CSharp.dll") }
                        },
                        "Microsoft.Extensions.Caching.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Caching.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Caching.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Caching.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.Caching.Memory.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Caching.Memory.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Caching.Memory.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Caching.Memory.dll") }
                        },
                        "Microsoft.Extensions.Configuration.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.Configuration.Binder.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Binder.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Binder.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Binder.dll") }
                        },
                        "Microsoft.Extensions.Configuration.CommandLine.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.CommandLine.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.CommandLine.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.CommandLine.dll") }
                        },
                        "Microsoft.Extensions.Configuration.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.dll") }
                        },
                        "Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.EnvironmentVariables.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.EnvironmentVariables.dll") }
                        },
                        "Microsoft.Extensions.Configuration.FileExtensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.FileExtensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.FileExtensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.FileExtensions.dll") }
                        },
                        "Microsoft.Extensions.Configuration.Ini.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Ini.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Ini.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Ini.dll") }
                        },
                        "Microsoft.Extensions.Configuration.Json.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Json.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Json.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Json.dll") }
                        },
                        "Microsoft.Extensions.Configuration.KeyPerFile.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.KeyPerFile.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.KeyPerFile.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.KeyPerFile.dll") }
                        },
                        "Microsoft.Extensions.Configuration.UserSecrets.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.UserSecrets.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.UserSecrets.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.UserSecrets.dll") }
                        },
                        "Microsoft.Extensions.Configuration.Xml.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Xml.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Xml.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Configuration.Xml.dll") }
                        },
                        "Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.DependencyInjection.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.DependencyInjection.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.DependencyInjection.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.DependencyInjection.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.DependencyInjection.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.DependencyInjection.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.DependencyInjection.dll") }
                        },
                        "Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.Diagnostics.HealthChecks.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Diagnostics.HealthChecks.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Diagnostics.HealthChecks.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Diagnostics.HealthChecks.dll") }
                        },
                        "Microsoft.Extensions.FileProviders.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.FileProviders.Composite.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Composite.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Composite.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Composite.dll") }
                        },
                        "Microsoft.Extensions.FileProviders.Embedded.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Embedded.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Embedded.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Embedded.dll") }
                        },
                        "Microsoft.Extensions.FileProviders.Physical.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Physical.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Physical.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileProviders.Physical.dll") }
                        },
                        "Microsoft.Extensions.FileSystemGlobbing.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileSystemGlobbing.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileSystemGlobbing.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.FileSystemGlobbing.dll") }
                        },
                        "Microsoft.Extensions.Hosting.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Hosting.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Hosting.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Hosting.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.Hosting.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Hosting.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Hosting.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Hosting.dll") }
                        },
                        "Microsoft.Extensions.Http.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Http.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Http.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Http.dll") }
                        },
                        "Microsoft.Extensions.Identity.Core.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Identity.Core.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Identity.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Identity.Core.dll") }
                        },
                        "Microsoft.Extensions.Identity.Stores.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Identity.Stores.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Identity.Stores.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Identity.Stores.dll") }
                        },
                        "Microsoft.Extensions.Localization.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Localization.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Localization.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Localization.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.Localization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Localization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Localization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Localization.dll") }
                        },
                        "Microsoft.Extensions.Logging.Abstractions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Abstractions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Abstractions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Abstractions.dll") }
                        },
                        "Microsoft.Extensions.Logging.Configuration.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Configuration.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Configuration.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Configuration.dll") }
                        },
                        "Microsoft.Extensions.Logging.Console.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Console.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Console.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Console.dll") }
                        },
                        "Microsoft.Extensions.Logging.Debug.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Debug.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Debug.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.Debug.dll") }
                        },
                        "Microsoft.Extensions.Logging.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.dll") }
                        },
                        "Microsoft.Extensions.Logging.EventLog.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.EventLog.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.EventLog.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.EventLog.dll") }
                        },
                        "Microsoft.Extensions.Logging.EventSource.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.EventSource.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.EventSource.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.EventSource.dll") }
                        },
                        "Microsoft.Extensions.Logging.TraceSource.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.TraceSource.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.TraceSource.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Logging.TraceSource.dll") }
                        },
                        "Microsoft.Extensions.ObjectPool.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.ObjectPool.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.ObjectPool.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.ObjectPool.dll") }
                        },
                        "Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.ConfigurationExtensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.ConfigurationExtensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.ConfigurationExtensions.dll") }
                        },
                        "Microsoft.Extensions.Options.DataAnnotations.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.DataAnnotations.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.DataAnnotations.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.DataAnnotations.dll") }
                        },
                        "Microsoft.Extensions.Options.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Options.dll") }
                        },
                        "Microsoft.Extensions.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.Primitives.dll") }
                        },
                        "Microsoft.Extensions.WebEncoders.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.WebEncoders.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.WebEncoders.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Extensions.WebEncoders.dll") }
                        },
                        "Microsoft.JSInterop.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.JSInterop.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.JSInterop.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.JSInterop.dll") }
                        },
                        "Microsoft.Net.Http.Headers.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Net.Http.Headers.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Net.Http.Headers.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Net.Http.Headers.dll") }
                        },
                        "Microsoft.VisualBasic.Core.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.VisualBasic.Core.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.VisualBasic.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.VisualBasic.Core.dll") }
                        },
                        "Microsoft.VisualBasic.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.VisualBasic.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.VisualBasic.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.VisualBasic.dll") }
                        },
                        "Microsoft.Win32.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Win32.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Win32.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Win32.Primitives.dll") }
                        },
                        "Microsoft.Win32.Registry.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Win32.Registry.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Win32.Registry.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\Microsoft.Win32.Registry.dll") }
                        },
                        "mscorlib.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\mscorlib.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\mscorlib.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\mscorlib.dll") }
                        },
                        "netstandard.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\netstandard.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\netstandard.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\netstandard.dll") }
                        },
                        "System.AppContext.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.AppContext.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.AppContext.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.AppContext.dll") }
                        },
                        "System.Buffers.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Buffers.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Buffers.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Buffers.dll") }
                        },
                        "System.Collections.Concurrent.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Concurrent.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Concurrent.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Concurrent.dll") }
                        },
                        "System.Collections.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.dll") }
                        },
                        "System.Collections.Immutable.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Immutable.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Immutable.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Immutable.dll") }
                        },
                        "System.Collections.NonGeneric.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.NonGeneric.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.NonGeneric.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.NonGeneric.dll") }
                        },
                        "System.Collections.Specialized.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Specialized.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Specialized.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Collections.Specialized.dll") }
                        },
                        "System.ComponentModel.Annotations.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.Annotations.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.Annotations.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.Annotations.dll") }
                        },
                        "System.ComponentModel.DataAnnotations.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.DataAnnotations.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.DataAnnotations.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.DataAnnotations.dll") }
                        },
                        "System.ComponentModel.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.dll") }
                        },
                        "System.ComponentModel.EventBasedAsync.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.EventBasedAsync.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.EventBasedAsync.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.EventBasedAsync.dll") }
                        },
                        "System.ComponentModel.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.Primitives.dll") }
                        },
                        "System.ComponentModel.TypeConverter.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.TypeConverter.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.TypeConverter.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ComponentModel.TypeConverter.dll") }
                        },
                        "System.Configuration.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Configuration.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Configuration.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Configuration.dll") }
                        },
                        "System.Console.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Console.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Console.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Console.dll") }
                        },
                        "System.Core.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Core.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Core.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Core.dll") }
                        },
                        "System.Data.Common.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.Common.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.Common.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.Common.dll") }
                        },
                        "System.Data.DataSetExtensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.DataSetExtensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.DataSetExtensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.DataSetExtensions.dll") }
                        },
                        "System.Data.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Data.dll") }
                        },
                        "System.Diagnostics.Contracts.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Contracts.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Contracts.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Contracts.dll") }
                        },
                        "System.Diagnostics.Debug.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Debug.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Debug.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Debug.dll") }
                        },
                        "System.Diagnostics.DiagnosticSource.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.DiagnosticSource.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.DiagnosticSource.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.DiagnosticSource.dll") }
                        },
                        "System.Diagnostics.EventLog.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.EventLog.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.EventLog.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.EventLog.dll") }
                        },
                        "System.Diagnostics.FileVersionInfo.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.FileVersionInfo.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.FileVersionInfo.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.FileVersionInfo.dll") }
                        },
                        "System.Diagnostics.Process.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Process.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Process.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Process.dll") }
                        },
                        "System.Diagnostics.StackTrace.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.StackTrace.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.StackTrace.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.StackTrace.dll") }
                        },
                        "System.Diagnostics.TextWriterTraceListener.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.TextWriterTraceListener.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.TextWriterTraceListener.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.TextWriterTraceListener.dll") }
                        },
                        "System.Diagnostics.Tools.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Tools.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Tools.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Tools.dll") }
                        },
                        "System.Diagnostics.TraceSource.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.TraceSource.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.TraceSource.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.TraceSource.dll") }
                        },
                        "System.Diagnostics.Tracing.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Tracing.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Tracing.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Diagnostics.Tracing.dll") }
                        },
                        "System.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.dll") }
                        },
                        "System.Drawing.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Drawing.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Drawing.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Drawing.dll") }
                        },
                        "System.Drawing.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Drawing.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Drawing.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Drawing.Primitives.dll") }
                        },
                        "System.Dynamic.Runtime.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Dynamic.Runtime.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Dynamic.Runtime.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Dynamic.Runtime.dll") }
                        },
                        "System.Formats.Asn1.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Formats.Asn1.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Formats.Asn1.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Formats.Asn1.dll") }
                        },
                        "System.Globalization.Calendars.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.Calendars.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.Calendars.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.Calendars.dll") }
                        },
                        "System.Globalization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.dll") }
                        },
                        "System.Globalization.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Globalization.Extensions.dll") }
                        },
                        "System.IO.Compression.Brotli.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.Brotli.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.Brotli.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.Brotli.dll") }
                        },
                        "System.IO.Compression.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.dll") }
                        },
                        "System.IO.Compression.FileSystem.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.FileSystem.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.FileSystem.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.FileSystem.dll") }
                        },
                        "System.IO.Compression.ZipFile.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.ZipFile.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.ZipFile.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Compression.ZipFile.dll") }
                        },
                        "System.IO.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.dll") }
                        },
                        "System.IO.FileSystem.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.dll") }
                        },
                        "System.IO.FileSystem.DriveInfo.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.DriveInfo.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.DriveInfo.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.DriveInfo.dll") }
                        },
                        "System.IO.FileSystem.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.Primitives.dll") }
                        },
                        "System.IO.FileSystem.Watcher.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.Watcher.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.Watcher.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.FileSystem.Watcher.dll") }
                        },
                        "System.IO.IsolatedStorage.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.IsolatedStorage.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.IsolatedStorage.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.IsolatedStorage.dll") }
                        },
                        "System.IO.MemoryMappedFiles.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.MemoryMappedFiles.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.MemoryMappedFiles.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.MemoryMappedFiles.dll") }
                        },
                        "System.IO.Pipelines.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Pipelines.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Pipelines.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Pipelines.dll") }
                        },
                        "System.IO.Pipes.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Pipes.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Pipes.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.Pipes.dll") }
                        },
                        "System.IO.UnmanagedMemoryStream.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.UnmanagedMemoryStream.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.UnmanagedMemoryStream.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.IO.UnmanagedMemoryStream.dll") }
                        },
                        "System.Linq.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.dll") }
                        },
                        "System.Linq.Expressions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Expressions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Expressions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Expressions.dll") }
                        },
                        "System.Linq.Parallel.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Parallel.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Parallel.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Parallel.dll") }
                        },
                        "System.Linq.Queryable.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Queryable.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Queryable.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Linq.Queryable.dll") }
                        },
                        "System.Memory.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Memory.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Memory.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Memory.dll") }
                        },
                        "System.Net.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.dll") }
                        },
                        "System.Net.Http.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Http.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Http.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Http.dll") }
                        },
                        "System.Net.Http.Json.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Http.Json.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Http.Json.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Http.Json.dll") }
                        },
                        "System.Net.HttpListener.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.HttpListener.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.HttpListener.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.HttpListener.dll") }
                        },
                        "System.Net.Mail.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Mail.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Mail.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Mail.dll") }
                        },
                        "System.Net.NameResolution.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.NameResolution.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.NameResolution.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.NameResolution.dll") }
                        },
                        "System.Net.NetworkInformation.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.NetworkInformation.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.NetworkInformation.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.NetworkInformation.dll") }
                        },
                        "System.Net.Ping.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Ping.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Ping.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Ping.dll") }
                        },
                        "System.Net.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Primitives.dll") }
                        },
                        "System.Net.Requests.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Requests.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Requests.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Requests.dll") }
                        },
                        "System.Net.Security.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Security.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Security.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Security.dll") }
                        },
                        "System.Net.ServicePoint.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.ServicePoint.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.ServicePoint.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.ServicePoint.dll") }
                        },
                        "System.Net.Sockets.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Sockets.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Sockets.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.Sockets.dll") }
                        },
                        "System.Net.WebClient.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebClient.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebClient.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebClient.dll") }
                        },
                        "System.Net.WebHeaderCollection.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebHeaderCollection.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebHeaderCollection.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebHeaderCollection.dll") }
                        },
                        "System.Net.WebProxy.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebProxy.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebProxy.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebProxy.dll") }
                        },
                        "System.Net.WebSockets.Client.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebSockets.Client.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebSockets.Client.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebSockets.Client.dll") }
                        },
                        "System.Net.WebSockets.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebSockets.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebSockets.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Net.WebSockets.dll") }
                        },
                        "System.Numerics.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Numerics.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Numerics.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Numerics.dll") }
                        },
                        "System.Numerics.Vectors.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Numerics.Vectors.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Numerics.Vectors.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Numerics.Vectors.dll") }
                        },
                        "System.ObjectModel.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ObjectModel.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ObjectModel.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ObjectModel.dll") }
                        },
                        "System.Reflection.DispatchProxy.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.DispatchProxy.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.DispatchProxy.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.DispatchProxy.dll") }
                        },
                        "System.Reflection.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.dll") }
                        },
                        "System.Reflection.Emit.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.dll") }
                        },
                        "System.Reflection.Emit.ILGeneration.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.ILGeneration.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.ILGeneration.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.ILGeneration.dll") }
                        },
                        "System.Reflection.Emit.Lightweight.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.Lightweight.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.Lightweight.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Emit.Lightweight.dll") }
                        },
                        "System.Reflection.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Extensions.dll") }
                        },
                        "System.Reflection.Metadata.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Metadata.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Metadata.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Metadata.dll") }
                        },
                        "System.Reflection.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.Primitives.dll") }
                        },
                        "System.Reflection.TypeExtensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.TypeExtensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.TypeExtensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Reflection.TypeExtensions.dll") }
                        },
                        "System.Resources.Reader.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.Reader.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.Reader.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.Reader.dll") }
                        },
                        "System.Resources.ResourceManager.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.ResourceManager.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.ResourceManager.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.ResourceManager.dll") }
                        },
                        "System.Resources.Writer.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.Writer.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.Writer.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Resources.Writer.dll") }
                        },
                        "System.Runtime.CompilerServices.Unsafe.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.CompilerServices.Unsafe.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.CompilerServices.Unsafe.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.CompilerServices.Unsafe.dll") }
                        },
                        "System.Runtime.CompilerServices.VisualC.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.CompilerServices.VisualC.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.CompilerServices.VisualC.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.CompilerServices.VisualC.dll") }
                        },
                        "System.Runtime.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.dll") }
                        },
                        "System.Runtime.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Extensions.dll") }
                        },
                        "System.Runtime.Handles.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Handles.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Handles.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Handles.dll") }
                        },
                        "System.Runtime.InteropServices.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.InteropServices.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.InteropServices.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.InteropServices.dll") }
                        },
                        "System.Runtime.InteropServices.RuntimeInformation.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.InteropServices.RuntimeInformation.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.InteropServices.RuntimeInformation.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.InteropServices.RuntimeInformation.dll") }
                        },
                        "System.Runtime.Intrinsics.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Intrinsics.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Intrinsics.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Intrinsics.dll") }
                        },
                        "System.Runtime.Loader.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Loader.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Loader.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Loader.dll") }
                        },
                        "System.Runtime.Numerics.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Numerics.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Numerics.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Numerics.dll") }
                        },
                        "System.Runtime.Serialization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.dll") }
                        },
                        "System.Runtime.Serialization.Formatters.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Formatters.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Formatters.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Formatters.dll") }
                        },
                        "System.Runtime.Serialization.Json.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Json.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Json.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Json.dll") }
                        },
                        "System.Runtime.Serialization.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Primitives.dll") }
                        },
                        "System.Runtime.Serialization.Xml.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Xml.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Xml.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Runtime.Serialization.Xml.dll") }
                        },
                        "System.Security.AccessControl.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.AccessControl.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.AccessControl.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.AccessControl.dll") }
                        },
                        "System.Security.Claims.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Claims.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Claims.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Claims.dll") }
                        },
                        "System.Security.Cryptography.Algorithms.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Algorithms.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Algorithms.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Algorithms.dll") }
                        },
                        "System.Security.Cryptography.Cng.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Cng.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Cng.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Cng.dll") }
                        },
                        "System.Security.Cryptography.Csp.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Csp.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Csp.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Csp.dll") }
                        },
                        "System.Security.Cryptography.Encoding.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Encoding.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Encoding.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Encoding.dll") }
                        },
                        "System.Security.Cryptography.Primitives.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Primitives.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Primitives.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Primitives.dll") }
                        },
                        "System.Security.Cryptography.X509Certificates.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.X509Certificates.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.X509Certificates.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.X509Certificates.dll") }
                        },
                        "System.Security.Cryptography.Xml.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Xml.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Xml.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Cryptography.Xml.dll") }
                        },
                        "System.Security.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.dll") }
                        },
                        "System.Security.Permissions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Permissions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Permissions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Permissions.dll") }
                        },
                        "System.Security.Principal.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Principal.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Principal.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Principal.dll") }
                        },
                        "System.Security.Principal.Windows.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Principal.Windows.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Principal.Windows.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.Principal.Windows.dll") }
                        },
                        "System.Security.SecureString.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.SecureString.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.SecureString.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Security.SecureString.dll") }
                        },
                        "System.ServiceModel.Web.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ServiceModel.Web.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ServiceModel.Web.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ServiceModel.Web.dll") }
                        },
                        "System.ServiceProcess.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ServiceProcess.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ServiceProcess.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ServiceProcess.dll") }
                        },
                        "System.Text.Encoding.CodePages.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.CodePages.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.CodePages.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.CodePages.dll") }
                        },
                        "System.Text.Encoding.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.dll") }
                        },
                        "System.Text.Encoding.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encoding.Extensions.dll") }
                        },
                        "System.Text.Encodings.Web.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encodings.Web.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encodings.Web.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Encodings.Web.dll") }
                        },
                        "System.Text.Json.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Json.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Json.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.Json.dll") }
                        },
                        "System.Text.RegularExpressions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.RegularExpressions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.RegularExpressions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Text.RegularExpressions.dll") }
                        },
                        "System.Threading.Channels.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Channels.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Channels.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Channels.dll") }
                        },
                        "System.Threading.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.dll") }
                        },
                        "System.Threading.Overlapped.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Overlapped.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Overlapped.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Overlapped.dll") }
                        },
                        "System.Threading.Tasks.Dataflow.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Dataflow.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Dataflow.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Dataflow.dll") }
                        },
                        "System.Threading.Tasks.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.dll") }
                        },
                        "System.Threading.Tasks.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Extensions.dll") }
                        },
                        "System.Threading.Tasks.Parallel.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Parallel.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Parallel.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Tasks.Parallel.dll") }
                        },
                        "System.Threading.Thread.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Thread.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Thread.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Thread.dll") }
                        },
                        "System.Threading.ThreadPool.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.ThreadPool.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.ThreadPool.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.ThreadPool.dll") }
                        },
                        "System.Threading.Timer.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Timer.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Timer.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Threading.Timer.dll") }
                        },
                        "System.Transactions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Transactions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Transactions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Transactions.dll") }
                        },
                        "System.Transactions.Local.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Transactions.Local.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Transactions.Local.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Transactions.Local.dll") }
                        },
                        "System.ValueTuple.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ValueTuple.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ValueTuple.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.ValueTuple.dll") }
                        },
                        "System.Web.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Web.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Web.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Web.dll") }
                        },
                        "System.Web.HttpUtility.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Web.HttpUtility.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Web.HttpUtility.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Web.HttpUtility.dll") }
                        },
                        "System.Windows.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Windows.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Windows.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Windows.dll") }
                        },
                        "System.Windows.Extensions.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Windows.Extensions.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Windows.Extensions.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Windows.Extensions.dll") }
                        },
                        "System.Xml.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.dll") }
                        },
                        "System.Xml.Linq.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.Linq.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.Linq.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.Linq.dll") }
                        },
                        "System.Xml.ReaderWriter.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.ReaderWriter.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.ReaderWriter.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.ReaderWriter.dll") }
                        },
                        "System.Xml.Serialization.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.Serialization.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.Serialization.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.Serialization.dll") }
                        },
                        "System.Xml.XDocument.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XDocument.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XDocument.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XDocument.dll") }
                        },
                        "System.Xml.XmlDocument.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XmlDocument.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XmlDocument.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XmlDocument.dll") }
                        },
                        "System.Xml.XmlSerializer.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XmlSerializer.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XmlSerializer.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XmlSerializer.dll") }
                        },
                        "System.Xml.XPath.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XPath.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XPath.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XPath.dll") }
                        },
                        "System.Xml.XPath.XDocument.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XPath.XDocument.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XPath.XDocument.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\System.Xml.XPath.XDocument.dll") }
                        },
                        "WindowsBase.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\WindowsBase.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\WindowsBase.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\refs\\WindowsBase.dll") }
                        }
                    },
                    "ru": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\ru\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "System.Composition.AttributedModel.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.AttributedModel.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.AttributedModel.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.AttributedModel.dll") }
                    },
                    "System.Composition.Convention.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Convention.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Convention.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Convention.dll") }
                    },
                    "System.Composition.Hosting.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Hosting.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Hosting.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Hosting.dll") }
                    },
                    "System.Composition.Runtime.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Runtime.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Runtime.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.Runtime.dll") }
                    },
                    "System.Composition.TypedParts.dll": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.TypedParts.dll",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.TypedParts.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\System.Composition.TypedParts.dll") }
                    },
                    "tr": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\tr\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "zh-Hans": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hans\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    },
                    "zh-Hant": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant") },
                        "Microsoft.CodeAnalysis.CSharp.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.CSharp.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.CSharp.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.CSharp.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.VisualBasic.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.VisualBasic.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.VisualBasic.Workspaces.resources.dll") }
                        },
                        "Microsoft.CodeAnalysis.Workspaces.resources.dll": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.Workspaces.resources.dll",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.Workspaces.resources.dll") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Dlls\\OrchardDlls\\zh-Hant\\Microsoft.CodeAnalysis.Workspaces.resources.dll") }
                        }
                    }
                }
            },
            "Docker": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker") },
                ".dockerignore": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\.dockerignore",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\.dockerignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\.dockerignore") }
                },
                "bin": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\bin",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\bin") }
                },
                "Create-DockerfileSolutionRestore.ps1": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\Create-DockerfileSolutionRestore.ps1",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\Create-DockerfileSolutionRestore.ps1") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\Create-DockerfileSolutionRestore.ps1") }
                },
                "docker-compose.dcproj": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\docker-compose.dcproj",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\docker-compose.dcproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\docker-compose.dcproj") }
                },
                "docker-compose.dcproj.user": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\docker-compose.dcproj.user",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\docker-compose.dcproj.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\docker-compose.dcproj.user") }
                },
                "docker-compose.override.yml": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\docker-compose.override.yml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\docker-compose.override.yml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\docker-compose.override.yml") }
                },
                "docker-compose.yml": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\docker-compose.yml",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\docker-compose.yml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\docker-compose.yml") }
                },
                "DockerfileSolutionRestore.txt": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\DockerfileSolutionRestore.txt",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\DockerfileSolutionRestore.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\DockerfileSolutionRestore.txt") }
                },
                "obj": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Docker\\obj",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Docker\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Docker\\obj") }
                }
            },
            "identityServer_dev_sqlServer.bat": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\identityServer_dev_sqlServer.bat",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\identityServer_dev_sqlServer.bat") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\identityServer_dev_sqlServer.bat") }
            },
            "obj": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\obj",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\obj") }
            },
            "openIdDict_dev_sqlServer.bat": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\openIdDict_dev_sqlServer.bat",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\openIdDict_dev_sqlServer.bat") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\openIdDict_dev_sqlServer.bat") }
            },
            "package-lock.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\package-lock.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\package-lock.json") }
            },
            "Setups": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups") },
                "Setup": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup") },
                    "Client": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client") },
                        "App.razor": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\App.razor",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\App.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\App.razor") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\obj") }
                        },
                        "Pages": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages") },
                            "Counter.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\Counter.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\Counter.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\Counter.razor") }
                            },
                            "FetchData.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\FetchData.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\FetchData.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\FetchData.razor") }
                            },
                            "Index.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\Index.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\Index.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Pages\\Index.razor") }
                            }
                        },
                        "Program.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Program.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Program.cs") }
                        },
                        "Properties": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Properties",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Properties") },
                            "launchSettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Properties\\launchSettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Properties\\launchSettings.json") }
                            }
                        },
                        "Setup.Client.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Setup.Client.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Setup.Client.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Setup.Client.csproj") }
                        },
                        "Shared": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared") },
                            "MainLayout.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\MainLayout.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\MainLayout.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\MainLayout.razor") }
                            },
                            "MainLayout.razor.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\MainLayout.razor.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\MainLayout.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\MainLayout.razor.css") }
                            },
                            "NavMenu.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\NavMenu.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\NavMenu.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\NavMenu.razor") }
                            },
                            "NavMenu.razor.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\NavMenu.razor.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\NavMenu.razor.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\NavMenu.razor.css") }
                            },
                            "SurveyPrompt.razor": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\SurveyPrompt.razor",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\SurveyPrompt.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\Shared\\SurveyPrompt.razor") }
                            }
                        },
                        "wwwroot": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot") },
                            "css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css") },
                                "app.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\app.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\app.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\app.css") }
                                },
                                "bootstrap": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\bootstrap",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\bootstrap") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\bootstrap") },
                                    "bootstrap.min.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\bootstrap\\bootstrap.min.css") }
                                    }
                                },
                                "open-iconic": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic") },
                                    "font": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font") },
                                        "css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css") },
                                            "open-iconic-bootstrap.min.css": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\css\\open-iconic-bootstrap.min.css") }
                                            }
                                        },
                                        "fonts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts") },
                                            "open-iconic.eot": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.eot") }
                                            },
                                            "open-iconic.otf": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.otf") }
                                            },
                                            "open-iconic.svg": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.svg") }
                                            },
                                            "open-iconic.ttf": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.ttf") }
                                            },
                                            "open-iconic.woff": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\font\\fonts\\open-iconic.woff") }
                                            }
                                        }
                                    },
                                    "FONT-LICENSE": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\FONT-LICENSE") }
                                    },
                                    "ICON-LICENSE": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\ICON-LICENSE") }
                                    },
                                    "README.md": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\README.md",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\css\\open-iconic\\README.md") }
                                    }
                                }
                            },
                            "favicon.ico": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\favicon.ico",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\favicon.ico") }
                            },
                            "icon-512.png": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\icon-512.png",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\icon-512.png") }
                            },
                            "index.html": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\index.html",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\index.html") }
                            },
                            "manifest.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\manifest.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\manifest.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\manifest.json") }
                            },
                            "service-worker.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\service-worker.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\service-worker.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\service-worker.js") }
                            },
                            "service-worker.published.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\service-worker.published.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\service-worker.published.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\wwwroot\\service-worker.published.js") }
                            }
                        },
                        "_Imports.razor": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\_Imports.razor",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\_Imports.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Client\\_Imports.razor") }
                        }
                    },
                    "Server": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server") },
                        ".vs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\.vs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\.vs") }
                        },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\appsettings.json") }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\bin") }
                        },
                        "Controllers": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Controllers",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Controllers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Controllers") },
                            "WeatherForecastController.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Controllers\\WeatherForecastController.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Controllers\\WeatherForecastController.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Controllers\\WeatherForecastController.cs") }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\obj") }
                        },
                        "Pages": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages") },
                            "Error.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages\\Error.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages\\Error.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages\\Error.cshtml") }
                            },
                            "Error.cshtml.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages\\Error.cshtml.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages\\Error.cshtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Pages\\Error.cshtml.cs") }
                            }
                        },
                        "Program.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Program.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Program.cs") }
                        },
                        "Properties": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Properties",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Properties") },
                            "launchSettings.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Properties\\launchSettings.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Properties\\launchSettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Properties\\launchSettings.json") }
                            }
                        },
                        "Setup.Server.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Setup.Server.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Setup.Server.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Setup.Server.csproj") }
                        },
                        "Setup.Server.csproj.user": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Setup.Server.csproj.user",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Setup.Server.csproj.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Setup.Server.csproj.user") }
                        },
                        "Startup.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Startup.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Startup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Startup.cs") }
                        },
                        "Temp": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp") },
                            "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt") }
                            },
                            "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt.error.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt.error.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt.error.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input.tt.temp.txt.error.txt") }
                            },
                            "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input._TemplateData_bce2ef18-6fac-4801-abc9-e47f25ae40e9.temp.txt.xml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input._TemplateData_bce2ef18-6fac-4801-abc9-e47f25ae40e9.temp.txt.xml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input._TemplateData_bce2ef18-6fac-4801-abc9-e47f25ae40e9.temp.txt.xml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.input._TemplateData_bce2ef18-6fac-4801-abc9-e47f25ae40e9.temp.txt.xml") }
                            },
                            "637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.output.tt.temp.txt": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.output.tt.temp.txt",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.output.tt.temp.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Server\\Temp\\637585114089369398__4__54fc1eb7-607b-4ebc-aeb9-42e72234bb37.output.tt.temp.txt") }
                            }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\obj") }
                        },
                        "Setup.Shared.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\Setup.Shared.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\Setup.Shared.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\Setup.Shared.csproj") }
                        },
                        "WeatherForecast.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\WeatherForecast.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\WeatherForecast.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Setup\\Shared\\WeatherForecast.cs") }
                        }
                    }
                },
                "Shared": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared") },
                    "SetupLibrary.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application") },
                        "Attributes": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Attributes",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Attributes") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Attributes") },
                            "AliasAttribute.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Attributes\\AliasAttribute.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Attributes\\AliasAttribute.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Attributes\\AliasAttribute.cs") }
                            }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\bin") }
                        },
                        "Models": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models") },
                            "Dictionaries": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\Dictionaries",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\Dictionaries") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\Dictionaries") },
                                "TemplateExtensionToCodeTypeDic.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\Dictionaries\\TemplateExtensionToCodeTypeDic.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\Dictionaries\\TemplateExtensionToCodeTypeDic.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\Dictionaries\\TemplateExtensionToCodeTypeDic.cs") }
                                }
                            },
                            "TemplateAttribute.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttribute.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttribute.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttribute.cs") }
                            },
                            "TemplateAttributeProperty.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttributeProperty.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttributeProperty.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttributeProperty.cs") }
                            },
                            "TemplateAttributeSignature.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttributeSignature.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttributeSignature.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateAttributeSignature.cs") }
                            },
                            "TemplateBase.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateBase.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateBase.cs") }
                            },
                            "TemplateBoundedContext.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateBoundedContext.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateBoundedContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateBoundedContext.cs") }
                            },
                            "TemplateCodeType.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateCodeType.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateCodeType.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateCodeType.cs") }
                            },
                            "TemplateCommand.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateCommand.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateCommand.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateCommand.cs") }
                            },
                            "TemplateConstructor.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateConstructor.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateConstructor.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateConstructor.cs") }
                            },
                            "TemplateContext.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateContext.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateContext.cs") }
                            },
                            "TemplateData.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateData.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateData.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateData.cs") }
                            },
                            "TemplateDbContext.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateDbContext.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateDbContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateDbContext.cs") }
                            },
                            "TemplateDirectory.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateDirectory.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateDirectory.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateDirectory.cs") }
                            },
                            "TemplateEntity.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateEntity.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateEntity.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateEntity.cs") }
                            },
                            "TemplateFile.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateFile.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateFile.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateFile.cs") }
                            },
                            "TemplateGroup.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateGroup.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateGroup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateGroup.cs") }
                            },
                            "TemplateInterface.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateInterface.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateInterface.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateInterface.cs") }
                            },
                            "TemplateInterfaceSignature.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateInterfaceSignature.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateInterfaceSignature.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateInterfaceSignature.cs") }
                            },
                            "TemplateLocalization.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateLocalization.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateLocalization.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateLocalization.cs") }
                            },
                            "TemplateLocalizationPluralForm.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateLocalizationPluralForm.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateLocalizationPluralForm.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateLocalizationPluralForm.cs") }
                            },
                            "TemplateMethod.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateMethod.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateMethod.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateMethod.cs") }
                            },
                            "TemplateMethodSignature.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateMethodSignature.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateMethodSignature.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateMethodSignature.cs") }
                            },
                            "TemplateModel.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateModel.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateModel.cs") }
                            },
                            "TemplateParameter.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateParameter.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateParameter.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateParameter.cs") }
                            },
                            "TemplateParameterSignature.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateParameterSignature.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateParameterSignature.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateParameterSignature.cs") }
                            },
                            "TemplateProject.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateProject.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateProject.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateProject.cs") }
                            },
                            "TemplateProperty.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateProperty.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateProperty.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateProperty.cs") }
                            },
                            "TemplatePropertyPath.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplatePropertyPath.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplatePropertyPath.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplatePropertyPath.cs") }
                            },
                            "TemplatePropertySignature.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplatePropertySignature.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplatePropertySignature.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplatePropertySignature.cs") }
                            },
                            "TemplateSection.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateSection.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateSection.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateSection.cs") }
                            },
                            "TemplateService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateService.cs") }
                            },
                            "TemplateSignatureBase.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateSignatureBase.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateSignatureBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateSignatureBase.cs") }
                            },
                            "TemplateStore.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateStore.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateStore.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateStore.cs") }
                            },
                            "TemplateTokenInfo.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateTokenInfo.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateTokenInfo.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateTokenInfo.cs") }
                            },
                            "TemplateType.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateType.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateType.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateType.cs") }
                            },
                            "TemplateTypeSignature.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateTypeSignature.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateTypeSignature.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateTypeSignature.cs") }
                            },
                            "TemplateUIProject.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateUIProject.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateUIProject.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Models\\TemplateUIProject.cs") }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\obj") }
                        },
                        "SetupLibrary.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\SetupLibrary.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\SetupLibrary.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\SetupLibrary.Application.csproj") }
                        },
                        "Utilities": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities") },
                            "CombinatorOfLists": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities\\CombinatorOfLists",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities\\CombinatorOfLists") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities\\CombinatorOfLists") },
                                "CombinatorOfLists.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities\\CombinatorOfLists\\CombinatorOfLists.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities\\CombinatorOfLists\\CombinatorOfLists.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Application\\Utilities\\CombinatorOfLists\\CombinatorOfLists.cs") }
                                }
                            }
                        }
                    },
                    "SetupLibrary.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\Class1.cs") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\obj") }
                        },
                        "SetupLibrary.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\SetupLibrary.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\SetupLibrary.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Domain\\SetupLibrary.Domain.csproj") }
                        }
                    },
                    "SetupLibrary.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\bin") }
                        },
                        "Extensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions") },
                            "IServiceCollectionExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions\\IServiceCollectionExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions\\IServiceCollectionExtensions") },
                                "AddSetupServicesExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions\\IServiceCollectionExtensions\\AddSetupServicesExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions\\IServiceCollectionExtensions\\AddSetupServicesExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Extensions\\IServiceCollectionExtensions\\AddSetupServicesExtension.cs") }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\obj") }
                        },
                        "Services": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services") },
                            "CodeGeneratorServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices") },
                                "CodeGeneratorService": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService") },
                                    "CodeGeneratorService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService.cs") }
                                    },
                                    "CodeGeneratorService_Clean.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_Clean.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_Clean.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_Clean.cs") }
                                    },
                                    "CodeGeneratorService_CreateData.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateData.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateData.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateData.cs") }
                                    },
                                    "CodeGeneratorService_CreateLocalParameters.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateLocalParameters.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateLocalParameters.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateLocalParameters.cs") }
                                    },
                                    "CodeGeneratorService_CreateParameters.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateParameters.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateParameters.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_CreateParameters.cs") }
                                    },
                                    "CodeGeneratorService_GenerateCodes.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GenerateCodes.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GenerateCodes.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GenerateCodes.cs") }
                                    },
                                    "CodeGeneratorService_GetAllMatchingNameToTokenInfoDicWithConstraint.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetAllMatchingNameToTokenInfoDicWithConstraint.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetAllMatchingNameToTokenInfoDicWithConstraint.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetAllMatchingNameToTokenInfoDicWithConstraint.cs") }
                                    },
                                    "CodeGeneratorService_GetContextTemplate.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetContextTemplate.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetContextTemplate.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetContextTemplate.cs") }
                                    },
                                    "CodeGeneratorService_GetFirstCommandContent.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetFirstCommandContent.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetFirstCommandContent.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetFirstCommandContent.cs") }
                                    },
                                    "CodeGeneratorService_GetMatchingNames.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetMatchingNames.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetMatchingNames.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_GetMatchingNames.cs") }
                                    },
                                    "CodeGeneratorService_PopulateDbContexts.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateDbContexts.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateDbContexts.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateDbContexts.cs") }
                                    },
                                    "CodeGeneratorService_PopulateLocalizations.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations.cs") }
                                    },
                                    "CodeGeneratorService_PopulateLocalizations_ExtractPos.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_ExtractPos.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_ExtractPos.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_ExtractPos.cs") }
                                    },
                                    "CodeGeneratorService_PopulateLocalizations_ParsePoFileAsync.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_ParsePoFileAsync.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_ParsePoFileAsync.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_ParsePoFileAsync.cs") }
                                    },
                                    "CodeGeneratorService_PopulateLocalizations_PopulateCustomPoFileResources.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateCustomPoFileResources.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateCustomPoFileResources.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateCustomPoFileResources.cs") }
                                    },
                                    "CodeGeneratorService_PopulateLocalizations_PopulateEnumResources.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateEnumResources.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateEnumResources.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateEnumResources.cs") }
                                    },
                                    "CodeGeneratorService_PopulateLocalizations_PopulateTemplatePoFileResources.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateTemplatePoFileResources.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateTemplatePoFileResources.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateLocalizations_PopulateTemplatePoFileResources.cs") }
                                    },
                                    "CodeGeneratorService_PopulateModels.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateModels.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateModels.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateModels.cs") }
                                    },
                                    "CodeGeneratorService_PopulateProjects.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateProjects.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateProjects.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateProjects.cs") }
                                    },
                                    "CodeGeneratorService_PopulateServices.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateServices.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateServices.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_PopulateServices.cs") }
                                    },
                                    "CodeGeneratorService_Process.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_Process.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_Process.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_Process.cs") }
                                    },
                                    "CodeGeneratorService_ProcessArgs.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessArgs.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessArgs.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessArgs.cs") }
                                    },
                                    "CodeGeneratorService_ProcessBulkRefs.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessBulkRefs.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessBulkRefs.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessBulkRefs.cs") }
                                    },
                                    "CodeGeneratorService_ProcessBulkRunIfs.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessBulkRunIfs.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessBulkRunIfs.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessBulkRunIfs.cs") }
                                    },
                                    "CodeGeneratorService_ProcessContents.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessContents.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessContents.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessContents.cs") }
                                    },
                                    "CodeGeneratorService_ProcessContentsBody.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessContentsBody.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessContentsBody.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessContentsBody.cs") }
                                    },
                                    "CodeGeneratorService_ProcessFile.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessFile.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessFile.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessFile.cs") }
                                    },
                                    "CodeGeneratorService_ProcessPaths.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessPaths.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessPaths.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessPaths.cs") }
                                    },
                                    "CodeGeneratorService_ProcessPathsBody.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessPathsBody.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessPathsBody.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessPathsBody.cs") }
                                    },
                                    "CodeGeneratorService_ProcessProject.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessProject.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessProject.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessProject.cs") }
                                    },
                                    "CodeGeneratorService_ProcessRef.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessRef.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessRef.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProcessRef.cs") }
                                    },
                                    "CodeGeneratorService_ProjectNameToProjectDic.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProjectNameToProjectDic.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProjectNameToProjectDic.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ProjectNameToProjectDic.cs") }
                                    },
                                    "CodeGeneratorService_ShouldRun.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ShouldRun.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ShouldRun.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\CodeGeneratorServices\\CodeGeneratorService\\CodeGeneratorService_ShouldRun.cs") }
                                    }
                                }
                            },
                            "DatabaseSetupServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices") },
                                "DatabaseSetupService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\DatabaseSetupService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\DatabaseSetupService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\DatabaseSetupService.cs") }
                                },
                                "GeoTargetsDatabaseSetupService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\GeoTargetsDatabaseSetupService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\GeoTargetsDatabaseSetupService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\GeoTargetsDatabaseSetupService.cs") }
                                },
                                "ReferencesDatabaseSetupService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\ReferencesDatabaseSetupService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\ReferencesDatabaseSetupService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\DatabaseSetupServices\\ReferencesDatabaseSetupService.cs") }
                                }
                            },
                            "IdGeneratorServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices") },
                                "ObjectIdGeneratorService": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService") },
                                    "IObjectIdGeneratorService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService\\IObjectIdGeneratorService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService\\IObjectIdGeneratorService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService\\IObjectIdGeneratorService.cs") }
                                    },
                                    "ObjectIdGeneratorService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService\\ObjectIdGeneratorService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService\\ObjectIdGeneratorService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdGeneratorServices\\ObjectIdGeneratorService\\ObjectIdGeneratorService.cs") }
                                    }
                                }
                            },
                            "IdServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices") },
                                "ObjectIdService": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices\\ObjectIdService",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices\\ObjectIdService") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices\\ObjectIdService") },
                                    "ObjectIdService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices\\ObjectIdService\\ObjectIdService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices\\ObjectIdService\\ObjectIdService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Services\\IdServices\\ObjectIdService\\ObjectIdService.cs") }
                                    }
                                }
                            }
                        },
                        "SetupLibrary.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\SetupLibrary.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\SetupLibrary.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\SetupLibrary.Infrastructure.csproj") }
                        },
                        "Startup.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Startup.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Startup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Setups\\Shared\\SetupLibrary.Infrastructure\\Startup.cs") }
                        }
                    }
                }
            },
            "Shared": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared") },
                "Core.Application": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application") },
                    "bin": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\bin",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\bin") }
                    },
                    "CommandBase.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\CommandBase.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\CommandBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\CommandBase.cs") }
                    },
                    "Core.Application.csproj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Core.Application.csproj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Core.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Core.Application.csproj") }
                    },
                    "Emails": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Emails",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Emails") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Emails") },
                        "EmailMessage.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Emails\\EmailMessage.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Emails\\EmailMessage.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Emails\\EmailMessage.cs") }
                        }
                    },
                    "Interfaces": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces") },
                        "SevriceInterfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces") },
                            "IRoleApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IRoleApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IRoleApplicationService.cs") }
                            },
                            "IRoleClaimApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IRoleClaimApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IRoleClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IRoleClaimApplicationService.cs") }
                            },
                            "IUserApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserApplicationService.cs") }
                            },
                            "IUserClaimApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserClaimApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserClaimApplicationService.cs") }
                            },
                            "IUserGroupApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupApplicationService.cs") }
                            },
                            "IUserGroupRequestApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupRequestApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupRequestApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupRequestApplicationService.cs") }
                            },
                            "IUserGroupRoleApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupRoleApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserGroupRoleApplicationService.cs") }
                            },
                            "IUserLoginApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserLoginApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserLoginApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserLoginApplicationService.cs") }
                            },
                            "IUserTokenApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserTokenApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserTokenApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUserTokenApplicationService.cs") }
                            },
                            "IUser_RoleApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_RoleApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_RoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_RoleApplicationService.cs") }
                            },
                            "IUser_UserGroupApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_UserGroupApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_UserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_UserGroupApplicationService.cs") }
                            },
                            "IUser_UserGroupRoleApplicationService.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_UserGroupRoleApplicationService.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_UserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\IUser_UserGroupRoleApplicationService.cs") }
                            },
                            "__Entities_Groups_00_Name__ServiceInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") },
                                "I__Entities_Name__ApplicationService_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__ApplicationService_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__ApplicationService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__ApplicationService_Gen_.cs") }
                                }
                            }
                        }
                    },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\obj") }
                    },
                    "QueryBase.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\QueryBase.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\QueryBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\QueryBase.cs") }
                    },
                    "Services": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services") },
                        "RoleApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\RoleApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\RoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\RoleApplicationService.cs") }
                        },
                        "RoleClaimApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\RoleClaimApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\RoleClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\RoleClaimApplicationService.cs") }
                        },
                        "UserApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserApplicationService.cs") }
                        },
                        "UserClaimApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserClaimApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserClaimApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserClaimApplicationService.cs") }
                        },
                        "UserGroupApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupApplicationService.cs") }
                        },
                        "UserGroupRequestApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupRequestApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupRequestApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupRequestApplicationService.cs") }
                        },
                        "UserGroupRoleApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupRoleApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserGroupRoleApplicationService.cs") }
                        },
                        "UserLoginApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserLoginApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserLoginApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserLoginApplicationService.cs") }
                        },
                        "UserTokenApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserTokenApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserTokenApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\UserTokenApplicationService.cs") }
                        },
                        "User_RoleApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_RoleApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_RoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_RoleApplicationService.cs") }
                        },
                        "User_UserGroupApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_UserGroupApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_UserGroupApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_UserGroupApplicationService.cs") }
                        },
                        "User_UserGroupRoleApplicationService.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_UserGroupRoleApplicationService.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_UserGroupRoleApplicationService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\User_UserGroupRoleApplicationService.cs") }
                        },
                        "__Entities_Groups_00_Name__ApplicationServices": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\__Entities_Groups_00_Name__ApplicationServices",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\__Entities_Groups_00_Name__ApplicationServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\__Entities_Groups_00_Name__ApplicationServices") },
                            "__Entities_Name__ApplicationService_Gen_.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\__Entities_Groups_00_Name__ApplicationServices\\__Entities_Name__ApplicationService_Gen_.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\__Entities_Groups_00_Name__ApplicationServices\\__Entities_Name__ApplicationService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Application\\Services\\__Entities_Groups_00_Name__ApplicationServices\\__Entities_Name__ApplicationService_Gen_.cs") }
                            }
                        }
                    }
                },
                "Core.Domain": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain") },
                    "bin": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\bin",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\bin") }
                    },
                    "Core.Domain.csproj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Core.Domain.csproj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Core.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Core.Domain.csproj") }
                    },
                    "Entities": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities") },
                        "ReferenceEntities": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\ReferenceEntities",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\ReferenceEntities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\ReferenceEntities") },
                            "EnumReference.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\ReferenceEntities\\EnumReference.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\ReferenceEntities\\EnumReference.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\ReferenceEntities\\EnumReference.cs") }
                            }
                        },
                        "__Entities_Groups_00_Name__Entities": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\__Entities_Groups_00_Name__Entities",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\__Entities_Groups_00_Name__Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\__Entities_Groups_00_Name__Entities") },
                            "__Entities_Name___Gen_.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___Gen_.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entities\\__Entities_Groups_00_Name__Entities\\__Entities_Name___Gen_.cs") }
                            }
                        }
                    },
                    "Entity.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entity.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entity.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Entity.cs") }
                    },
                    "Exceptions": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Exceptions",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Exceptions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Exceptions") },
                        "BusinessRuleValidationException.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Exceptions\\BusinessRuleValidationException.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Exceptions\\BusinessRuleValidationException.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Exceptions\\BusinessRuleValidationException.cs") }
                        }
                    },
                    "Interfaces": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces") },
                        "IAggregateRoot.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IAggregateRoot.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IAggregateRoot.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IAggregateRoot.cs") }
                        },
                        "IBusinessRule.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IBusinessRule.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IBusinessRule.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IBusinessRule.cs") }
                        },
                        "IDomainEvent.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IDomainEvent.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IDomainEvent.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IDomainEvent.cs") }
                        },
                        "IRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\IRepository.cs") }
                        },
                        "ServiceInterfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces") },
                            "__Entities_Groups_00_Name__ServiceInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") },
                                "I__Entities_Name__DomainService_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Interfaces\\ServiceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\I__Entities_Name__DomainService_Gen_.cs") }
                                }
                            }
                        }
                    },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\obj") }
                    },
                    "Services": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services") },
                        "__Entities_Groups_00_Name__Services": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services\\__Entities_Groups_00_Name__Services",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services\\__Entities_Groups_00_Name__Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services\\__Entities_Groups_00_Name__Services") },
                            "__Entities_Name__DomainService_Gen_.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services\\__Entities_Groups_00_Name__Services\\__Entities_Name__DomainService_Gen_.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services\\__Entities_Groups_00_Name__Services\\__Entities_Name__DomainService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Services\\__Entities_Groups_00_Name__Services\\__Entities_Name__DomainService_Gen_.cs") }
                            }
                        }
                    },
                    "Specs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs") },
                        "__Entities_Groups_00_Name__Specs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs") },
                            "__Entities_Name__Specs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs") },
                                "__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\Specs\\__Entities_Groups_00_Name__Specs\\__Entities_Name__Specs\\__Entities_NamePluralCase__By__Entities_Properties_Name__Spec_Gen_.cs") }
                                }
                            }
                        }
                    },
                    "TypedIdValueBase.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\TypedIdValueBase.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\TypedIdValueBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\TypedIdValueBase.cs") }
                    },
                    "ValueObject.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObject.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObject.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObject.cs") }
                    },
                    "ValueObjects": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects") },
                        "Ids": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids") },
                            "__Entities_Groups_00_Name__Ids": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids") },
                                "__Entities_Name__Id_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Domain\\ValueObjects\\Ids\\__Entities_Groups_00_Name__Ids\\__Entities_Name__Id_Gen_.cs") }
                                }
                            }
                        }
                    }
                },
                "Core.Infrastructure": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure") },
                    "bin": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\bin",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\bin") }
                    },
                    "Core.Infrastructure.csproj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Core.Infrastructure.csproj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Core.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Core.Infrastructure.csproj") }
                    },
                    "DbContextConnectionConfiguration .cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContextConnectionConfiguration .cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContextConnectionConfiguration .cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContextConnectionConfiguration .cs") }
                    },
                    "DbContexts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts") },
                        "ApplicationDbContext.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts\\ApplicationDbContext.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts\\ApplicationDbContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts\\ApplicationDbContext.cs") }
                        },
                        "ApplicationDbContextBackup.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts\\ApplicationDbContextBackup.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts\\ApplicationDbContextBackup.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\DbContexts\\ApplicationDbContextBackup.cs") }
                        }
                    },
                    "EfRepository.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EfRepository.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EfRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EfRepository.cs") }
                    },
                    "Emails": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails") },
                        "EmailsConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails\\EmailsConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails\\EmailsConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails\\EmailsConfiguration.cs") }
                        },
                        "EmailSender.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails\\EmailSender.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails\\EmailSender.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Emails\\EmailSender.cs") }
                        }
                    },
                    "EntityTypeConfigurationBase.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurationBase.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurationBase.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurationBase.cs") }
                    },
                    "EntityTypeConfigurations": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations") },
                        "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") },
                            "__Entities_Name__EntityTypeConfiguration_Gen_.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_Gen_.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_Gen_.cs") }
                            }
                        }
                    },
                    "Extensions": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions") },
                        "HotChocolateExtensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions") },
                            "IObjectFieldDescriptorExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions") },
                                "IObjectFieldDescriptorExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions") },
                                    "UseDbContextExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions\\UseDbContextExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions\\UseDbContextExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions\\UseDbContextExtension.cs") }
                                    },
                                    "UseUpperCaseExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions\\UseUpperCaseExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions\\UseUpperCaseExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\HotChocolateExtensions\\IObjectFieldDescriptorExtensions\\IObjectFieldDescriptorExtensions\\UseUpperCaseExtension.cs") }
                                    }
                                }
                            }
                        },
                        "MicrosoftExtensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions") },
                            "AspNetCoreExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") },
                                "IApplicationBuilderExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions") },
                                    "UseSecurityHeaders.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseSecurityHeaders.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseSecurityHeaders.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseSecurityHeaders.cs") }
                                    },
                                    "UseServerExtensions.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseServerExtensions.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseServerExtensions.cs") }
                                    },
                                    "UseSwaggerUIExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseSwaggerUIExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseSwaggerUIExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseSwaggerUIExtension.cs") }
                                    }
                                },
                                "IMvcBuilderExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions") },
                                    "AddDaprExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions\\AddDaprExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions\\AddDaprExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions\\AddDaprExtension.cs") }
                                    },
                                    "UseODataExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions\\UseODataExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions\\UseODataExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IMvcBuilderExtensions\\UseODataExtension.cs") }
                                    }
                                }
                            },
                            "EntityFrameworkCoreExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions") },
                                "DbContextExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextExtensions") },
                                    "SetExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextExtensions\\SetExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextExtensions\\SetExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextExtensions\\SetExtension.cs") }
                                    }
                                },
                                "DbContextOptionsBuilderExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions") },
                                    "BuildDbContextOptionsExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions\\BuildDbContextOptionsExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions\\BuildDbContextOptionsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\EntityFrameworkCoreExtensions\\DbContextOptionsBuilderExtensions\\BuildDbContextOptionsExtension.cs") }
                                    }
                                }
                            },
                            "IConfigurationBuilderExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IConfigurationBuilderExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IConfigurationBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IConfigurationBuilderExtensions") },
                                "AddAppSettingsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IConfigurationBuilderExtensions\\AddAppSettingsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IConfigurationBuilderExtensions\\AddAppSettingsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IConfigurationBuilderExtensions\\AddAppSettingsExtension.cs") }
                                }
                            },
                            "IServiceCollectionExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") },
                                "AddControllersWithViewsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddControllersWithViewsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddControllersWithViewsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddControllersWithViewsExtension.cs") }
                                },
                                "AddCorsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddCorsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddCorsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddCorsExtension.cs") }
                                },
                                "AddDaprClientExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDaprClientExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDaprClientExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDaprClientExtension.cs") }
                                },
                                "AddDbContextPoolsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDbContextPoolsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDbContextPoolsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDbContextPoolsExtension.cs") }
                                },
                                "AddDbContextsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDbContextsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDbContextsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddDbContextsExtension.cs") }
                                },
                                "AddEfRepositoriesExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEfRepositoriesExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEfRepositoriesExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddEfRepositoriesExtension.cs") }
                                },
                                "AddGraphQLServerExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddGraphQLServerExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddGraphQLServerExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddGraphQLServerExtension.cs") }
                                },
                                "AddGrpc.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddGrpc.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddGrpc.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddGrpc.cs") }
                                },
                                "AddLiveReloadExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddLiveReloadExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddLiveReloadExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddLiveReloadExtension.cs") }
                                },
                                "AddLocalizationExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddLocalizationExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddLocalizationExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddLocalizationExtension.cs") }
                                },
                                "AddRazorPagesExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddRazorPagesExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddRazorPagesExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddRazorPagesExtension.cs") }
                                },
                                "AddServerExtensions.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddServerExtensions.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddServerExtensions.cs") }
                                },
                                "AddSignalRExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSignalRExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSignalRExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSignalRExtension.cs") }
                                },
                                "AddSwaggerDocExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSwaggerDocExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSwaggerDocExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSwaggerDocExtension.cs") }
                                },
                                "AddSwaggerGenExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSwaggerGenExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSwaggerGenExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddSwaggerGenExtension.cs") }
                                },
                                "ConfigureApplicationCookieExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureApplicationCookieExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureApplicationCookieExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureApplicationCookieExtension.cs") }
                                },
                                "ConfigureIdentityOptionsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIdentityOptionsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIdentityOptionsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIdentityOptionsExtension.cs") }
                                },
                                "ConfigureIISOptionsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIISOptionsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIISOptionsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIISOptionsExtension.cs") }
                                },
                                "ConfigureIISServerOptionsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIISServerOptionsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIISServerOptionsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureIISServerOptionsExtension.cs") }
                                },
                                "ConfigureMvcOptionsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureMvcOptionsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureMvcOptionsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureMvcOptionsExtension.cs") }
                                },
                                "ConfigureSerilogExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureSerilogExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureSerilogExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureSerilogExtension.cs") }
                                },
                                "ConfigureTwilioExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureTwilioExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureTwilioExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\ConfigureTwilioExtension.cs") }
                                }
                            },
                            "ModelBuilderExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions") },
                                "AddCommonPropertiesExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\AddCommonPropertiesExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\AddCommonPropertiesExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\AddCommonPropertiesExtension.cs") }
                                },
                                "ApplyConfigurationsFromAssemblyExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\ApplyConfigurationsFromAssemblyExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\ApplyConfigurationsFromAssemblyExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\ApplyConfigurationsFromAssemblyExtension.cs") }
                                },
                                "DefinePrimaryKeysFromKeyAttributesExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\DefinePrimaryKeysFromKeyAttributesExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\DefinePrimaryKeysFromKeyAttributesExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\DefinePrimaryKeysFromKeyAttributesExtension.cs") }
                                },
                                "SetNoActionsForUpdatedByOptionalAndCreatedByOptionalExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\SetNoActionsForUpdatedByOptionalAndCreatedByOptionalExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\SetNoActionsForUpdatedByOptionalAndCreatedByOptionalExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\ModelBuilderExtensions\\SetNoActionsForUpdatedByOptionalAndCreatedByOptionalExtension.cs") }
                                }
                            },
                            "OdataExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions") },
                                "ODataConventionModelBuilderExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions\\ODataConventionModelBuilderExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions\\ODataConventionModelBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions\\ODataConventionModelBuilderExtensions") },
                                    "SetEntitiesExtension_ServerGen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions\\ODataConventionModelBuilderExtensions\\SetEntitiesExtension_ServerGen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions\\ODataConventionModelBuilderExtensions\\SetEntitiesExtension_ServerGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\MicrosoftExtensions\\OdataExtensions\\ODataConventionModelBuilderExtensions\\SetEntitiesExtension_ServerGen_.cs") }
                                    }
                                }
                            }
                        },
                        "ObjectExtensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\ObjectExtensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\ObjectExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\ObjectExtensions") },
                            "DescriptionAttributeMethodExtension.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\ObjectExtensions\\DescriptionAttributeMethodExtension.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\ObjectExtensions\\DescriptionAttributeMethodExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Extensions\\ObjectExtensions\\DescriptionAttributeMethodExtension.cs") }
                            }
                        }
                    },
                    "Graphql": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql") },
                        "Models": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql\\Models",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql\\Models") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql\\Models") },
                            "CustomGraphqlTypeInspector.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql\\Models\\CustomGraphqlTypeInspector.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql\\Models\\CustomGraphqlTypeInspector.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Graphql\\Models\\CustomGraphqlTypeInspector.cs") }
                            }
                        }
                    },
                    "Inbox": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Inbox",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Inbox") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Inbox") },
                        "InboxMessage.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Inbox\\InboxMessage.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Inbox\\InboxMessage.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Inbox\\InboxMessage.cs") }
                        }
                    },
                    "Interfaces": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Interfaces",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Interfaces") },
                        "IUnitOfWork.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Interfaces\\IUnitOfWork.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Interfaces\\IUnitOfWork.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\Interfaces\\IUnitOfWork.cs") }
                        }
                    },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\obj") }
                    },
                    "StronglyTypedIdValueConverterSelector .cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\StronglyTypedIdValueConverterSelector .cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\StronglyTypedIdValueConverterSelector .cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\StronglyTypedIdValueConverterSelector .cs") }
                    },
                    "UnitOfWork.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\UnitOfWork.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\UnitOfWork.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Core.Infrastructure\\UnitOfWork.cs") }
                    }
                },
                "Library": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library") },
                    "Library.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\bin") }
                        },
                        "Interfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces") },
                            "ServiceInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces") },
                                "AssemblyServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces") },
                                    "IAssemblyService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces\\IAssemblyService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces\\IAssemblyService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces\\IAssemblyService.cs") }
                                    }
                                },
                                "EvalServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces") },
                                    "IEvalService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces\\IEvalService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces\\IEvalService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces\\IEvalService.cs") }
                                    }
                                },
                                "GitServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\GitServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\GitServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\GitServiceInterfaces") },
                                    "IGitService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\GitServiceInterfaces\\IGitService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\GitServiceInterfaces\\IGitService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\GitServiceInterfaces\\IGitService.cs") }
                                    }
                                },
                                "JsServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces") },
                                    "IJsService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces\\IJsService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces\\IJsService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces\\IJsService.cs") }
                                    }
                                },
                                "PathServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces") },
                                    "IPathService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces\\IPathService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces\\IPathService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces\\IPathService.cs") }
                                    }
                                },
                                "RegexServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces") },
                                    "IRegexService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces\\IRegexService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces\\IRegexService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces\\IRegexService.cs") }
                                    }
                                },
                                "SerializerServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces") },
                                    "IXmlSerializerService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces\\IXmlSerializerService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces\\IXmlSerializerService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces\\IXmlSerializerService.cs") }
                                    }
                                },
                                "TemplateServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces") },
                                    "ITemplateService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces\\ITemplateService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces\\ITemplateService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces\\ITemplateService.cs") }
                                    }
                                },
                                "UrlServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces") },
                                    "IUrlService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces\\IUrlService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces\\IUrlService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces\\IUrlService.cs") }
                                    }
                                },
                                "__Services_Groups_0_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces") },
                                    "I__Services_Name__Service_Gen3_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces\\I__Services_Name__Service_Gen3_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces\\I__Services_Name__Service_Gen3_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces\\I__Services_Name__Service_Gen3_.cs") }
                                    }
                                }
                            }
                        },
                        "Library.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Library.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Library.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\Library.Application.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Application\\obj") }
                        }
                    },
                    "Library.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\Class1.cs") }
                        },
                        "Library.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\Library.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\Library.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\Library.Domain.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Domain\\obj") }
                        }
                    },
                    "Library.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Class1.cs") }
                        },
                        "Library.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Library.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Library.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Library.Infrastructure.csproj") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\obj") }
                        },
                        "Services": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services") },
                            "AssemblyServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\AssemblyServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\AssemblyServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\AssemblyServices") },
                                "AssemblyService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\AssemblyServices\\AssemblyService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\AssemblyServices\\AssemblyService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\AssemblyServices\\AssemblyService.cs") }
                                }
                            },
                            "EvalServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices") },
                                "EvalService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService.cs") }
                                },
                                "EvalService_EvaluateBulkExpressions.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkExpressions.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkExpressions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkExpressions.cs") }
                                },
                                "EvalService_EvaluateBulkStatements.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkStatements.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkStatements.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkStatements.cs") }
                                },
                                "EvalService_EvaluateBulkTemplates.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkTemplates.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkTemplates.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateBulkTemplates.cs") }
                                },
                                "EvalService_EvaluateExpression.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateExpression.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateExpression.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateExpression.cs") }
                                },
                                "EvalService_EvaluateStatements.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateStatements.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateStatements.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateStatements.cs") }
                                },
                                "EvalService_EvaluateTemplate.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateTemplate.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateTemplate.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_EvaluateTemplate.cs") }
                                },
                                "EvalService_GetAllTypes.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetAllTypes.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetAllTypes.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetAllTypes.cs") }
                                },
                                "EvalService_GetClassName.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetClassName.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetClassName.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetClassName.cs") }
                                },
                                "EvalService_GetFooter.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetFooter.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetFooter.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetFooter.cs") }
                                },
                                "EvalService_GetHeader.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetHeader.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetHeader.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetHeader.cs") }
                                },
                                "EvalService_GetIntro.backdup.txt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetIntro.backdup.txt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetIntro.backdup.txt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetIntro.backdup.txt.cs") }
                                },
                                "EvalService_GetParametersTemplate.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetParametersTemplate.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetParametersTemplate.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetParametersTemplate.cs") }
                                },
                                "EvalService_GetParametersTemplate.cs.BACKUP.txt": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetParametersTemplate.cs.BACKUP.txt",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetParametersTemplate.cs.BACKUP.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetParametersTemplate.cs.BACKUP.txt") }
                                },
                                "EvalService_GetTypeFromClassName.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetTypeFromClassName.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetTypeFromClassName.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_GetTypeFromClassName.cs") }
                                },
                                "EvalService_Process.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_Process.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_Process.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\EvalServices\\EvalService_Process.cs") }
                                }
                            },
                            "GitServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\GitServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\GitServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\GitServices") },
                                "GitService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\GitServices\\GitService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\GitServices\\GitService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\GitServices\\GitService.cs") }
                                }
                            },
                            "JsServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\JsServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\JsServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\JsServices") },
                                "JsService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\JsServices\\JsService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\JsServices\\JsService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\JsServices\\JsService.cs") }
                                }
                            },
                            "PathServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\PathServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\PathServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\PathServices") },
                                "PathService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\PathServices\\PathService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\PathServices\\PathService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\PathServices\\PathService.cs") }
                                }
                            },
                            "RegexServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\RegexServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\RegexServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\RegexServices") },
                                "RegexService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\RegexServices\\RegexService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\RegexServices\\RegexService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\RegexServices\\RegexService.cs") }
                                }
                            },
                            "SerializerServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\SerializerServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\SerializerServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\SerializerServices") },
                                "XmlSerializerService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\SerializerServices\\XmlSerializerService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\SerializerServices\\XmlSerializerService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\SerializerServices\\XmlSerializerService.cs") }
                                }
                            },
                            "TemplateServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices") },
                                "TemplateService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices\\TemplateService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices\\TemplateService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices\\TemplateService.cs") }
                                },
                                "TemplateService_Slow.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices\\TemplateService_Slow.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices\\TemplateService_Slow.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\TemplateServices\\TemplateService_Slow.cs") }
                                }
                            },
                            "UrlServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\UrlServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\UrlServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\UrlServices") },
                                "UrlService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\UrlServices\\UrlService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\UrlServices\\UrlService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\UrlServices\\UrlService.cs") }
                                }
                            },
                            "__Services_Groups_0_Name__Services": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\__Services_Groups_0_Name__Services",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\__Services_Groups_0_Name__Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\__Services_Groups_0_Name__Services") },
                                "__Services_Name__Service_GenX_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\__Services_Groups_0_Name__Services\\__Services_Name__Service_GenX_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\__Services_Groups_0_Name__Services\\__Services_Name__Service_GenX_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Library.Infrastructure\\Services\\__Services_Groups_0_Name__Services\\__Services_Name__Service_GenX_.cs") }
                                }
                            }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared") },
                        "Shared.Library.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\Shared.Library.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\Shared.Library.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\Shared.Library.Application") },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\Shared.Library.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\Shared.Library.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\Shared.Library.Application\\obj") }
                            }
                        },
                        "SharedLibrary.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\bin") }
                            },
                            "Extensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions") },
                                "SystemExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions") },
                                    "ReflectionExtensions": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions") },
                                        "ConstructorInfoExtensions": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\ConstructorInfoExtensions",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\ConstructorInfoExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\ConstructorInfoExtensions") },
                                            "GetParametersSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\ConstructorInfoExtensions\\GetParametersSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\ConstructorInfoExtensions\\GetParametersSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\ConstructorInfoExtensions\\GetParametersSignatureExtension.cs") }
                                            }
                                        },
                                        "MethodInfoExtensions": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions") },
                                            "GetAccessModifierSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetAccessModifierSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetAccessModifierSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetAccessModifierSignatureExtension.cs") }
                                            },
                                            "GetGenericSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetGenericSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetGenericSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetGenericSignatureExtension.cs") }
                                            },
                                            "GetMethodArgumentsSignatureAsListExension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetMethodArgumentsSignatureAsListExension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetMethodArgumentsSignatureAsListExension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetMethodArgumentsSignatureAsListExension.cs") }
                                            },
                                            "GetNameSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetNameSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetNameSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetNameSignatureExtension.cs") }
                                            },
                                            "GetNameWithGenericSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetNameWithGenericSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetNameWithGenericSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetNameWithGenericSignatureExtension.cs") }
                                            },
                                            "GetParametersSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetParametersSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetParametersSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetParametersSignatureExtension.cs") }
                                            },
                                            "GetSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetSignatureExtension.cs") }
                                            },
                                            "GetTypeSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetTypeSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetTypeSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\MethodInfoExtensions\\GetTypeSignatureExtension.cs") }
                                            }
                                        },
                                        "PropertyInfoExtensions": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions") },
                                            "GetAccessModifierSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetAccessModifierSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetAccessModifierSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetAccessModifierSignatureExtension.cs") }
                                            },
                                            "GetNameSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetNameSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetNameSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetNameSignatureExtension.cs") }
                                            },
                                            "GetSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetSignatureExtension.cs") }
                                            },
                                            "GetTypeSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetTypeSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetTypeSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\PropertyInfoExtensions\\GetTypeSignatureExtension.cs") }
                                            }
                                        },
                                        "TypeExtensions": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions") },
                                            "IsSimpleTypeExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\IsSimpleTypeExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\IsSimpleTypeExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\IsSimpleTypeExtension.cs") }
                                            },
                                            "TypeExtensionMethods.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\TypeExtensionMethods.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\TypeExtensionMethods.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\TypeExtensionMethods.cs") }
                                            },
                                            "TypeSignatureExtension.cs": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\TypeSignatureExtension.cs",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\TypeSignatureExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ReflectionExtensions\\TypeExtensions\\TypeSignatureExtension.cs") }
                                            }
                                        }
                                    },
                                    "ThreadingExtneions": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ThreadingExtneions",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ThreadingExtneions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ThreadingExtneions") },
                                        "TaskExtension.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ThreadingExtneions\\TaskExtension.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ThreadingExtneions\\TaskExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Extensions\\SystemExtensions\\ThreadingExtneions\\TaskExtension.cs") }
                                        }
                                    }
                                }
                            },
                            "Interfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces") },
                                "ServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces") },
                                    "AssemblyServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces") },
                                        "ISharedAssemblyService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces\\ISharedAssemblyService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces\\ISharedAssemblyService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\AssemblyServiceInterfaces\\ISharedAssemblyService.cs") }
                                        }
                                    },
                                    "EvalServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces") },
                                        "ISharedEvalService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces\\ISharedEvalService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces\\ISharedEvalService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\EvalServiceInterfaces\\ISharedEvalService.cs") }
                                        }
                                    },
                                    "JsServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces") },
                                        "ISharedJsService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces\\ISharedJsService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces\\ISharedJsService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\JsServiceInterfaces\\ISharedJsService.cs") }
                                        }
                                    },
                                    "PathServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces") },
                                        "ISharedPathService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces\\ISharedPathService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces\\ISharedPathService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\PathServiceInterfaces\\ISharedPathService.cs") }
                                        }
                                    },
                                    "RegexServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces") },
                                        "ISharedRegexService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces\\ISharedRegexService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces\\ISharedRegexService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\RegexServiceInterfaces\\ISharedRegexService.cs") }
                                        }
                                    },
                                    "SerializerServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces") },
                                        "ISharedXmlSerializerService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces\\ISharedXmlSerializerService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces\\ISharedXmlSerializerService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\SerializerServiceInterfaces\\ISharedXmlSerializerService.cs") }
                                        }
                                    },
                                    "TemplateServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces") },
                                        "ISharedTemplateService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces\\ISharedTemplateService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces\\ISharedTemplateService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\TemplateServiceInterfaces\\ISharedTemplateService.cs") }
                                        }
                                    },
                                    "UrlServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces") },
                                        "ISharedUrlService.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces\\ISharedUrlService.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces\\ISharedUrlService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\UrlServiceInterfaces\\ISharedUrlService.cs") }
                                        }
                                    },
                                    "__Services_Groups_0_Name__ServiceInterfaces": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces") },
                                        "IShared__Services_Name__Service.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces\\IShared__Services_Name__Service.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces\\IShared__Services_Name__Service.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\Interfaces\\ServiceInterfaces\\__Services_Groups_0_Name__ServiceInterfaces\\IShared__Services_Name__Service.cs") }
                                        }
                                    }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\obj") }
                            },
                            "SharedLibrary.Application.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\SharedLibrary.Application.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\SharedLibrary.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\SharedLibrary.Application.csproj") }
                            },
                            "StringEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums") },
                                "ServiceLifetimeStringEnums": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums\\ServiceLifetimeStringEnums",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums\\ServiceLifetimeStringEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums\\ServiceLifetimeStringEnums") },
                                    "ServiceLifetimeStringEnum.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums\\ServiceLifetimeStringEnums\\ServiceLifetimeStringEnum.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums\\ServiceLifetimeStringEnums\\ServiceLifetimeStringEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\StringEnums\\ServiceLifetimeStringEnums\\ServiceLifetimeStringEnum.cs") }
                                    }
                                }
                            },
                            "TypeConverters": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\TypeConverters",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\TypeConverters") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\TypeConverters") },
                                "DescriptionEnumConverter.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\TypeConverters\\DescriptionEnumConverter.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\TypeConverters\\DescriptionEnumConverter.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Application\\TypeConverters\\DescriptionEnumConverter.cs") }
                                }
                            }
                        },
                        "SharedLibrary.Domain": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\bin") }
                            },
                            "Class1.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\Class1.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\Class1.cs") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\obj") }
                            },
                            "SharedLibrary.Domain.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\SharedLibrary.Domain.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\SharedLibrary.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Domain\\SharedLibrary.Domain.csproj") }
                            }
                        },
                        "SharedLibrary.Infrastructure": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\obj") }
                            },
                            "Services": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services") },
                                "AssemblyServices": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\AssemblyServices",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\AssemblyServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\AssemblyServices") },
                                    "SharedAssemblyService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\AssemblyServices\\SharedAssemblyService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\AssemblyServices\\SharedAssemblyService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\AssemblyServices\\SharedAssemblyService.cs") }
                                    }
                                },
                                "EvalServices": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\EvalServices",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\EvalServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\EvalServices") },
                                    "SharedEvalService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\EvalServices\\SharedEvalService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\EvalServices\\SharedEvalService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\EvalServices\\SharedEvalService.cs") }
                                    }
                                },
                                "RegexServices": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\RegexServices",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\RegexServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\RegexServices") },
                                    "SharedRegexService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\RegexServices\\SharedRegexService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\RegexServices\\SharedRegexService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\RegexServices\\SharedRegexService.cs") }
                                    }
                                },
                                "SerializerServices": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\SerializerServices",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\SerializerServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\SerializerServices") },
                                    "SharedXmlSerializerService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\SerializerServices\\SharedXmlSerializerService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\SerializerServices\\SharedXmlSerializerService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\SerializerServices\\SharedXmlSerializerService.cs") }
                                    }
                                },
                                "UrlServices": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\UrlServices",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\UrlServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\UrlServices") },
                                    "SharedUrlService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\UrlServices\\SharedUrlService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\UrlServices\\SharedUrlService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\UrlServices\\SharedUrlService.cs") }
                                    }
                                },
                                "__Services_Groups_00_Name__Services": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\__Services_Groups_00_Name__Services",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\__Services_Groups_00_Name__Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\__Services_Groups_00_Name__Services") },
                                    "Shared__Services_Name__Service_Gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\__Services_Groups_00_Name__Services\\Shared__Services_Name__Service_Gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\__Services_Groups_00_Name__Services\\Shared__Services_Name__Service_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\Services\\__Services_Groups_00_Name__Services\\Shared__Services_Name__Service_Gen_.cs") }
                                    }
                                }
                            },
                            "SharedLibrary.Infrastructure.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\SharedLibrary.Infrastructure.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\SharedLibrary.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Library\\Shared\\SharedLibrary.Infrastructure\\SharedLibrary.Infrastructure.csproj") }
                            }
                        }
                    }
                },
                "Presentation": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation") },
                    "Presentation.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Class1.cs") }
                        },
                        "Interfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces") },
                            "TranslationUiServiceInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces\\TranslationUiServiceInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces\\TranslationUiServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces\\TranslationUiServiceInterfaces") },
                                "ITranslationUiService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces\\TranslationUiServiceInterfaces\\ITranslationUiService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces\\TranslationUiServiceInterfaces\\ITranslationUiService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Interfaces\\TranslationUiServiceInterfaces\\ITranslationUiService.cs") }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\obj") }
                        },
                        "Presentation.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Presentation.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Presentation.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Application\\Presentation.Application.csproj") }
                        }
                    },
                    "Presentation.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\bin") }
                        },
                        "Class1.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Class1.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Class1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Class1.cs") }
                        },
                        "Entities": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities") },
                            "LocalizationEntryEntity.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities\\LocalizationEntryEntity.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities\\LocalizationEntryEntity.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities\\LocalizationEntryEntity.cs") }
                            },
                            "LocalizationPluralFormEntity.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities\\LocalizationPluralFormEntity.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities\\LocalizationPluralFormEntity.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Entities\\LocalizationPluralFormEntity.cs") }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\obj") }
                        },
                        "Presentation.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Presentation.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Presentation.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Domain\\Presentation.Domain.csproj") }
                        }
                    },
                    "Presentation.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\bin") }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\obj") }
                        },
                        "Presentation.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Presentation.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Presentation.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Presentation.Infrastructure.csproj") }
                        },
                        "Services": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services") },
                            "TranslationServices": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services\\TranslationServices",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services\\TranslationServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services\\TranslationServices") },
                                "TranslationUiService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services\\TranslationServices\\TranslationUiService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services\\TranslationServices\\TranslationUiService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Presentation.Infrastructure\\Services\\TranslationServices\\TranslationUiService.cs") }
                                }
                            }
                        }
                    },
                    "Shared": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared") },
                        "SharedPresentation.Application": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\bin") }
                            },
                            "Interfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces") },
                                "MaterialServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\MaterialServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\MaterialServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\MaterialServiceInterfaces") },
                                    "IMaterialThemeSharedUiService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\MaterialServiceInterfaces\\IMaterialThemeSharedUiService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\MaterialServiceInterfaces\\IMaterialThemeSharedUiService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\MaterialServiceInterfaces\\IMaterialThemeSharedUiService.cs") }
                                    }
                                },
                                "TranslationServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\TranslationServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\TranslationServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\TranslationServiceInterfaces") },
                                    "ITranslationUiSharedService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\TranslationServiceInterfaces\\ITranslationUiSharedService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\TranslationServiceInterfaces\\ITranslationUiSharedService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\Interfaces\\TranslationServiceInterfaces\\ITranslationUiSharedService.cs") }
                                    }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\obj") }
                            },
                            "SharedPresentation.Application.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\SharedPresentation.Application.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\SharedPresentation.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Application\\SharedPresentation.Application.csproj") }
                            }
                        },
                        "SharedPresentation.Domain": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\bin") }
                            },
                            "Models": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models") },
                                "LocalizationEntry.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models\\LocalizationEntry.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models\\LocalizationEntry.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models\\LocalizationEntry.cs") }
                                },
                                "LocalizationPluralForm.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models\\LocalizationPluralForm.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models\\LocalizationPluralForm.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\Models\\LocalizationPluralForm.cs") }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\obj") }
                            },
                            "SharedPresentation.Domain.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\SharedPresentation.Domain.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\SharedPresentation.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Domain\\SharedPresentation.Domain.csproj") }
                            }
                        },
                        "SharedPresentation.Infrastructure": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure") },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\bin") }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\obj") }
                            },
                            "Services": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services") },
                                "MaterialServices": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\MaterialServices",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\MaterialServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\MaterialServices") },
                                    "MaterialThemeSharedUiService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\MaterialServices\\MaterialThemeSharedUiService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\MaterialServices\\MaterialThemeSharedUiService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\MaterialServices\\MaterialThemeSharedUiService.cs") }
                                    }
                                },
                                "TranslationServices": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\TranslationServices",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\TranslationServices") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\TranslationServices") },
                                    "TranslationSharedUiService.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\TranslationServices\\TranslationSharedUiService.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\TranslationServices\\TranslationSharedUiService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\Services\\TranslationServices\\TranslationSharedUiService.cs") }
                                    }
                                }
                            },
                            "SharedPresentation.Infrastructure.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\SharedPresentation.Infrastructure.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\SharedPresentation.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Presentation\\Shared\\SharedPresentation.Infrastructure\\SharedPresentation.Infrastructure.csproj") }
                            }
                        }
                    }
                },
                "Shared": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared") },
                    "SharedCore.Application": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application") },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\bin") }
                        },
                        "Dtos": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos") },
                            "SettingsDtos": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos") },
                                "AppSettingsDto.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos\\AppSettingsDto.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos\\AppSettingsDto.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos\\AppSettingsDto.cs") }
                                },
                                "ProjectSettingsDto.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos\\ProjectSettingsDto.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos\\ProjectSettingsDto.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Dtos\\SettingsDtos\\ProjectSettingsDto.cs") }
                                }
                            }
                        },
                        "Interfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces") },
                            "SevriceInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces") },
                                "__Entities_Groups_00_Name__ServiceInterfaces": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces") },
                                    "IShared__Entities_Name__ApplicationService_Gen_.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_Gen_.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Interfaces\\SevriceInterfaces\\__Entities_Groups_00_Name__ServiceInterfaces\\IShared__Entities_Name__ApplicationService_Gen_.cs") }
                                    }
                                }
                            }
                        },
                        "Models": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models") },
                            "ReferenceModels": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\ReferenceModels",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\ReferenceModels") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\ReferenceModels") },
                                "EnumReferenceModel.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\ReferenceModels\\EnumReferenceModel.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\ReferenceModels\\EnumReferenceModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\ReferenceModels\\EnumReferenceModel.cs") }
                                }
                            },
                            "TextMessageProviderModels": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels") },
                                "TwilioModels": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels\\TwilioModels",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels\\TwilioModels") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels\\TwilioModels") },
                                    "TwilioVerifySettingModel.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels\\TwilioModels\\TwilioVerifySettingModel.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels\\TwilioModels\\TwilioVerifySettingModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Models\\TextMessageProviderModels\\TwilioModels\\TwilioVerifySettingModel.cs") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\obj") }
                        },
                        "Protos": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Protos",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Protos") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Protos") },
                            "greet.proto": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Protos\\greet.proto",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Protos\\greet.proto") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Protos\\greet.proto") }
                            }
                        },
                        "Services": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services") },
                            "__Entities_Groups_00_Name__Services": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services") },
                                "GreeterService.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services\\GreeterService.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services\\GreeterService.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services\\GreeterService.cs") }
                                },
                                "Shared__Entities_Name__ApplicationService_Gen_.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_Gen_.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_Gen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\Services\\__Entities_Groups_00_Name__Services\\Shared__Entities_Name__ApplicationService_Gen_.cs") }
                                }
                            }
                        },
                        "SharedCore.Application.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\SharedCore.Application.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\SharedCore.Application.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Application\\SharedCore.Application.csproj") }
                        }
                    },
                    "SharedCore.Domain": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain") },
                        "Attributes": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes") },
                            "ServiceAttributes": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes\\ServiceAttributes",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes\\ServiceAttributes") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes\\ServiceAttributes") },
                                "ServiceLifetimeAttribute.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes\\ServiceAttributes\\ServiceLifetimeAttribute.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes\\ServiceAttributes\\ServiceLifetimeAttribute.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Attributes\\ServiceAttributes\\ServiceLifetimeAttribute.cs") }
                                }
                            }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\bin") }
                        },
                        "Enums": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums") },
                            "AddressEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AddressEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AddressEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AddressEnums") },
                                "AddressEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AddressEnums\\AddressEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AddressEnums\\AddressEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AddressEnums\\AddressEnum.cs") }
                                }
                            },
                            "AgeEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AgeEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AgeEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AgeEnums") },
                                "AgeCategoryEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AgeEnums\\AgeCategoryEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AgeEnums\\AgeCategoryEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AgeEnums\\AgeCategoryEnum.cs") }
                                }
                            },
                            "AssetEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AssetEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AssetEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AssetEnums") },
                                "AssetAsDocumentEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AssetEnums\\AssetAsDocumentEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AssetEnums\\AssetAsDocumentEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\AssetEnums\\AssetAsDocumentEnum.cs") }
                                }
                            },
                            "FamilyEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\FamilyEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\FamilyEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\FamilyEnums") },
                                "FamilyRelationEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\FamilyEnums\\FamilyRelationEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\FamilyEnums\\FamilyRelationEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\FamilyEnums\\FamilyRelationEnum.cs") }
                                }
                            },
                            "GenderEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\GenderEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\GenderEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\GenderEnums") },
                                "GenderEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\GenderEnums\\GenderEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\GenderEnums\\GenderEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\GenderEnums\\GenderEnum.cs") }
                                }
                            },
                            "HouseholdEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\HouseholdEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\HouseholdEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\HouseholdEnums") },
                                "HouseholdRoleEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\HouseholdEnums\\HouseholdRoleEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\HouseholdEnums\\HouseholdRoleEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\HouseholdEnums\\HouseholdRoleEnum.cs") }
                                }
                            },
                            "JobEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums") },
                                "JobCategoryEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobCategoryEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobCategoryEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobCategoryEnum.cs") }
                                },
                                "JobRoleEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobRoleEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobRoleEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobRoleEnum.cs") }
                                },
                                "JobTitleEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobTitleEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobTitleEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\JobEnums\\JobTitleEnum.cs") }
                                }
                            },
                            "MessageEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums") },
                                "MessageStateEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\MessageStateEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\MessageStateEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\MessageStateEnum.cs") }
                                },
                                "NotificationIconEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\NotificationIconEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\NotificationIconEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\NotificationIconEnum.cs") }
                                },
                                "OnlineEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\OnlineEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\OnlineEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\MessageEnums\\OnlineEnum.cs") }
                                }
                            },
                            "PregnancyEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums") },
                                "GerminalStageEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums\\GerminalStageEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums\\GerminalStageEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums\\GerminalStageEnum.cs") }
                                },
                                "PrenatalStageEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums\\PrenatalStageEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums\\PrenatalStageEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\PregnancyEnums\\PrenatalStageEnum.cs") }
                                }
                            },
                            "ProgrammingLanguageEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\ProgrammingLanguageEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\ProgrammingLanguageEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\ProgrammingLanguageEnums") },
                                "ClientWebProgrammingLanguageEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\ProgrammingLanguageEnums\\ClientWebProgrammingLanguageEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\ProgrammingLanguageEnums\\ClientWebProgrammingLanguageEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\ProgrammingLanguageEnums\\ClientWebProgrammingLanguageEnum.cs") }
                                }
                            },
                            "RelationshipEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\RelationshipEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\RelationshipEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\RelationshipEnums") },
                                "RelationshipEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\RelationshipEnums\\RelationshipEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\RelationshipEnums\\RelationshipEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\RelationshipEnums\\RelationshipEnum.cs") }
                                }
                            },
                            "SecurityEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SecurityEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SecurityEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SecurityEnums") },
                                "ViewableByEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SecurityEnums\\ViewableByEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SecurityEnums\\ViewableByEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SecurityEnums\\ViewableByEnum.cs") }
                                }
                            },
                            "SurveyEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums") },
                                "QuestionEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\QuestionEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\QuestionEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\QuestionEnum.cs") }
                                },
                                "ServerProgrammingLanguageEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\ServerProgrammingLanguageEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\ServerProgrammingLanguageEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\ServerProgrammingLanguageEnum.cs") }
                                },
                                "SurveyQuestionAnswerEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\SurveyQuestionAnswerEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\SurveyQuestionAnswerEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\SurveyEnums\\SurveyQuestionAnswerEnum.cs") }
                                }
                            },
                            "UserEnums": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums") },
                                "UserActionEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserActionEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserActionEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserActionEnum.cs") }
                                },
                                "UserGroupRoleEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserGroupRoleEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserGroupRoleEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserGroupRoleEnum.cs") }
                                },
                                "UserReactionEnum.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserReactionEnum.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserReactionEnum.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Enums\\UserEnums\\UserReactionEnum.cs") }
                                }
                            }
                        },
                        "Interfaces": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces") },
                            "ModelInterfaces": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces") },
                                "IAuthoredAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IAuthoredAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IAuthoredAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IAuthoredAt.cs") }
                                },
                                "IAuthoredBy.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IAuthoredBy.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IAuthoredBy.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IAuthoredBy.cs") }
                                },
                                "ICanAdd.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanAdd.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanAdd.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanAdd.cs") }
                                },
                                "ICanDelete.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanDelete.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanDelete.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanDelete.cs") }
                                },
                                "ICanRead.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanRead.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanRead.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanRead.cs") }
                                },
                                "ICanUpdate.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanUpdate.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanUpdate.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICanUpdate.cs") }
                                },
                                "ICreatedAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedAt.cs") }
                                },
                                "ICreatedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedAtOptional.cs") }
                                },
                                "ICreatedBy.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedBy.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedBy.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedBy.cs") }
                                },
                                "ICreatedByOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedByOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedByOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ICreatedByOptional.cs") }
                                },
                                "IDescription.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDescription.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDescription.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDescription.cs") }
                                },
                                "IDescriptionHtml.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDescriptionHtml.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDescriptionHtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDescriptionHtml.cs") }
                                },
                                "IDisliked.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDisliked.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDisliked.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDisliked.cs") }
                                },
                                "IDislikedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDislikedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDislikedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IDislikedAtOptional.cs") }
                                },
                                "IEditedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEditedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEditedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEditedAtOptional.cs") }
                                },
                                "IEndAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEndAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEndAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEndAt.cs") }
                                },
                                "IEndedOn.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEndedOn.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEndedOn.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IEndedOn.cs") }
                                },
                                "IFromUser.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IFromUser.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IFromUser.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IFromUser.cs") }
                                },
                                "IGlobalId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IGlobalId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IGlobalId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IGlobalId.cs") }
                                },
                                "IHtml.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IHtml.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IHtml.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IHtml.cs") }
                                },
                                "IHtmlOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IHtmlOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IHtmlOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IHtmlOptional.cs") }
                                },
                                "IJoinedAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJoinedAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJoinedAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJoinedAt.cs") }
                                },
                                "IJoinedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJoinedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJoinedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJoinedAtOptional.cs") }
                                },
                                "IJson.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJson.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJson.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJson.cs") }
                                },
                                "IJsonOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJsonOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJsonOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IJsonOptional.cs") }
                                },
                                "ILaughedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILaughedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILaughedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILaughedAtOptional.cs") }
                                },
                                "ILeftAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILeftAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILeftAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILeftAt.cs") }
                                },
                                "ILeftAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILeftAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILeftAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILeftAtOptional.cs") }
                                },
                                "ILiked.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILiked.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILiked.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILiked.cs") }
                                },
                                "ILikedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILikedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILikedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILikedAtOptional.cs") }
                                },
                                "ILocalId.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILocalId.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILocalId.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ILocalId.cs") }
                                },
                                "IOwnedAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedAt.cs") }
                                },
                                "IOwnedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedAtOptional.cs") }
                                },
                                "IOwnedBy.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedBy.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedBy.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedBy.cs") }
                                },
                                "IOwnedByOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedByOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedByOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IOwnedByOptional.cs") }
                                },
                                "IPublished.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IPublished.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IPublished.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IPublished.cs") }
                                },
                                "IRead.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRead.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRead.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRead.cs") }
                                },
                                "IReadAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IReadAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IReadAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IReadAtOptional.cs") }
                                },
                                "IRequestedAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedAt.cs") }
                                },
                                "IRequestedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedAtOptional.cs") }
                                },
                                "IRequestedBy.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedBy.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedBy.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedBy.cs") }
                                },
                                "IRequestedByOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedByOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedByOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestedByOptional.cs") }
                                },
                                "IRequestReceivedByOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestReceivedByOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestReceivedByOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IRequestReceivedByOptional.cs") }
                                },
                                "ISentAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentAtOptional.cs") }
                                },
                                "ISentByOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentByOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentByOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentByOptional.cs") }
                                },
                                "ISentTo.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentTo.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentTo.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISentTo.cs") }
                                },
                                "IShocked.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IShocked.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IShocked.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IShocked.cs") }
                                },
                                "IShockedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IShockedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IShockedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IShockedAtOptional.cs") }
                                },
                                "ISmiledAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISmiledAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISmiledAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\ISmiledAtOptional.cs") }
                                },
                                "IStartAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IStartAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IStartAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IStartAt.cs") }
                                },
                                "IStartedOnOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IStartedOnOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IStartedOnOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IStartedOnOptional.cs") }
                                },
                                "IToUser.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IToUser.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IToUser.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IToUser.cs") }
                                },
                                "IUpdated.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdated.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdated.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdated.cs") }
                                },
                                "IUpdatedAt.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedAt.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedAt.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedAt.cs") }
                                },
                                "IUpdatedAtOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedAtOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedAtOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedAtOptional.cs") }
                                },
                                "IUpdatedBy.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedBy.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedBy.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedBy.cs") }
                                },
                                "IUpdatedByOptional.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedByOptional.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedByOptional.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUpdatedByOptional.cs") }
                                },
                                "IUrl.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUrl.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUrl.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\Interfaces\\ModelInterfaces\\IUrl.cs") }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\obj") }
                        },
                        "SharedCore.Domain.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\SharedCore.Domain.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\SharedCore.Domain.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Domain\\SharedCore.Domain.csproj") }
                        }
                    },
                    "SharedCore.Infrastructure": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure") },
                        "AppSettings": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings") },
                            "ConnectionStringsSetting.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\ConnectionStringsSetting.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\ConnectionStringsSetting.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\ConnectionStringsSetting.cs") }
                            },
                            "SerilogSetting.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\SerilogSetting.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\SerilogSetting.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\SerilogSetting.cs") }
                            },
                            "SharedAppsettings.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\SharedAppsettings.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\SharedAppsettings.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\AppSettings\\SharedAppsettings.cs") }
                            }
                        },
                        "bin": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\bin",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\bin") }
                        },
                        "Extensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions") },
                            "MicrosoftExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions") },
                                "AspNetCoreExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") },
                                    "WebAssemblyHostBuilderExtensions": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions") },
                                        "BuildClientExtension.cs": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions\\BuildClientExtension.cs",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions\\BuildClientExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\WebAssemblyHostBuilderExtensions\\BuildClientExtension.cs") }
                                        }
                                    }
                                },
                                "IServiceCollectionExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") },
                                    "AddNewtonsoftJsonExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddNewtonsoftJsonExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddNewtonsoftJsonExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddNewtonsoftJsonExtension.cs") }
                                    },
                                    "AddServicesExtension.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddServicesExtension.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddServicesExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddServicesExtension.cs") }
                                    }
                                }
                            }
                        },
                        "obj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\obj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\obj") }
                        },
                        "SharedCore.Infrastructure.csproj": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\SharedCore.Infrastructure.csproj",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\SharedCore.Infrastructure.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\Shared\\SharedCore.Infrastructure\\SharedCore.Infrastructure.csproj") }
                        }
                    }
                },
                "SharedPackages": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\SharedPackages",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\SharedPackages") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\SharedPackages") },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Shared\\SharedPackages\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Shared\\SharedPackages\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Shared\\SharedPackages\\obj") }
                    }
                }
            },
            "sharedAppsettings.Development.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\sharedAppsettings.Development.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\sharedAppsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\sharedAppsettings.Development.json") }
            },
            "sharedAppsettings.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\sharedAppsettings.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\sharedAppsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\sharedAppsettings.json") }
            },
            "Tests": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests") },
                "ArchTests": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\ArchTests",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\ArchTests") },
                    "ArchTests.csproj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\ArchTests\\ArchTests.csproj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\ArchTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\ArchTests.csproj") }
                    },
                    "bin": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\ArchTests\\bin",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\bin") }
                    },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\ArchTests\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\obj") }
                    },
                    "UnitTest1.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\ArchTests\\UnitTest1.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\ArchTests\\UnitTest1.cs") }
                    }
                },
                "IntegrationTests": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\IntegrationTests",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests") },
                    "bin": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\bin",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\bin") }
                    },
                    "IntegrationTests.csproj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\IntegrationTests.csproj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\IntegrationTests.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\IntegrationTests.csproj") }
                    },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\obj") }
                    },
                    "UnitTest1.cs": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\UnitTest1.cs",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\UnitTest1.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\IntegrationTests\\UnitTest1.cs") }
                    }
                },
                "__Entities_BoundedContext_Name__.ArchTests": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests") },
                    "DbContexts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\DbContexts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\DbContexts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\DbContexts") },
                        "AuthDbContext.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\DbContexts\\AuthDbContext.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\DbContexts\\AuthDbContext.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\DbContexts\\AuthDbContext.cs") }
                        }
                    },
                    "EntityTypeConfigurations": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations") },
                        "RoleClaimEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\RoleClaimEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\RoleClaimEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\RoleClaimEntityTypeConfiguration.cs") }
                        },
                        "RoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\RoleEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\RoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\RoleEntityTypeConfiguration.cs") }
                        },
                        "UserClaimEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserClaimEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserClaimEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserClaimEntityTypeConfiguration.cs") }
                        },
                        "UserEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserEntityTypeConfiguration.cs") }
                        },
                        "UserGroupEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupEntityTypeConfiguration.cs") }
                        },
                        "UserGroupRequestEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupRequestEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupRequestEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupRequestEntityTypeConfiguration.cs") }
                        },
                        "UserGroupRoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupRoleEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupRoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserGroupRoleEntityTypeConfiguration.cs") }
                        },
                        "UserLoginEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserLoginEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserLoginEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserLoginEntityTypeConfiguration.cs") }
                        },
                        "UserTokenEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserTokenEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserTokenEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\UserTokenEntityTypeConfiguration.cs") }
                        },
                        "User_RoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_RoleEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_RoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_RoleEntityTypeConfiguration.cs") }
                        },
                        "User_UserGroupEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_UserGroupEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_UserGroupEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_UserGroupEntityTypeConfiguration.cs") }
                        },
                        "User_UserGroupRoleEntityTypeConfiguration.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_UserGroupRoleEntityTypeConfiguration.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_UserGroupRoleEntityTypeConfiguration.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\User_UserGroupRoleEntityTypeConfiguration.cs") }
                        },
                        "__Entities_Groups_00_Name__EntityTypeConfigurations": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations") },
                            "__Entities_Name__EntityTypeConfiguration_AuthGen_.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_AuthGen_.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\EntityTypeConfigurations\\__Entities_Groups_00_Name__EntityTypeConfigurations\\__Entities_Name__EntityTypeConfiguration_AuthGen_.cs") }
                            }
                        }
                    },
                    "Extensions": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions") },
                        "MicrosoftExtensions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions") },
                            "AspNetCoreExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions") },
                                "IApplicationBuilderExtensions": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions") },
                                    "UseAuthServerExtensions.cs": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseAuthServerExtensions.cs",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseAuthServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\AspNetCoreExtensions\\IApplicationBuilderExtensions\\UseAuthServerExtensions.cs") }
                                    }
                                }
                            },
                            "IServiceCollectionExtensions": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions") },
                                "AddAuthDbContextPoolsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextPoolsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextPoolsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextPoolsExtension.cs") }
                                },
                                "AddAuthDbContextsExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextsExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextsExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthDbContextsExtension.cs") }
                                },
                                "AddAuthenticationExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthenticationExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthenticationExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthenticationExtension.cs") }
                                },
                                "AddAuthServerExtensions.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthServerExtensions.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddAuthServerExtensions.cs") }
                                },
                                "AddClientAuthServerExtensions.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddClientAuthServerExtensions.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddClientAuthServerExtensions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddClientAuthServerExtensions.cs") }
                                },
                                "AddIdentityExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityExtension.cs") }
                                },
                                "AddIdentityServerAuthenticationExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityServerAuthenticationExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityServerAuthenticationExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddIdentityServerAuthenticationExtension.cs") }
                                },
                                "AddOpenIddictDbContextExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextExtension.cs") }
                                },
                                "AddOpenIddictDbContextPoolExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextPoolExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextPoolExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictDbContextPoolExtension.cs") }
                                },
                                "AddOpenIddictExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddOpenIddictExtension.cs") }
                                },
                                "AddStoresExtension.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddStoresExtension.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddStoresExtension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Extensions\\MicrosoftExtensions\\IServiceCollectionExtensions\\AddStoresExtension.cs") }
                                }
                            }
                        }
                    },
                    "Identity": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity") },
                        "CustomRoleStore.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity\\CustomRoleStore.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity\\CustomRoleStore.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity\\CustomRoleStore.cs") }
                        },
                        "CustomUserStore.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity\\CustomUserStore.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity\\CustomUserStore.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Identity\\CustomUserStore.cs") }
                        }
                    },
                    "OpenIdDict": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict") },
                        "CustomOpenIdApplication.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdApplication.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdApplication.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdApplication.cs") }
                        },
                        "CustomOpenIdAuthorization.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdAuthorization.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdAuthorization.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdAuthorization.cs") }
                        },
                        "CustomOpenIdScope.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdScope.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdScope.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdScope.cs") }
                        },
                        "CustomOpenIdToken.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdToken.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdToken.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\CustomOpenIdToken.cs") }
                        },
                        "TokenProviders": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\TokenProviders",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\TokenProviders") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\TokenProviders") },
                            "CustomemailconfirmationTokenProvider.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\TokenProviders\\CustomemailconfirmationTokenProvider.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\TokenProviders\\CustomemailconfirmationTokenProvider.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\OpenIdDict\\TokenProviders\\CustomemailconfirmationTokenProvider.cs") }
                            }
                        }
                    },
                    "Repositories": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories") },
                        "RoleClaimRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\RoleClaimRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\RoleClaimRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\RoleClaimRepository.cs") }
                        },
                        "RoleRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\RoleRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\RoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\RoleRepository.cs") }
                        },
                        "UserClaimRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserClaimRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserClaimRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserClaimRepository.cs") }
                        },
                        "UserGroupRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRepository.cs") }
                        },
                        "UserGroupRequestRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRequestRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRequestRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRequestRepository.cs") }
                        },
                        "UserGroupRoleRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRoleRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserGroupRoleRepository.cs") }
                        },
                        "UserLoginRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserLoginRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserLoginRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserLoginRepository.cs") }
                        },
                        "UserRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserRepository.cs") }
                        },
                        "UserTokenRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserTokenRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserTokenRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\UserTokenRepository.cs") }
                        },
                        "User_RoleRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_RoleRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_RoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_RoleRepository.cs") }
                        },
                        "User_UserGroupRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_UserGroupRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_UserGroupRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_UserGroupRepository.cs") }
                        },
                        "User_UserGroupRoleRepository.cs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_UserGroupRoleRepository.cs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_UserGroupRoleRepository.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\User_UserGroupRoleRepository.cs") }
                        },
                        "__Entities_Groups_00_Name__Repositories": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\__Entities_Groups_00_Name__Repositories",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\__Entities_Groups_00_Name__Repositories") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\__Entities_Groups_00_Name__Repositories") },
                            "__Entities_Name__Repository_AuthGen_.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_AuthGen_.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_AuthGen_.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tests\\__Entities_BoundedContext_Name__.ArchTests\\Repositories\\__Entities_Groups_00_Name__Repositories\\__Entities_Name__Repository_AuthGen_.cs") }
                            }
                        }
                    }
                }
            },
            "tools": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools") },
                "extensions": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions") },
                    "vs extensions": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions") },
                        "CodeGenerator": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator") },
                            ".vs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\.vs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\.vs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\.vs") }
                            },
                            "bin": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\bin",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\bin") }
                            },
                            "CodeGenerator.csproj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.csproj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.csproj") }
                            },
                            "CodeGenerator.csproj.user": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.csproj.user",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.csproj.user") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.csproj.user") }
                            },
                            "CodeGenerator.sln": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.sln",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.sln") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGenerator.sln") }
                            },
                            "CodeGeneratorPackage.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGeneratorPackage.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGeneratorPackage.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\CodeGeneratorPackage.cs") }
                            },
                            "Commands": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Commands",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Commands") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Commands") },
                                "GenerateCode.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Commands\\GenerateCode.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Commands\\GenerateCode.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Commands\\GenerateCode.cs") }
                                }
                            },
                            "Common": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Common",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Common") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Common") },
                                "ContentType.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Common\\ContentType.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Common\\ContentType.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Common\\ContentType.cs") }
                                }
                            },
                            "GenerateCodeHandler.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\GenerateCodeHandler.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\GenerateCodeHandler.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\GenerateCodeHandler.cs") }
                            },
                            "Helpers": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Helpers",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Helpers") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Helpers") },
                                "PathHelper.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Helpers\\PathHelper.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Helpers\\PathHelper.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Helpers\\PathHelper.cs") }
                                }
                            },
                            "obj": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\obj",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\obj") }
                            },
                            "Options": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options") },
                                "BaseOptionPage.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\BaseOptionPage.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\BaseOptionPage.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\BaseOptionPage.cs") }
                                },
                                "BaseOptionsModel.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\BaseOptionsModel.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\BaseOptionsModel.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\BaseOptionsModel.cs") }
                                },
                                "DialogPageProvider.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\DialogPageProvider.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\DialogPageProvider.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\DialogPageProvider.cs") }
                                },
                                "GeneralOptions.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\GeneralOptions.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\GeneralOptions.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Options\\GeneralOptions.cs") }
                                }
                            },
                            "Properties": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Properties",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Properties") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Properties") },
                                "AssemblyInfo.cs": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Properties\\AssemblyInfo.cs",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Properties\\AssemblyInfo.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Properties\\AssemblyInfo.cs") }
                                }
                            },
                            "Resources": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources") },
                                "GenerateCode.png": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources\\GenerateCode.png",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources\\GenerateCode.png") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources\\GenerateCode.png") }
                                },
                                "GenerateResource.png": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources\\GenerateResource.png",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources\\GenerateResource.png") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\Resources\\GenerateResource.png") }
                                }
                            },
                            "source.extension.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\source.extension.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\source.extension.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\source.extension.cs") }
                            },
                            "source.extension.vsixmanifest": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\source.extension.vsixmanifest",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\source.extension.vsixmanifest") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\source.extension.vsixmanifest") }
                            },
                            "VSCommandTable.cs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\VSCommandTable.cs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\VSCommandTable.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\VSCommandTable.cs") }
                            },
                            "VSCommandTable.vsct": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\VSCommandTable.vsct",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\VSCommandTable.vsct") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs extensions\\CodeGenerator\\VSCommandTable.vsct") }
                            }
                        }
                    },
                    "vs-code-extensions": {
                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions") },
                        "code-genenator3": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3") },
                            ".gitignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.gitignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.gitignore") }
                            },
                            ".vscode": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode") },
                                "launch.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\launch.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\launch.json") }
                                },
                                "settings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\settings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\settings.json") }
                                },
                                "tasks.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\tasks.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscode\\tasks.json") }
                                }
                            },
                            ".vscodeignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscodeignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscodeignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\.vscodeignore") }
                            },
                            "client": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client") },
                                "node_modules": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\node_modules",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\node_modules") }
                                },
                                "package-lock.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\package-lock.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\package-lock.json") }
                                },
                                "package.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\package.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\package.json") }
                                },
                                "src": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\src",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\src") },
                                    "extension.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\src\\extension.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\src\\extension.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\src\\extension.ts") }
                                    }
                                },
                                "tsconfig.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\tsconfig.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\client\\tsconfig.json") }
                                }
                            },
                            "node_modules": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\node_modules",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\node_modules") }
                            },
                            "package-lock.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\package-lock.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\package-lock.json") }
                            },
                            "package.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\package.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\package.json") }
                            },
                            "README.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\README.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\README.md") }
                            },
                            "server": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server") },
                                "node_modules": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\node_modules",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\node_modules") }
                                },
                                "package-lock.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\package-lock.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\package-lock.json") }
                                },
                                "package.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\package.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\package.json") }
                                },
                                "src": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src") },
                                    "embeddedSupport.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\embeddedSupport.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\embeddedSupport.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\embeddedSupport.ts") }
                                    },
                                    "languageModelCache.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\languageModelCache.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\languageModelCache.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\languageModelCache.ts") }
                                    },
                                    "languageModes.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\languageModes.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\languageModes.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\languageModes.ts") }
                                    },
                                    "modes": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes") },
                                        "cssMode.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes\\cssMode.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes\\cssMode.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes\\cssMode.ts") }
                                        },
                                        "htmlMode.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes\\htmlMode.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes\\htmlMode.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\modes\\htmlMode.ts") }
                                        }
                                    },
                                    "server.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\server.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\server.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\src\\server.ts") }
                                    }
                                },
                                "tsconfig.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\tsconfig.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\server\\tsconfig.json") }
                                }
                            },
                            "syntaxes": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\syntaxes",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\syntaxes") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\syntaxes") },
                                "html1.tmLanguage.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\syntaxes\\html1.tmLanguage.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\syntaxes\\html1.tmLanguage.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\syntaxes\\html1.tmLanguage.json") }
                                }
                            },
                            "tsconfig.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\tsconfig.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\tsconfig.json") }
                            },
                            "tslint.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\tslint.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\tslint.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-genenator3\\tslint.json") }
                            }
                        },
                        "code-generator": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator") },
                            ".eslintrc.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.eslintrc.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.eslintrc.json") }
                            },
                            ".gitignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.gitignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.gitignore") }
                            },
                            ".vscode": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode") },
                                "extensions.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\extensions.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\extensions.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\extensions.json") }
                                },
                                "launch.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\launch.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\launch.json") }
                                },
                                "settings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\settings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\settings.json") }
                                },
                                "tasks.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\tasks.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscode\\tasks.json") }
                                }
                            },
                            ".vscodeignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscodeignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscodeignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\.vscodeignore") }
                            },
                            "build": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\build",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\build") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\build") },
                                "node-extension.webpack.config.js": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\build\\node-extension.webpack.config.js",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\build\\node-extension.webpack.config.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\build\\node-extension.webpack.config.js") }
                                }
                            },
                            "CHANGELOG.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\CHANGELOG.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\CHANGELOG.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\CHANGELOG.md") }
                            },
                            "dist": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\dist",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\dist") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\dist") }
                            },
                            "node_modules": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\node_modules",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\node_modules") }
                            },
                            "package-lock.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\package-lock.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\package-lock.json") }
                            },
                            "package.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\package.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\package.json") }
                            },
                            "README.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\README.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\README.md") }
                            },
                            "src": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src") },
                                "extension.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\extension.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\extension.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\extension.ts") }
                                },
                                "test": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test") },
                                    "runTest.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\runTest.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\runTest.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\runTest.ts") }
                                    },
                                    "suite": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite") },
                                        "extension.test.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite\\extension.test.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite\\extension.test.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite\\extension.test.ts") }
                                        },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\src\\test\\suite\\index.ts") }
                                        }
                                    }
                                }
                            },
                            "tsconfig.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\tsconfig.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\tsconfig.json") }
                            },
                            "vsc-extension-quickstart.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\vsc-extension-quickstart.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\vsc-extension-quickstart.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\code-generator\\vsc-extension-quickstart.md") }
                            }
                        },
                        "color-picker": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker") },
                            ".eslintignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintignore") }
                            },
                            ".eslintrc.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintrc.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintrc.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintrc.js") }
                            },
                            ".eslintrc.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintrc.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.eslintrc.json") }
                            },
                            ".gitignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.gitignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.gitignore") }
                            },
                            ".vscode": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode") },
                                "extensions.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\extensions.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\extensions.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\extensions.json") }
                                },
                                "launch.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\launch.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\launch.json") }
                                },
                                "settings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\settings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\settings.json") }
                                },
                                "tasks.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\tasks.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscode\\tasks.json") }
                                }
                            },
                            ".vscodeignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscodeignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscodeignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\.vscodeignore") }
                            },
                            "client": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client") },
                                "node_modules": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\node_modules",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\node_modules") }
                                },
                                "out": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\out",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\out") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\out") },
                                    "extension.js": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\out\\extension.js",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\out\\extension.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\out\\extension.js") }
                                    }
                                },
                                "package.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\package.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\package.json") }
                                },
                                "src": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\src",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\src") },
                                    "extension.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\src\\extension.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\src\\extension.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\src\\extension.ts") }
                                    }
                                },
                                "tsconfig.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\tsconfig.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\client\\tsconfig.json") }
                                }
                            },
                            "node_modules": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\node_modules",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\node_modules") }
                            },
                            "package.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\package.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\package.json") }
                            },
                            "README.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\README.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\README.md") }
                            },
                            "server": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server") },
                                "node_modules": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\node_modules",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\node_modules") }
                                },
                                "out": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out") },
                                    "IColors.js": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out\\IColors.js",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out\\IColors.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out\\IColors.js") }
                                    },
                                    "server.js": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out\\server.js",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out\\server.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\out\\server.js") }
                                    }
                                },
                                "package.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\package.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\package.json") }
                                },
                                "src": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\src",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\src") },
                                    "server.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\src\\server.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\src\\server.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\src\\server.ts") }
                                    }
                                },
                                "tsconfig.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\tsconfig.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\server\\tsconfig.json") }
                                }
                            },
                            "tsconfig.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\tsconfig.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\color-picker\\tsconfig.json") }
                            }
                        },
                        "files-and-folders-renamer": {
                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer") },
                            ".eslintrc.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.eslintrc.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.eslintrc.json") }
                            },
                            ".gitignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.gitignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.gitignore") }
                            },
                            ".vscode": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode") },
                                "extensions.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\extensions.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\extensions.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\extensions.json") }
                                },
                                "launch.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\launch.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\launch.json") }
                                },
                                "settings.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\settings.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\settings.json") }
                                },
                                "tasks.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\tasks.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscode\\tasks.json") }
                                }
                            },
                            ".vscodeignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscodeignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscodeignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\.vscodeignore") }
                            },
                            "CHANGELOG.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\CHANGELOG.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\CHANGELOG.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\CHANGELOG.md") }
                            },
                            "node_modules": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\node_modules",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\node_modules") }
                            },
                            "out": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out") },
                                "hello": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello") },
                                    "src": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src") },
                                        "extension.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\extension.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\extension.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\extension.js") }
                                        },
                                        "test": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test") },
                                            "runTest.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\runTest.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\runTest.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\runTest.js") }
                                            },
                                            "suite": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite") },
                                                "extension.test.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite\\extension.test.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite\\extension.test.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite\\extension.test.js") }
                                                },
                                                "index.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite\\index.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\hello\\src\\test\\suite\\index.js") }
                                                }
                                            }
                                        }
                                    }
                                },
                                "solid": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid") },
                                    "assets": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets") },
                                        "favicon.0e726a38.ico": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\favicon.0e726a38.ico",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\favicon.0e726a38.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\favicon.0e726a38.ico") }
                                        },
                                        "index.2d7b8374.css": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\index.2d7b8374.css",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\index.2d7b8374.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\index.2d7b8374.css") }
                                        },
                                        "index.cb6a5f35.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\index.cb6a5f35.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\index.cb6a5f35.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\index.cb6a5f35.js") }
                                        },
                                        "vendor.bced61aa.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\vendor.bced61aa.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\vendor.bced61aa.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\assets\\vendor.bced61aa.js") }
                                        }
                                    },
                                    "index.html": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\index.html",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\index.html") }
                                    },
                                    "src": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src") },
                                        "App.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\App.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\App.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\App.js") }
                                        },
                                        "components": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components") },
                                            "Checkbox.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\Checkbox.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\Checkbox.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\Checkbox.js") }
                                            },
                                            "FilledTextField.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\FilledTextField.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\FilledTextField.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\FilledTextField.js") }
                                            },
                                            "NumberInput.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\NumberInput.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\NumberInput.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\NumberInput.js") }
                                            },
                                            "OutlinedButton.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedButton.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedButton.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedButton.js") }
                                            },
                                            "OutlinedNumberInput.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedNumberInput.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedNumberInput.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedNumberInput.js") }
                                            },
                                            "OutlinedTextArea.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedTextArea.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedTextArea.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedTextArea.js") }
                                            },
                                            "OutlinedTextField.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedTextField.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedTextField.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\OutlinedTextField.js") }
                                            },
                                            "RadioButton.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\RadioButton.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\RadioButton.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\RadioButton.js") }
                                            },
                                            "TextButton.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\TextButton.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\TextButton.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\components\\TextButton.js") }
                                            }
                                        },
                                        "index.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\index.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\index.js") }
                                        },
                                        "Sidebar.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\Sidebar.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\Sidebar.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\Sidebar.js") }
                                        },
                                        "validation.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\validation.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\validation.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\src\\validation.js") }
                                        }
                                    },
                                    "vite": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite") },
                                        "plugins": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite\\plugins",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite\\plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite\\plugins") },
                                            "vite-plugin-custom.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite\\plugins\\vite-plugin-custom.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite\\plugins\\vite-plugin-custom.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite\\plugins\\vite-plugin-custom.js") }
                                            }
                                        }
                                    },
                                    "vite.config.js": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite.config.js",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite.config.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\solid\\vite.config.js") }
                                    }
                                },
                                "src": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src") },
                                    "extension.js": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\extension.js",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\extension.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\extension.js") }
                                    },
                                    "routes": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes") },
                                        "rename-files-and-folders": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders") },
                                            "events": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\events",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\events") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\events") },
                                                "index.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\events\\index.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\events\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\events\\index.js") }
                                                }
                                            },
                                            "index.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\index.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\index.js") }
                                            },
                                            "models": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models") },
                                                "rename-files-and-folders-content-diffs-by-line-number.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-content-diffs-by-line-number.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-content-diffs-by-line-number.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-content-diffs-by-line-number.js") }
                                                },
                                                "rename-files-and-folders-options.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-options.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-options.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-options.js") }
                                                },
                                                "rename-files-and-folders-preview-item.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-preview-item.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-preview-item.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-preview-item.js") }
                                                },
                                                "rename-files-and-folders-state.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-state.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-state.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-state.js") }
                                                }
                                            },
                                            "services": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services") },
                                                "diff.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services\\diff.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services\\diff.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services\\diff.js") }
                                                },
                                                "rename-files-and-folders.service.js": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services\\rename-files-and-folders.service.js",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services\\rename-files-and-folders.service.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\rename-files-and-folders\\services\\rename-files-and-folders.service.js") }
                                                }
                                            }
                                        },
                                        "sidebar": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\sidebar",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\sidebar") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\sidebar") },
                                            "index.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\sidebar\\index.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\sidebar\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\sidebar\\index.js") }
                                            }
                                        },
                                        "view-base.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\view-base.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\view-base.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\routes\\view-base.js") }
                                        }
                                    },
                                    "services": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\services",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\services") },
                                        "webview-service.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\services\\webview-service.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\services\\webview-service.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\services\\webview-service.js") }
                                        }
                                    },
                                    "test": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test") },
                                        "runTest.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\runTest.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\runTest.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\runTest.js") }
                                        },
                                        "suite": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite") },
                                            "extension.test.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite\\extension.test.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite\\extension.test.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite\\extension.test.js") }
                                            },
                                            "index.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite\\index.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\test\\suite\\index.js") }
                                            }
                                        }
                                    },
                                    "watch.js": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\watch.js",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\watch.js") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\out\\src\\watch.js") }
                                    }
                                }
                            },
                            "package-lock.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\package-lock.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\package-lock.json") }
                            },
                            "package.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\package.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\package.json") }
                            },
                            "README.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\README.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\README.md") }
                            },
                            "solid": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid") },
                                ".gitignore": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\.gitignore",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\.gitignore") }
                                },
                                "dist": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\dist",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\dist") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\dist") }
                                },
                                "index.html": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\index.html",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\index.html") }
                                },
                                "node_modules": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\node_modules",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\node_modules") }
                                },
                                "package-lock.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\package-lock.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\package-lock.json") }
                                },
                                "package.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\package.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\package.json") }
                                },
                                "pnpm-lock.yaml": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\pnpm-lock.yaml",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\pnpm-lock.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\pnpm-lock.yaml") }
                                },
                                "README.md": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\README.md",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\README.md") }
                                },
                                "src": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src") },
                                    "App.module.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\App.module.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\App.module.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\App.module.css") }
                                    },
                                    "App.tsx": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\App.tsx",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\App.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\App.tsx") }
                                    },
                                    "assets": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\assets",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\assets") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\assets") },
                                        "favicon.ico": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\assets\\favicon.ico",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\assets\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\assets\\favicon.ico") }
                                        }
                                    },
                                    "components": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components") },
                                        "Checkbox.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\Checkbox.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\Checkbox.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\Checkbox.tsx") }
                                        },
                                        "FilledTextField.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\FilledTextField.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\FilledTextField.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\FilledTextField.tsx") }
                                        },
                                        "NumberInput.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\NumberInput.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\NumberInput.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\NumberInput.tsx") }
                                        },
                                        "OutlinedButton.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedButton.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedButton.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedButton.tsx") }
                                        },
                                        "OutlinedNumberInput.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedNumberInput.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedNumberInput.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedNumberInput.tsx") }
                                        },
                                        "OutlinedTextArea.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedTextArea.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedTextArea.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedTextArea.tsx") }
                                        },
                                        "OutlinedTextField.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedTextField.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedTextField.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\OutlinedTextField.tsx") }
                                        },
                                        "RadioButton.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\RadioButton.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\RadioButton.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\RadioButton.tsx") }
                                        },
                                        "TextButton.tsx": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\TextButton.tsx",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\TextButton.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\components\\TextButton.tsx") }
                                        }
                                    },
                                    "global.d.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\global.d.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\global.d.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\global.d.ts") }
                                    },
                                    "index.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\index.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\index.scss") }
                                    },
                                    "index.tsx": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\index.tsx",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\index.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\index.tsx") }
                                    },
                                    "logo.svg": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\logo.svg",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\logo.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\logo.svg") }
                                    },
                                    "Sidebar.tsx": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\Sidebar.tsx",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\Sidebar.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\Sidebar.tsx") }
                                    },
                                    "styles": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles") },
                                        "material": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material") },
                                            "button": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\button",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\button") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\button") },
                                                "_index.scss": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\button\\_index.scss",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\button\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\button\\_index.scss") }
                                                }
                                            },
                                            "checkbox": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\checkbox",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\checkbox") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\checkbox") },
                                                "_index.scss": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\checkbox\\_index.scss",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\checkbox\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\checkbox\\_index.scss") }
                                                }
                                            },
                                            "radio-button": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\radio-button",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\radio-button") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\radio-button") },
                                                "_index.scss": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\radio-button\\_index.scss",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\radio-button\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\radio-button\\_index.scss") }
                                                }
                                            },
                                            "textfield": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\textfield",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\textfield") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\textfield") },
                                                "_index.scss": {
                                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\textfield\\_index.scss",
                                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\textfield\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\styles\\material\\textfield\\_index.scss") }
                                                }
                                            }
                                        }
                                    },
                                    "validation.tsx": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\validation.tsx",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\validation.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\src\\validation.tsx") }
                                    }
                                },
                                "tsconfig.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\tsconfig.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\tsconfig.json") }
                                },
                                "vite": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite") },
                                    "plugins": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite\\plugins",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite\\plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite\\plugins") },
                                        "vite-plugin-custom.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite\\plugins\\vite-plugin-custom.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite\\plugins\\vite-plugin-custom.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite\\plugins\\vite-plugin-custom.ts") }
                                        }
                                    }
                                },
                                "vite.config.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite.config.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite.config.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\solid\\vite.config.ts") }
                                }
                            },
                            "src": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src") },
                                "extension.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\extension.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\extension.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\extension.ts") }
                                },
                                "routes": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes") },
                                    "rename-files-and-folders": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders") },
                                        "events": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\events",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\events") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\events") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\events\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\events\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\events\\index.ts") }
                                            }
                                        },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\index.ts") }
                                        },
                                        "models": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models") },
                                            "rename-files-and-folders-content-diffs-by-line-number.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-content-diffs-by-line-number.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-content-diffs-by-line-number.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-content-diffs-by-line-number.ts") }
                                            },
                                            "rename-files-and-folders-options.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-options.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-options.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-options.ts") }
                                            },
                                            "rename-files-and-folders-preview-item.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-preview-item.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-preview-item.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-preview-item.ts") }
                                            },
                                            "rename-files-and-folders-state.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-state.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-state.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\models\\rename-files-and-folders-state.ts") }
                                            }
                                        },
                                        "services": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services") },
                                            "diff.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services\\diff.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services\\diff.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services\\diff.ts") }
                                            },
                                            "rename-files-and-folders.service.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services\\rename-files-and-folders.service.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services\\rename-files-and-folders.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\rename-files-and-folders\\services\\rename-files-and-folders.service.ts") }
                                            }
                                        }
                                    },
                                    "sidebar": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\sidebar",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\sidebar") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\sidebar") },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\sidebar\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\sidebar\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\sidebar\\index.ts") }
                                        }
                                    },
                                    "view-base.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\view-base.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\view-base.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\routes\\view-base.ts") }
                                    }
                                },
                                "services": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\services",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\services") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\services") },
                                    "webview-service.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\services\\webview-service.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\services\\webview-service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\services\\webview-service.ts") }
                                    }
                                },
                                "styles": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles") },
                                    "reset.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles\\reset.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles\\reset.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles\\reset.css") }
                                    },
                                    "vscode.css": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles\\vscode.css",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles\\vscode.css") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\styles\\vscode.css") }
                                    }
                                },
                                "test": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test") },
                                    "runTest.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\runTest.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\runTest.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\runTest.ts") }
                                    },
                                    "suite": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite") },
                                        "extension.test.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite\\extension.test.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite\\extension.test.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite\\extension.test.ts") }
                                        },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\test\\suite\\index.ts") }
                                        }
                                    }
                                },
                                "watch.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\watch.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\watch.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\src\\watch.ts") }
                                }
                            },
                            "tsconfig.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\tsconfig.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\tsconfig.json") }
                            },
                            "vsc-extension-quickstart.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\vsc-extension-quickstart.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\vsc-extension-quickstart.md") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\tools\\extensions\\vs-code-extensions\\files-and-folders-renamer\\vsc-extension-quickstart.md") }
                            }
                        }
                    }
                }
            },
            "Tye": {
                toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tye",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tye") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tye") },
                "bin": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tye\\bin",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tye\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tye\\bin") }
                },
                "components": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tye\\components",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tye\\components") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tye\\components") }
                },
                "configurations": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tye\\configurations",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tye\\configurations") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tye\\configurations") }
                },
                "obj": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tye\\obj",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tye\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tye\\obj") }
                },
                "Program.cs": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tye\\Program.cs",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tye\\Program.cs") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tye\\Program.cs") }
                },
                "Tye.csproj": {
                    toAbsolutePath:()=> "C:\\app\\languages\\csharp\\Tye\\Tye.csproj",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\csharp\\Tye\\Tye.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\csharp\\Tye\\Tye.csproj") }
                }
            }
        },
        "dart": {
            toAbsolutePath:()=> "C:\\app\\languages\\dart",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\dart") :  path.relative("C:\\app",  "C:\\app\\languages\\dart") }
        },
        "js": {
            toAbsolutePath:()=> "C:\\app\\languages\\js",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js") :  path.relative("C:\\app",  "C:\\app\\languages\\js") },
            ".eslintrc.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.eslintrc.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.eslintrc.json") }
            },
            ".eslintrc.ts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.eslintrc.ts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.eslintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.eslintrc.ts") }
            },
            ".gitignore": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.gitignore",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.gitignore") }
            },
            ".prettierrc.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.prettierrc.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.prettierrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.prettierrc.json") }
            },
            ".prettierrc.ts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.prettierrc.ts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.prettierrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.prettierrc.ts") }
            },
            ".stylelintrc copy.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.stylelintrc copy.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.stylelintrc copy.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.stylelintrc copy.json") }
            },
            ".stylelintrc.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.stylelintrc.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.stylelintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.stylelintrc.json") }
            },
            ".stylelintrc.ts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.stylelintrc.ts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.stylelintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.stylelintrc.ts") }
            },
            ".stylelintrcignore": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.stylelintrcignore",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.stylelintrcignore") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.stylelintrcignore") }
            },
            ".vscode": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\.vscode",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.vscode") },
                "launch.json": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\.vscode\\launch.json",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.vscode\\launch.json") }
                },
                "settings.json": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\.vscode\\settings.json",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.vscode\\settings.json") }
                },
                "tasks.json": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\.vscode\\tasks.json",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\.vscode\\tasks.json") }
                }
            },
            "apps": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps") },
                "auth": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth") },
                    ".eslintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.eslintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.eslintrc.json") }
                    },
                    ".eslintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.eslintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.eslintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.eslintrc.ts") }
                    },
                    ".prettierrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.prettierrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.prettierrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.prettierrc.json") }
                    },
                    ".prettierrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.prettierrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.prettierrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.prettierrc.ts") }
                    },
                    ".stylelintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.stylelintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.stylelintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.stylelintrc.json") }
                    },
                    ".stylelintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.stylelintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.stylelintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.stylelintrc.ts") }
                    },
                    ".vscode": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.vscode",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.vscode") },
                        "launch.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.vscode\\launch.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.vscode\\launch.json") }
                        },
                        "settings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.vscode\\settings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.vscode\\settings.json") }
                        },
                        "tasks.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\.vscode\\tasks.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\.vscode\\tasks.json") }
                        }
                    },
                    "bin": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\bin",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\bin") }
                    },
                    "compiled": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\compiled",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\compiled") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\compiled") }
                    },
                    "configs.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\configs.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\configs.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\configs.ts") }
                    },
                    "node_modules": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\node_modules",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\node_modules") }
                    },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\obj") }
                    },
                    "package-lock.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\package-lock.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\package-lock.json") }
                    },
                    "package.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\package.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\package.json") }
                    },
                    "paths.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\paths.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\paths.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\paths.ts") }
                    },
                    "src": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src") },
                        "app.controller.spec.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\app.controller.spec.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\app.controller.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\app.controller.spec.ts") }
                        },
                        "app.controller.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\app.controller.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\app.controller.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\app.controller.ts") }
                        },
                        "app.module.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\app.module.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\app.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\app.module.ts") }
                        },
                        "app.service.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\app.service.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\app.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\app.service.ts") }
                        },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\appsettings.json") }
                        },
                        "logo": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\logo",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\logo") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\logo") },
                            "favicon.ico": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\logo\\favicon.ico",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\logo\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\logo\\favicon.ico") }
                            },
                            "icon-512.png": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\logo\\icon-512.png",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\logo\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\logo\\icon-512.png") }
                            }
                        },
                        "main.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\main.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\main.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\main.ts") }
                        },
                        "modules": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\modules",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\modules") }
                        },
                        "service-worker": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\service-worker",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\service-worker") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\service-worker") },
                            "index.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\service-worker\\index.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\service-worker\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\service-worker\\index.ts") }
                            }
                        },
                        "templates": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\templates",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\templates") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\templates") },
                            "_Layout.cshtml": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\templates\\_Layout.cshtml",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\templates\\_Layout.cshtml") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\templates\\_Layout.cshtml") }
                            },
                            "_Layout.html": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\templates\\_Layout.html",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\templates\\_Layout.html") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\templates\\_Layout.html") }
                            }
                        },
                        "vite": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite") },
                            "configs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\configs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\configs") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\configs") },
                                "vite.shared.config.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\configs\\vite.shared.config.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\configs\\vite.shared.config.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\configs\\vite.shared.config.ts") }
                                }
                            },
                            "vite-dev": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev") },
                                "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev\\vite-dev.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") }
                                },
                                "vite-dev.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev\\vite-dev.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev\\vite-dev.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-dev\\vite-dev.service.ts") }
                                }
                            },
                            "vite-plugins": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins") },
                                "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.module.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.module.ts") }
                                },
                                "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") }
                                },
                                "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-plugins\\vite-plugins.service.ts") }
                                }
                            },
                            "vite-prod": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod") },
                                "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod\\vite-prod.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") }
                                },
                                "vite-prod.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod\\vite-prod.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod\\vite-prod.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-prod\\vite-prod.service.ts") }
                                }
                            },
                            "vite-shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared") },
                                "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared\\vite-shared.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") }
                                },
                                "vite-shared.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared\\vite-shared.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared\\vite-shared.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite-shared\\vite-shared.service.ts") }
                                }
                            },
                            "vite.module.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite.module.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\vite\\vite.module.ts") }
                            }
                        },
                        "web": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\web",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\web") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\web") },
                            "index.scss": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\web\\index.scss",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\web\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\web\\index.scss") }
                            },
                            "libraries": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\web\\libraries",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\web\\libraries") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\web\\libraries") },
                                "index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\src\\web\\libraries\\index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\src\\web\\libraries\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\src\\web\\libraries\\index.scss") }
                                }
                            }
                        }
                    },
                    "tsconfig.backup.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\tsconfig.backup.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\tsconfig.backup.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\tsconfig.backup.json") }
                    },
                    "tsconfig.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\tsconfig.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\tsconfig.json") }
                    },
                    "tsconfig.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\tsconfig.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\tsconfig.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\tsconfig.ts") }
                    },
                    "vite.dev.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\vite.dev.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\vite.dev.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\vite.dev.ts") }
                    },
                    "vite.prod.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\auth\\vite.prod.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\auth\\vite.prod.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\auth\\vite.prod.ts") }
                    }
                },
                "blazor-app": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app") },
                    ".eslintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.eslintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.eslintrc.json") }
                    },
                    ".eslintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.eslintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.eslintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.eslintrc.ts") }
                    },
                    ".ignored_node_modules": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.ignored_node_modules",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.ignored_node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.ignored_node_modules") }
                    },
                    ".prettierrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.prettierrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.prettierrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.prettierrc.json") }
                    },
                    ".prettierrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.prettierrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.prettierrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.prettierrc.ts") }
                    },
                    ".stylelintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.stylelintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.stylelintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.stylelintrc.json") }
                    },
                    ".stylelintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.stylelintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.stylelintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.stylelintrc.ts") }
                    },
                    ".vscode": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode") },
                        "launch.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\launch.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\launch.json") }
                        },
                        "settings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\settings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\settings.json") }
                        },
                        "tasks.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\tasks.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\.vscode\\tasks.json") }
                        }
                    },
                    "berry.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\berry.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\berry.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\berry.json") }
                    },
                    "codegen-config.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\codegen-config.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\codegen-config.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\codegen-config.json") }
                    },
                    "compiled": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\compiled",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\compiled") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\compiled") }
                    },
                    "configs.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\configs.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\configs.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\configs.ts") }
                    },
                    "Graphql.graphql": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\Graphql.graphql",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\Graphql.graphql") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\Graphql.graphql") }
                    },
                    "Monikers.imagemanifest": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\Monikers.imagemanifest",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\Monikers.imagemanifest") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\Monikers.imagemanifest") }
                    },
                    "node_modules": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\node_modules",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\node_modules") }
                    },
                    "package-lock.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\package-lock.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\package-lock.json") }
                    },
                    "package.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\package.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\package.json") }
                    },
                    "paths.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\paths.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\paths.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\paths.ts") }
                    },
                    "src": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src") },
                        "app.controller.spec.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.controller.spec.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.controller.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.controller.spec.ts") }
                        },
                        "app.controller.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.controller.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.controller.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.controller.ts") }
                        },
                        "app.module.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.module.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.module.ts") }
                        },
                        "app.service.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.service.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\app.service.ts") }
                        },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\appsettings.json") }
                        },
                        "logo": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo") },
                            "favicon.ico": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo\\favicon.ico",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo\\favicon.ico") }
                            },
                            "icon-512.png": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo\\icon-512.png",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\logo\\icon-512.png") }
                            }
                        },
                        "main.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\main.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\main.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\main.ts") }
                        },
                        "modules": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\modules",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\modules") }
                        },
                        "service-worker": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\service-worker",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\service-worker") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\service-worker") },
                            "index.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\service-worker\\index.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\service-worker\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\service-worker\\index.ts") }
                            }
                        },
                        "templates": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates") },
                            "index.html": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates\\index.html",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates\\index.html") }
                            },
                            "index.webpack.html": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates\\index.webpack.html",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates\\index.webpack.html") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\templates\\index.webpack.html") }
                            }
                        },
                        "vite": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite") },
                            "configs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\configs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\configs") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\configs") },
                                "vite.shared.config.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\configs\\vite.shared.config.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\configs\\vite.shared.config.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\configs\\vite.shared.config.ts") }
                                }
                            },
                            "vite-dev": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev") },
                                "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") }
                                },
                                "vite-dev.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev\\vite-dev.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev\\vite-dev.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-dev\\vite-dev.service.ts") }
                                }
                            },
                            "vite-plugins": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins") },
                                "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts") }
                                },
                                "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") }
                                },
                                "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts") }
                                }
                            },
                            "vite-prod": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod") },
                                "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") }
                                },
                                "vite-prod.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod\\vite-prod.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod\\vite-prod.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-prod\\vite-prod.service.ts") }
                                }
                            },
                            "vite-shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared") },
                                "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") }
                                },
                                "vite-shared.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared\\vite-shared.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared\\vite-shared.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite-shared\\vite-shared.service.ts") }
                                }
                            },
                            "vite.module.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite.module.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\vite\\vite.module.ts") }
                            }
                        },
                        "web": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web") },
                            "index.scss": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\index.scss",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\index.scss") }
                            },
                            "libraries": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\libraries",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\libraries") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\libraries") },
                                "index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\libraries\\index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\libraries\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\src\\web\\libraries\\index.scss") }
                                }
                            }
                        }
                    },
                    "tsconfig.backup.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.backup.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.backup.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.backup.json") }
                    },
                    "tsconfig.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.json") }
                    },
                    "tsconfig.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\tsconfig.ts") }
                    },
                    "vite.dev.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\vite.dev.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\vite.dev.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\vite.dev.ts") }
                    },
                    "vite.prod.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\blazor-app\\vite.prod.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\blazor-app\\vite.prod.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\blazor-app\\vite.prod.ts") }
                    }
                },
                "react-app": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app") },
                    ".dockerignore": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.dockerignore",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.dockerignore") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.dockerignore") }
                    },
                    ".eslintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.eslintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.eslintrc.json") }
                    },
                    ".eslintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.eslintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.eslintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.eslintrc.ts") }
                    },
                    ".prettierrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.prettierrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.prettierrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.prettierrc.json") }
                    },
                    ".prettierrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.prettierrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.prettierrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.prettierrc.ts") }
                    },
                    ".stylelintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.stylelintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.stylelintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.stylelintrc.json") }
                    },
                    ".stylelintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.stylelintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.stylelintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.stylelintrc.ts") }
                    },
                    ".vscode": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.vscode",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.vscode") },
                        "launch.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\launch.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\launch.json") }
                        },
                        "settings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\settings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\settings.json") }
                        },
                        "tasks.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\tasks.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\.vscode\\tasks.json") }
                        }
                    },
                    "berry.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\berry.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\berry.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\berry.json") }
                    },
                    "codegen-config.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\codegen-config.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\codegen-config.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\codegen-config.json") }
                    },
                    "configs.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\configs.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\configs.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\configs.ts") }
                    },
                    "docker-compose.prod.yml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\docker-compose.prod.yml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\docker-compose.prod.yml") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\docker-compose.prod.yml") }
                    },
                    "docker-compose.yml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\docker-compose.yml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\docker-compose.yml") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\docker-compose.yml") }
                    },
                    "Dockerfile": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\Dockerfile",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\Dockerfile") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\Dockerfile") }
                    },
                    "Dockerfile.prod": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\Dockerfile.prod",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\Dockerfile.prod") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\Dockerfile.prod") }
                    },
                    "Monikers.imagemanifest": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\Monikers.imagemanifest",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\Monikers.imagemanifest") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\Monikers.imagemanifest") }
                    },
                    "nginx.conf": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\nginx.conf",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\nginx.conf") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\nginx.conf") }
                    },
                    "node_modules": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\node_modules",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\node_modules") }
                    },
                    "package-lock.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\package-lock.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\package-lock.json") }
                    },
                    "package.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\package.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\package.json") }
                    },
                    "paths.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\paths.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\paths.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\paths.ts") }
                    },
                    "src": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src") },
                        "app": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app") },
                            ".eslintrc.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.eslintrc.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.eslintrc.json") }
                            },
                            ".gitignore": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.gitignore",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.gitignore") }
                            },
                            ".next": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next") },
                                "build-manifest.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\build-manifest.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\build-manifest.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\build-manifest.json") }
                                },
                                "cache": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache") },
                                    "images": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images") },
                                        "MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images\\MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images\\MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images\\MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=") },
                                            "0.1635779962459.wPvODNXNDTx7iJgazQaNE7lhRgu5TTxLpKDsXCgFH9E=.svg": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images\\MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=\\0.1635779962459.wPvODNXNDTx7iJgazQaNE7lhRgu5TTxLpKDsXCgFH9E=.svg",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images\\MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=\\0.1635779962459.wPvODNXNDTx7iJgazQaNE7lhRgu5TTxLpKDsXCgFH9E=.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\images\\MJeZ+lOjm2t9iH+r8BKPpD2LlxLM5SrUTlaLn-tdobU=\\0.1635779962459.wPvODNXNDTx7iJgazQaNE7lhRgu5TTxLpKDsXCgFH9E=.svg") }
                                            }
                                        }
                                    },
                                    "webpack": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack") },
                                        "client-development": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development") },
                                            "0.pack": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development\\0.pack",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development\\0.pack") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development\\0.pack") }
                                            },
                                            "index.pack": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development\\index.pack",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development\\index.pack") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\client-development\\index.pack") }
                                            }
                                        },
                                        "server-development": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development") },
                                            "0.pack": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\0.pack",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\0.pack") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\0.pack") }
                                            },
                                            "1.pack": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\1.pack",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\1.pack") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\1.pack") }
                                            },
                                            "index.pack": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\index.pack",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\index.pack") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\index.pack") }
                                            },
                                            "index.pack.old": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\index.pack.old",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\index.pack.old") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\cache\\webpack\\server-development\\index.pack.old") }
                                            }
                                        }
                                    }
                                },
                                "react-loadable-manifest.json": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\react-loadable-manifest.json",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\react-loadable-manifest.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\react-loadable-manifest.json") }
                                },
                                "server": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server") },
                                    "middleware-manifest.json": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\middleware-manifest.json",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\middleware-manifest.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\middleware-manifest.json") }
                                    },
                                    "pages": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages") },
                                        "index.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\index.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\index.js") }
                                        },
                                        "_app.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_app.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_app.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_app.js") }
                                        },
                                        "_document.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_document.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_document.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_document.js") }
                                        },
                                        "_error.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_error.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_error.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages\\_error.js") }
                                        }
                                    },
                                    "pages-manifest.json": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages-manifest.json",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages-manifest.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\pages-manifest.json") }
                                    },
                                    "webpack-runtime.js": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\webpack-runtime.js",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\webpack-runtime.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\server\\webpack-runtime.js") }
                                    }
                                },
                                "static": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static") },
                                    "chunks": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks") },
                                        "amp.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\amp.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\amp.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\amp.js") }
                                        },
                                        "main.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\main.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\main.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\main.js") }
                                        },
                                        "pages": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages") },
                                            "index.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\index.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\index.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\index.js") }
                                            },
                                            "_app.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\_app.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\_app.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\_app.js") }
                                            },
                                            "_error.js": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\_error.js",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\_error.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\pages\\_error.js") }
                                            }
                                        },
                                        "polyfills.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\polyfills.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\polyfills.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\polyfills.js") }
                                        },
                                        "react-refresh.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\react-refresh.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\react-refresh.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\react-refresh.js") }
                                        },
                                        "webpack.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\webpack.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\webpack.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\chunks\\webpack.js") }
                                        }
                                    },
                                    "development": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development") },
                                        "_buildManifest.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_buildManifest.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_buildManifest.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_buildManifest.js") }
                                        },
                                        "_middlewareManifest.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_middlewareManifest.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_middlewareManifest.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_middlewareManifest.js") }
                                        },
                                        "_ssgManifest.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_ssgManifest.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_ssgManifest.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\development\\_ssgManifest.js") }
                                        }
                                    },
                                    "webpack": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack") },
                                        "1dd450bc2eab9938.webpack.hot-update.json": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack\\1dd450bc2eab9938.webpack.hot-update.json",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack\\1dd450bc2eab9938.webpack.hot-update.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack\\1dd450bc2eab9938.webpack.hot-update.json") }
                                        },
                                        "webpack.1dd450bc2eab9938.hot-update.js": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack\\webpack.1dd450bc2eab9938.hot-update.js",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack\\webpack.1dd450bc2eab9938.hot-update.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\static\\webpack\\webpack.1dd450bc2eab9938.hot-update.js") }
                                        }
                                    }
                                },
                                "trace": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\trace",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\trace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\.next\\trace") }
                                }
                            },
                            "next-env.d.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\next-env.d.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\next-env.d.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\next-env.d.ts") }
                            },
                            "next.config.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\next.config.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\next.config.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\next.config.js") }
                            },
                            "node_modules": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\node_modules",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\node_modules") }
                            },
                            "package-lock.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\package-lock.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\package-lock.json") }
                            },
                            "package.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\package.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\package.json") }
                            },
                            "pages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages") },
                                "api": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\api",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\api") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\api") },
                                    "hello.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\api\\hello.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\api\\hello.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\api\\hello.ts") }
                                    }
                                },
                                "index.tsx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\index.tsx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\index.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\index.tsx") }
                                },
                                "_app.tsx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\_app.tsx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\_app.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\pages\\_app.tsx") }
                                }
                            },
                            "public": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public") },
                                "favicon.ico": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public\\favicon.ico",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public\\favicon.ico") }
                                },
                                "vercel.svg": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public\\vercel.svg",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public\\vercel.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\public\\vercel.svg") }
                                }
                            },
                            "README.md": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\README.md",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\README.md") }
                            },
                            "styles": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles") },
                                "globals.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles\\globals.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles\\globals.css") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles\\globals.css") }
                                },
                                "Home.module.css": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles\\Home.module.css",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles\\Home.module.css") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\styles\\Home.module.css") }
                                }
                            },
                            "tsconfig.json": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\tsconfig.json",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app\\tsconfig.json") }
                            }
                        },
                        "app.controller.spec.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app.controller.spec.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.controller.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.controller.spec.ts") }
                        },
                        "app.controller.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app.controller.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.controller.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.controller.ts") }
                        },
                        "app.module.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app.module.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.module.ts") }
                        },
                        "app.service.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\app.service.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\app.service.ts") }
                        },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\appsettings.json") }
                        },
                        "index.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\index.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\index.ts") }
                        },
                        "logo": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\logo",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\logo") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\logo") },
                            "icon-512.png": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\logo\\icon-512.png",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\logo\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\logo\\icon-512.png") }
                            }
                        },
                        "main.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\main.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\main.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\main.ts") }
                        },
                        "modules": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\modules",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\modules") }
                        },
                        "service-worker": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\service-worker",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\service-worker") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\service-worker") },
                            "index.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\service-worker\\index.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\service-worker\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\service-worker\\index.ts") }
                            }
                        },
                        "templates": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\templates",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\templates") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\templates") }
                        },
                        "vite": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite") },
                            "configs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\configs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\configs") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\configs") },
                                "vite.shared.config.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\configs\\vite.shared.config.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\configs\\vite.shared.config.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\configs\\vite.shared.config.ts") }
                                }
                            },
                            "vite-dev": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev") },
                                "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") }
                                },
                                "vite-dev.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev\\vite-dev.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev\\vite-dev.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-dev\\vite-dev.service.ts") }
                                }
                            },
                            "vite-plugins": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins") },
                                "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts") }
                                },
                                "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") }
                                },
                                "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts") }
                                }
                            },
                            "vite-prod": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod") },
                                "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") }
                                },
                                "vite-prod.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod\\vite-prod.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod\\vite-prod.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-prod\\vite-prod.service.ts") }
                                }
                            },
                            "vite-shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared") },
                                "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") }
                                },
                                "vite-shared.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared\\vite-shared.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared\\vite-shared.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite-shared\\vite-shared.service.ts") }
                                }
                            },
                            "vite.module.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite.module.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\vite\\vite.module.ts") }
                            }
                        },
                        "web": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\web",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\web") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\web") },
                            "index.scss": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\index.scss",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\index.scss") }
                            },
                            "libraries": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\libraries",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\libraries") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\libraries") },
                                "index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\libraries\\index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\libraries\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\src\\web\\libraries\\index.scss") }
                                }
                            }
                        }
                    },
                    "tsconfig.backup.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.backup.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.backup.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.backup.json") }
                    },
                    "tsconfig.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.json") }
                    },
                    "tsconfig.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\tsconfig.ts") }
                    },
                    "vite.dev.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\vite.dev.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\vite.dev.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\vite.dev.ts") }
                    },
                    "vite.prod.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\vite.prod.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\vite.prod.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\vite.prod.ts") }
                    },
                    "wwwroot": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot") },
                        "assets": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets") },
                            "favicon.0e726a38.ico": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\favicon.0e726a38.ico",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\favicon.0e726a38.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\favicon.0e726a38.ico") }
                            },
                            "index.2879edad.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.2879edad.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.2879edad.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.2879edad.js") }
                            },
                            "index.2a7c026c.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.2a7c026c.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.2a7c026c.css") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.2a7c026c.css") }
                            },
                            "index.3aad8aa0.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.3aad8aa0.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.3aad8aa0.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.3aad8aa0.js") }
                            },
                            "index.8b3702fd.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.8b3702fd.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.8b3702fd.css") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\index.8b3702fd.css") }
                            },
                            "vendor.2bf70d6a.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\vendor.2bf70d6a.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\vendor.2bf70d6a.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\vendor.2bf70d6a.js") }
                            },
                            "vendor.a4488c43.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\vendor.a4488c43.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\vendor.a4488c43.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\assets\\vendor.a4488c43.js") }
                            }
                        },
                        "index.html": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\index.html",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\react-app\\wwwroot\\index.html") }
                        }
                    }
                },
                "shared": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared") },
                    ".eslintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\.eslintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\.eslintrc.json") }
                    },
                    ".eslintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\.eslintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\.eslintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\.eslintrc.ts") }
                    },
                    ".prettierrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\.prettierrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\.prettierrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\.prettierrc.json") }
                    },
                    ".prettierrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\.prettierrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\.prettierrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\.prettierrc.ts") }
                    },
                    ".stylelintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\.stylelintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\.stylelintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\.stylelintrc.json") }
                    },
                    ".stylelintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\.stylelintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\.stylelintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\.stylelintrc.ts") }
                    },
                    ".t4codegenrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\.t4codegenrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\.t4codegenrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\.t4codegenrc.json") }
                    },
                    "appsettings.Development.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\appsettings.Development.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\appsettings.Development.json") }
                    },
                    "appsettings.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\appsettings.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\appsettings.json") }
                    },
                    "bin": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\bin",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\bin") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\bin") }
                    },
                    "configs.base.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\configs.base.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\configs.base.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\configs.base.ts") }
                    },
                    "configs.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\configs.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\configs.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\configs.ts") }
                    },
                    "FodyWeavers.xml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\FodyWeavers.xml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\FodyWeavers.xml") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\FodyWeavers.xml") }
                    },
                    "FodyWeavers.xsd": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\FodyWeavers.xsd",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\FodyWeavers.xsd") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\FodyWeavers.xsd") }
                    },
                    "index.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\index.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\index.ts") }
                    },
                    "Monikers.imagemanifest": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\Monikers.imagemanifest",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\Monikers.imagemanifest") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\Monikers.imagemanifest") }
                    },
                    "node": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node") },
                        "__tests__": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__") },
                            "packages": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages") },
                                "name": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\name",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\name") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\name") },
                                    "package.json": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\name\\package.json",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\name\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\name\\package.json") }
                                    }
                                },
                                "noname": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\noname",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\noname") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\noname") },
                                    "package.json": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\noname\\package.json",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\noname\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node\\__tests__\\packages\\noname\\package.json") }
                                    }
                                }
                            }
                        }
                    },
                    "node_modules": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\node_modules",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\node_modules") }
                    },
                    "obj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\obj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\obj") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\obj") }
                    },
                    "package-lock.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\package-lock.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\package-lock.json") }
                    },
                    "package.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\package.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\package.json") }
                    },
                    "paths.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\paths.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\paths.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\paths.ts") }
                    },
                    "SharedLibrary.csproj": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\SharedLibrary.csproj",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\SharedLibrary.csproj") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\SharedLibrary.csproj") }
                    },
                    "src": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src") },
                        "app.controller.spec.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\app.controller.spec.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\app.controller.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\app.controller.spec.ts") }
                        },
                        "app.controller.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\app.controller.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\app.controller.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\app.controller.ts") }
                        },
                        "app.module.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\app.module.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\app.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\app.module.ts") }
                        },
                        "app.service.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\app.service.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\app.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\app.service.ts") }
                        },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\appsettings.json") }
                        },
                        "functions": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\functions",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\functions") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\functions") },
                            "process-providers.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\functions\\process-providers.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\functions\\process-providers.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\functions\\process-providers.ts") }
                            },
                            "rename-extension.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\functions\\rename-extension.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\functions\\rename-extension.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\functions\\rename-extension.ts") }
                            }
                        },
                        "icon-512.png": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\icon-512.png",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\icon-512.png") }
                        },
                        "index.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\index.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\index.ts") }
                        },
                        "logo": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\logo",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\logo") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\logo") },
                            "icon-512.png": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\logo\\icon-512.png",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\logo\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\logo\\icon-512.png") }
                            }
                        },
                        "main.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\main.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\main.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\main.ts") }
                        },
                        "modules": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\modules",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\modules") }
                        },
                        "service-worker": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\service-worker",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\service-worker") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\service-worker") },
                            "index.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\service-worker\\index.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\service-worker\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\service-worker\\index.ts") }
                            }
                        },
                        "templates": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\templates",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\templates") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\templates") },
                            "index.html": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\templates\\index.html",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\templates\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\templates\\index.html") }
                            }
                        },
                        "vite": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite") },
                            "configs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\configs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\configs") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\configs") },
                                "vite.shared.config.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\configs\\vite.shared.config.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\configs\\vite.shared.config.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\configs\\vite.shared.config.ts") }
                                }
                            },
                            "vite-base": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base") },
                                "vite-base.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base\\vite-base.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base\\vite-base.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base\\vite-base.service.spec.ts") }
                                },
                                "vite-base.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base\\vite-base.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base\\vite-base.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-base\\vite-base.service.ts") }
                                }
                            },
                            "vite-dev": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev") },
                                "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev\\vite-dev.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") }
                                },
                                "vite-dev.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev\\vite-dev.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev\\vite-dev.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-dev\\vite-dev.service.ts") }
                                }
                            },
                            "vite-plugins": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins") },
                                "services": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services") },
                                    "vite-plugin-glob-input": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input") },
                                        "vite-plugin-glob-input.service copy.ts.txt": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service copy.ts.txt",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service copy.ts.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service copy.ts.txt") }
                                        },
                                        "vite-plugin-glob-input.service.spec.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service.spec.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service.spec.ts") }
                                        },
                                        "vite-plugin-glob-input.service.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\services\\vite-plugin-glob-input\\vite-plugin-glob-input.service.ts") }
                                        }
                                    }
                                },
                                "vite-plugin-base": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base") },
                                    "vite-plugin-base.service.spec.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base\\vite-plugin-base.service.spec.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base\\vite-plugin-base.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base\\vite-plugin-base.service.spec.ts") }
                                    },
                                    "vite-plugin-base.service.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base\\vite-plugin-base.service.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base\\vite-plugin-base.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugin-base\\vite-plugin-base.service.ts") }
                                    }
                                },
                                "vite-plugins": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins") },
                                    "vite-plugins.service.spec.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins\\vite-plugins.service.spec.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins\\vite-plugins.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins\\vite-plugins.service.spec.ts") }
                                    },
                                    "vite-plugins.service.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins\\vite-plugins.service.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins\\vite-plugins.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins\\vite-plugins.service.ts") }
                                    }
                                },
                                "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins.module.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-plugins\\vite-plugins.module.ts") }
                                }
                            },
                            "vite-prod": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod") },
                                "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod\\vite-prod.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") }
                                },
                                "vite-prod.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod\\vite-prod.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod\\vite-prod.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-prod\\vite-prod.service.ts") }
                                }
                            },
                            "vite-shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared") },
                                "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared\\vite-shared.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") }
                                },
                                "vite-shared.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared\\vite-shared.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared\\vite-shared.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite-shared\\vite-shared.service.ts") }
                                }
                            },
                            "vite.module.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite.module.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\vite\\vite.module.ts") }
                            }
                        },
                        "web": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web") },
                            "bootstrap": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap") },
                                "custom": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom") },
                                    "_index.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_index.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_index.scss") }
                                    },
                                    "_index.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_index.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_index.ts") }
                                    },
                                    "_rounded-pills.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_rounded-pills.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_rounded-pills.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\custom\\_rounded-pills.scss") }
                                    }
                                },
                                "index.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\index.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\index.ts") }
                                },
                                "_index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\_index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\bootstrap\\_index.scss") }
                                }
                            },
                            "components": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components") },
                                "btn": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn") },
                                    "index.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn\\index.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn\\index.ts") }
                                    },
                                    "_index.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn\\_index.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\btn\\_index.scss") }
                                    }
                                },
                                "tooltips": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips") },
                                    "index.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\index.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\index.ts") }
                                    },
                                    "_index.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\_index.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\_index.scss") }
                                    },
                                    "_index.scss.d.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\_index.scss.d.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\_index.scss.d.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\tooltips\\_index.scss.d.ts") }
                                    }
                                },
                                "_index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\_index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\_index.scss") }
                                },
                                "_index.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\_index.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\components\\_index.ts") }
                                }
                            },
                            "defaults": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults") },
                                "index.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\index.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\index.ts") }
                                },
                                "_blazor-default.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_blazor-default.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_blazor-default.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_blazor-default.scss") }
                                },
                                "_colors.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_colors.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_colors.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_colors.scss") }
                                },
                                "_css-reset.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_css-reset.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_css-reset.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_css-reset.scss") }
                                },
                                "_default.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_default.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_default.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_default.scss") }
                                },
                                "_index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_index.scss") }
                                },
                                "_material-theme-scrollbar.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme-scrollbar.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme-scrollbar.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme-scrollbar.scss") }
                                },
                                "_material-theme-search.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme-search.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme-search.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme-search.scss") }
                                },
                                "_material-theme.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\defaults\\_material-theme.scss") }
                                }
                            },
                            "fontawesome": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome") },
                                "index.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome\\index.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome\\index.ts") }
                                },
                                "_index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome\\_index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\fontawesome\\_index.scss") }
                                }
                            },
                            "jquery": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery") },
                                "index.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery\\index.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery\\index.ts") }
                                },
                                "_index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery\\_index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\jquery\\_index.scss") }
                                }
                            },
                            "material": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material") },
                                "components": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components") },
                                    "animation": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\animation\\_index.ts") }
                                        }
                                    },
                                    "base": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\base\\_index.ts") }
                                        }
                                    },
                                    "button": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\button\\_index.ts") }
                                        }
                                    },
                                    "card": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\card\\_index.ts") }
                                        }
                                    },
                                    "checkbox": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\checkbox\\_index.ts") }
                                        }
                                    },
                                    "chips": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\chips\\_index.ts") }
                                        }
                                    },
                                    "circular-progress": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\circular-progress\\_index.ts") }
                                        }
                                    },
                                    "data-table": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\data-table\\_index.ts") }
                                        }
                                    },
                                    "density": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\density\\_index.ts") }
                                        }
                                    },
                                    "dialog": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dialog\\_index.ts") }
                                        }
                                    },
                                    "dom": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\dom\\_index.ts") }
                                        }
                                    },
                                    "drawer": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\drawer\\_index.ts") }
                                        }
                                    },
                                    "elevation": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\elevation\\_index.ts") }
                                        }
                                    },
                                    "fab": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\fab\\_index.ts") }
                                        }
                                    },
                                    "feature-targeting": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\feature-targeting\\_index.ts") }
                                        }
                                    },
                                    "floating-label": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\floating-label\\_index.ts") }
                                        }
                                    },
                                    "form-field": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\form-field\\_index.ts") }
                                        }
                                    },
                                    "icon-button": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\icon-button\\_index.ts") }
                                        }
                                    },
                                    "image-list": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\image-list\\_index.ts") }
                                        }
                                    },
                                    "layout-grid": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\layout-grid\\_index.ts") }
                                        }
                                    },
                                    "line-ripple": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\line-ripple\\_index.ts") }
                                        }
                                    },
                                    "linear-progress": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\linear-progress\\_index.ts") }
                                        }
                                    },
                                    "list": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\list\\_index.ts") }
                                        }
                                    },
                                    "menu": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu\\_index.ts") }
                                        }
                                    },
                                    "menu-surface": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\menu-surface\\_index.ts") }
                                        }
                                    },
                                    "notched-outline": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\notched-outline\\_index.ts") }
                                        }
                                    },
                                    "progress-indicator": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\progress-indicator\\_index.ts") }
                                        }
                                    },
                                    "radio": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\radio\\_index.ts") }
                                        }
                                    },
                                    "ripple": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\ripple\\_index.ts") }
                                        }
                                    },
                                    "rtl": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\rtl\\_index.ts") }
                                        }
                                    },
                                    "select": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\select\\_index.ts") }
                                        }
                                    },
                                    "shape": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\shape\\_index.ts") }
                                        }
                                    },
                                    "slider": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\slider\\_index.ts") }
                                        }
                                    },
                                    "snackbar": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\snackbar\\_index.ts") }
                                        }
                                    },
                                    "switch": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\switch\\_index.ts") }
                                        }
                                    },
                                    "tab": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab\\_index.ts") }
                                        }
                                    },
                                    "tab-bar": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-bar\\_index.ts") }
                                        }
                                    },
                                    "tab-indicator": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-indicator\\_index.ts") }
                                        }
                                    },
                                    "tab-scroller": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tab-scroller\\_index.ts") }
                                        }
                                    },
                                    "textfield": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\textfield\\_index.ts") }
                                        }
                                    },
                                    "theme": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\theme\\_index.ts") }
                                        }
                                    },
                                    "tooltip": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip") },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip\\index.ts") }
                                        },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\tooltip\\_index.scss") }
                                        }
                                    },
                                    "top-app-bar": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\top-app-bar\\_index.ts") }
                                        }
                                    },
                                    "touch-target": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\touch-target\\_index.ts") }
                                        }
                                    },
                                    "typography": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography") },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography\\_index.scss") }
                                        },
                                        "_index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography\\_index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\typography\\_index.ts") }
                                        }
                                    },
                                    "_index.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\_index.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\_index.scss") }
                                    },
                                    "_index.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\_index.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\components\\_index.ts") }
                                    }
                                },
                                "native": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native") },
                                    "components": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components") },
                                        "animation": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\animation\\_index.scss") }
                                            }
                                        },
                                        "base": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\base\\_index.scss") }
                                            }
                                        },
                                        "button": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\button\\_index.scss") }
                                            }
                                        },
                                        "card": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\card\\_index.scss") }
                                            }
                                        },
                                        "checkbox": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\checkbox\\_index.scss") }
                                            }
                                        },
                                        "chips": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\chips\\_index.scss") }
                                            }
                                        },
                                        "circular-progress": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\circular-progress\\_index.scss") }
                                            }
                                        },
                                        "data-table": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\data-table\\_index.scss") }
                                            }
                                        },
                                        "density": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\density\\_index.scss") }
                                            }
                                        },
                                        "dialog": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dialog\\_index.scss") }
                                            }
                                        },
                                        "dom": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\dom\\_index.scss") }
                                            }
                                        },
                                        "drawer": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\drawer\\_index.scss") }
                                            }
                                        },
                                        "elevation": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\elevation\\_index.scss") }
                                            }
                                        },
                                        "fab": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\fab\\_index.scss") }
                                            }
                                        },
                                        "feature-targeting": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\feature-targeting\\_index.scss") }
                                            }
                                        },
                                        "floating-label": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\floating-label\\_index.scss") }
                                            }
                                        },
                                        "form-field": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\form-field\\_index.scss") }
                                            }
                                        },
                                        "icon-button": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\icon-button\\_index.scss") }
                                            }
                                        },
                                        "image-list": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\image-list\\_index.scss") }
                                            }
                                        },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\index.ts") }
                                        },
                                        "layout-grid": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\layout-grid\\_index.scss") }
                                            }
                                        },
                                        "line-ripple": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\line-ripple\\_index.scss") }
                                            }
                                        },
                                        "linear-progress": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\linear-progress\\_index.scss") }
                                            }
                                        },
                                        "list": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\list\\_index.scss") }
                                            }
                                        },
                                        "menu": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu\\_index.scss") }
                                            }
                                        },
                                        "menu-surface": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\menu-surface\\_index.scss") }
                                            }
                                        },
                                        "notched-outline": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\notched-outline\\_index.scss") }
                                            }
                                        },
                                        "progress-indicator": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\progress-indicator\\_index.scss") }
                                            }
                                        },
                                        "radio": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\radio\\_index.scss") }
                                            }
                                        },
                                        "ripple": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\ripple\\_index.scss") }
                                            }
                                        },
                                        "rtl": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\rtl\\_index.scss") }
                                            }
                                        },
                                        "select": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\select\\_index.scss") }
                                            }
                                        },
                                        "shape": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\shape\\_index.scss") }
                                            }
                                        },
                                        "slider": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\slider\\_index.scss") }
                                            }
                                        },
                                        "snackbar": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\snackbar\\_index.scss") }
                                            }
                                        },
                                        "switch": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\switch\\_index.scss") }
                                            }
                                        },
                                        "tab": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab\\_index.scss") }
                                            }
                                        },
                                        "tab-bar": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-bar\\_index.scss") }
                                            }
                                        },
                                        "tab-indicator": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-indicator\\_index.scss") }
                                            }
                                        },
                                        "tab-scroller": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\tab-scroller\\_index.scss") }
                                            }
                                        },
                                        "textfield": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\textfield\\_index.scss") }
                                            }
                                        },
                                        "theme": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\theme\\_index.scss") }
                                            }
                                        },
                                        "top-app-bar": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\top-app-bar\\_index.scss") }
                                            }
                                        },
                                        "touch-target": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\touch-target\\_index.scss") }
                                            }
                                        },
                                        "typography": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography") },
                                            "index.ts": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography\\index.ts",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography\\index.ts") }
                                            },
                                            "_index.scss": {
                                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography\\_index.scss",
                                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\typography\\_index.scss") }
                                            }
                                        },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\native\\components\\_index.scss") }
                                        }
                                    }
                                },
                                "themes": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes") },
                                    "asymetric-theme": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme") },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme\\index.ts") }
                                        },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\asymetric-theme\\_index.scss") }
                                        }
                                    },
                                    "dark-square-theme": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme") },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme\\index.ts") }
                                        },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\dark-square-theme\\_index.scss") }
                                        }
                                    },
                                    "default-theme": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme") },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme\\index.ts") }
                                        },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\default-theme\\_index.scss") }
                                        }
                                    },
                                    "light-square-theme": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme") },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme\\index.ts") }
                                        },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\light-square-theme\\_index.scss") }
                                        }
                                    },
                                    "rounded-theme": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme") },
                                        "index.ts": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme\\index.ts",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme\\index.ts") }
                                        },
                                        "_index.scss": {
                                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme\\_index.scss",
                                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\rounded-theme\\_index.scss") }
                                        }
                                    },
                                    "_index.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\_index.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\_index.scss") }
                                    },
                                    "_index.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\_index.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\themes\\_index.ts") }
                                    }
                                },
                                "variables": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables") },
                                    "color-types.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\color-types.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\color-types.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\color-types.ts") }
                                    },
                                    "colors-input.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\colors-input.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\colors-input.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\colors-input.ts") }
                                    },
                                    "export.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\export.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\export.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\export.ts") }
                                    },
                                    "index.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\index.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\index.ts") }
                                    },
                                    "material-colors-nested.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\material-colors-nested.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\material-colors-nested.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\material-colors-nested.ts") }
                                    },
                                    "material-colors.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\material-colors.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\material-colors.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\material-colors.ts") }
                                    },
                                    "sass-variables.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\sass-variables.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\sass-variables.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\sass-variables.ts") }
                                    },
                                    "text-color-schemes.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\text-color-schemes.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\text-color-schemes.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\text-color-schemes.ts") }
                                    },
                                    "texts-input.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\texts-input.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\texts-input.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\texts-input.ts") }
                                    },
                                    "_color-types.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_color-types.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_color-types.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_color-types.scss") }
                                    },
                                    "_colors-input.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_colors-input.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_colors-input.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_colors-input.scss") }
                                    },
                                    "_export.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_export.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_export.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_export.scss") }
                                    },
                                    "_index.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_index.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_index.scss") }
                                    },
                                    "_material-colors-nested.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_material-colors-nested.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_material-colors-nested.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_material-colors-nested.scss") }
                                    },
                                    "_material-colors.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_material-colors.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_material-colors.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_material-colors.scss") }
                                    },
                                    "_text-color-schemes.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_text-color-schemes.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_text-color-schemes.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_text-color-schemes.scss") }
                                    },
                                    "_texts-input.scss": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_texts-input.scss",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_texts-input.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\variables\\_texts-input.scss") }
                                    }
                                },
                                "_index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\_index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\_index.scss") }
                                },
                                "_index.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\_index.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\material\\_index.ts") }
                                }
                            },
                            "tailwind": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind") },
                                "index.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\index.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\index.ts") }
                                },
                                "tailwind.colors.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\tailwind.colors.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\tailwind.colors.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\tailwind.colors.ts") }
                                },
                                "tailwind.config.full.js": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\tailwind.config.full.js",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\tailwind.config.full.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\tailwind.config.full.js") }
                                },
                                "utils": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils") },
                                    "classes.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\classes.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\classes.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\classes.ts") }
                                    },
                                    "clicked-outside.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\clicked-outside.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\clicked-outside.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\clicked-outside.ts") }
                                    },
                                    "color.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\color.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\color.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\color.ts") }
                                    },
                                    "css-extractor.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\css-extractor.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\css-extractor.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\css-extractor.ts") }
                                    },
                                    "hide-list-action.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\hide-list-action.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\hide-list-action.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\hide-list-action.ts") }
                                    },
                                    "menu.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\menu.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\menu.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\menu.ts") }
                                    },
                                    "style.ts": {
                                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\style.ts",
                                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\style.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\utils\\style.ts") }
                                    }
                                },
                                "_base.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_base.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_base.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_base.scss") }
                                },
                                "_defaults.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_defaults.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_defaults.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_defaults.scss") }
                                },
                                "_index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_index.scss") }
                                },
                                "_index.scss.d.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_index.scss.d.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_index.scss.d.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\tailwind\\_index.scss.d.ts") }
                                }
                            },
                            "_index.scss": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\_index.scss",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\_index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\_index.scss") }
                            },
                            "_index.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\src\\web\\_index.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\_index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\src\\web\\_index.ts") }
                            }
                        }
                    },
                    "tsconfig.backup.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\tsconfig.backup.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.backup.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.backup.json") }
                    },
                    "tsconfig.backup.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\tsconfig.backup.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.backup.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.backup.ts") }
                    },
                    "tsconfig.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\tsconfig.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.json") }
                    },
                    "tsconfig.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\tsconfig.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\tsconfig.ts") }
                    },
                    "vite.base.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\vite.base.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\vite.base.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\vite.base.ts") }
                    },
                    "vite.dev.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\vite.dev.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\vite.dev.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\vite.dev.ts") }
                    },
                    "vite.prod.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\vite.prod.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\vite.prod.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\vite.prod.ts") }
                    },
                    "_Imports.razor": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\shared\\_Imports.razor",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\shared\\_Imports.razor") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\shared\\_Imports.razor") }
                    }
                },
                "solid-app": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app") },
                    ".dockerignore": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.dockerignore",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.dockerignore") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.dockerignore") }
                    },
                    ".eslintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.eslintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.eslintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.eslintrc.json") }
                    },
                    ".eslintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.eslintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.eslintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.eslintrc.ts") }
                    },
                    ".prettierrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.prettierrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.prettierrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.prettierrc.json") }
                    },
                    ".prettierrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.prettierrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.prettierrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.prettierrc.ts") }
                    },
                    ".stylelintrc.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.stylelintrc.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.stylelintrc.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.stylelintrc.json") }
                    },
                    ".stylelintrc.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.stylelintrc.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.stylelintrc.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.stylelintrc.ts") }
                    },
                    ".vscode": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.vscode",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode") },
                        "launch.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\launch.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\launch.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\launch.json") }
                        },
                        "settings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\settings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\settings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\settings.json") }
                        },
                        "tasks.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\tasks.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\tasks.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\.vscode\\tasks.json") }
                        }
                    },
                    "app": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app") },
                        ".gitignore": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\.gitignore",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\.gitignore") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\.gitignore") }
                        },
                        "index.html": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\index.html",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\index.html") }
                        },
                        "libs": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs") },
                            "dessert-box": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box") },
                                "index.tsx": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box\\index.tsx",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box\\index.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box\\index.tsx") }
                                },
                                "types.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box\\types.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box\\types.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\libs\\dessert-box\\types.ts") }
                                }
                            }
                        },
                        "node_modules": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\node_modules",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\node_modules") }
                        },
                        "package-lock.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\package-lock.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\package-lock.json") }
                        },
                        "package.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\package.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\package.json") }
                        },
                        "pnpm-lock.yaml": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\pnpm-lock.yaml",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\pnpm-lock.yaml") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\pnpm-lock.yaml") }
                        },
                        "README.md": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\README.md",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\README.md") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\README.md") }
                        },
                        "src": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src") },
                            "App.css.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\App.css.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\App.css.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\App.css.ts") }
                            },
                            "App.tsx": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\App.tsx",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\App.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\App.tsx") }
                            },
                            "assets": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\assets",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\assets") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\assets") },
                                "favicon.ico": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\assets\\favicon.ico",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\assets\\favicon.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\assets\\favicon.ico") }
                                }
                            },
                            "index.scss": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\index.scss",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\index.scss") }
                            },
                            "index.tsx": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\index.tsx",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\index.tsx") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\index.tsx") }
                            },
                            "logo.svg": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\logo.svg",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\logo.svg") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\logo.svg") }
                            },
                            "material-colors.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\material-colors.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\material-colors.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\material-colors.ts") }
                            },
                            "sprinkles.css.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\sprinkles.css.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\sprinkles.css.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\sprinkles.css.ts") }
                            },
                            "vars.css.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\vars.css.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\vars.css.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\src\\vars.css.ts") }
                            }
                        },
                        "tsconfig.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\tsconfig.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\tsconfig.json") }
                        },
                        "vite.config.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\app\\vite.config.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\app\\vite.config.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\app\\vite.config.ts") }
                        }
                    },
                    "berry.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\berry.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\berry.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\berry.json") }
                    },
                    "codegen-config.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\codegen-config.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\codegen-config.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\codegen-config.json") }
                    },
                    "configs.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\configs.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\configs.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\configs.ts") }
                    },
                    "docker-compose.prod.yml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\docker-compose.prod.yml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\docker-compose.prod.yml") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\docker-compose.prod.yml") }
                    },
                    "docker-compose.yml": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\docker-compose.yml",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\docker-compose.yml") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\docker-compose.yml") }
                    },
                    "Dockerfile": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\Dockerfile",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\Dockerfile") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\Dockerfile") }
                    },
                    "Dockerfile.prod": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\Dockerfile.prod",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\Dockerfile.prod") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\Dockerfile.prod") }
                    },
                    "Monikers.imagemanifest": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\Monikers.imagemanifest",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\Monikers.imagemanifest") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\Monikers.imagemanifest") }
                    },
                    "nginx.conf": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\nginx.conf",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\nginx.conf") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\nginx.conf") }
                    },
                    "node_modules": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\node_modules",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\node_modules") }
                    },
                    "package-lock.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\package-lock.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\package-lock.json") }
                    },
                    "package.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\package.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\package.json") }
                    },
                    "paths.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\paths.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\paths.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\paths.ts") }
                    },
                    "src": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src") },
                        "app.controller.spec.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.controller.spec.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.controller.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.controller.spec.ts") }
                        },
                        "app.controller.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.controller.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.controller.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.controller.ts") }
                        },
                        "app.module.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.module.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.module.ts") }
                        },
                        "app.service.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.service.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\app.service.ts") }
                        },
                        "appsettings.Development.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\appsettings.Development.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\appsettings.Development.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\appsettings.Development.json") }
                        },
                        "appsettings.json": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\appsettings.json",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\appsettings.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\appsettings.json") }
                        },
                        "index.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\index.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\index.ts") }
                        },
                        "logo": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\logo",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\logo") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\logo") },
                            "icon-512.png": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\logo\\icon-512.png",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\logo\\icon-512.png") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\logo\\icon-512.png") }
                            }
                        },
                        "main.ts": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\main.ts",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\main.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\main.ts") }
                        },
                        "modules": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\modules",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\modules") }
                        },
                        "service-worker": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\service-worker",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\service-worker") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\service-worker") },
                            "index.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\service-worker\\index.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\service-worker\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\service-worker\\index.ts") }
                            }
                        },
                        "vite": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite") },
                            "configs": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\configs",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\configs") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\configs") },
                                "vite.shared.config.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\configs\\vite.shared.config.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\configs\\vite.shared.config.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\configs\\vite.shared.config.ts") }
                                }
                            },
                            "vite-dev": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev") },
                                "vite-dev.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev\\vite-dev.service.spec.ts") }
                                },
                                "vite-dev.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev\\vite-dev.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev\\vite-dev.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-dev\\vite-dev.service.ts") }
                                }
                            },
                            "vite-plugins": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins") },
                                "vite-plugins.module.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.module.ts") }
                                },
                                "vite-plugins.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.service.spec.ts") }
                                },
                                "vite-plugins.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-plugins\\vite-plugins.service.ts") }
                                }
                            },
                            "vite-prod": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod") },
                                "vite-prod.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod\\vite-prod.service.spec.ts") }
                                },
                                "vite-prod.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod\\vite-prod.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod\\vite-prod.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-prod\\vite-prod.service.ts") }
                                }
                            },
                            "vite-shared": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared") },
                                "vite-shared.service.spec.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared\\vite-shared.service.spec.ts") }
                                },
                                "vite-shared.service.ts": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared\\vite-shared.service.ts",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared\\vite-shared.service.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite-shared\\vite-shared.service.ts") }
                                }
                            },
                            "vite.module.ts": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite.module.ts",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite.module.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\vite\\vite.module.ts") }
                            }
                        },
                        "web": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\web",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web") },
                            "index.scss": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\index.scss",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\index.scss") }
                            },
                            "libraries": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\libraries",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\libraries") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\libraries") },
                                "index.scss": {
                                    toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\libraries\\index.scss",
                                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\libraries\\index.scss") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\src\\web\\libraries\\index.scss") }
                                }
                            }
                        }
                    },
                    "tsconfig.backup.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.backup.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.backup.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.backup.json") }
                    },
                    "tsconfig.json": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.json",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.json") }
                    },
                    "tsconfig.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\tsconfig.ts") }
                    },
                    "vite.dev.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\vite.dev.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\vite.dev.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\vite.dev.ts") }
                    },
                    "vite.prod.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\vite.prod.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\vite.prod.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\vite.prod.ts") }
                    },
                    "wwwroot": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot") },
                        "assets": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets") },
                            "favicon.0e726a38.ico": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\favicon.0e726a38.ico",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\favicon.0e726a38.ico") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\favicon.0e726a38.ico") }
                            },
                            "index.2879edad.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.2879edad.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.2879edad.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.2879edad.js") }
                            },
                            "index.2a7c026c.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.2a7c026c.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.2a7c026c.css") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.2a7c026c.css") }
                            },
                            "index.3aad8aa0.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.3aad8aa0.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.3aad8aa0.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.3aad8aa0.js") }
                            },
                            "index.8b3702fd.css": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.8b3702fd.css",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.8b3702fd.css") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\index.8b3702fd.css") }
                            },
                            "vendor.2bf70d6a.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\vendor.2bf70d6a.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\vendor.2bf70d6a.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\vendor.2bf70d6a.js") }
                            },
                            "vendor.a4488c43.js": {
                                toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\vendor.a4488c43.js",
                                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\vendor.a4488c43.js") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\assets\\vendor.a4488c43.js") }
                            }
                        },
                        "index.html": {
                            toAbsolutePath:()=> "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\index.html",
                            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\index.html") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\apps\\solid-app\\wwwroot\\index.html") }
                        }
                    }
                }
            },
            "auth.code-workspace": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\auth.code-workspace",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\auth.code-workspace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\auth.code-workspace") }
            },
            "blazor-app.code-workspace": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\blazor-app.code-workspace",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\blazor-app.code-workspace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\blazor-app.code-workspace") }
            },
            "compiled": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\compiled",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\compiled") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\compiled") }
            },
            "configs.ts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\configs.ts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\configs.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\configs.ts") }
            },
            "index.ts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\index.ts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\index.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\index.ts") }
            },
            "lerna.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\lerna.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\lerna.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\lerna.json") }
            },
            "licences.txt": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\licences.txt",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\licences.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\licences.txt") }
            },
            "node_modules": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\node_modules",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\node_modules") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\node_modules") }
            },
            "package-lock.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\package-lock.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\package-lock.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\package-lock.json") }
            },
            "package.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\package.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\package.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\package.json") }
            },
            "paths.ts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\paths.ts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\paths.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\paths.ts") }
            },
            "powershell": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\powershell",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\powershell") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\powershell") },
                "remove-js-files.ps1": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\powershell\\remove-js-files.ps1",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\powershell\\remove-js-files.ps1") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\powershell\\remove-js-files.ps1") }
                },
                "rename-extension-from-css-to-scss.ps1": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\powershell\\rename-extension-from-css-to-scss.ps1",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\powershell\\rename-extension-from-css-to-scss.ps1") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\powershell\\rename-extension-from-css-to-scss.ps1") }
                },
                "rename-extension-from-scss-to-css.ps1": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\powershell\\rename-extension-from-scss-to-css.ps1",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\powershell\\rename-extension-from-scss-to-css.ps1") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\powershell\\rename-extension-from-scss-to-css.ps1") }
                }
            },
            "reference.txt": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\reference.txt",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\reference.txt") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\reference.txt") }
            },
            "scripts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts") },
                "generate-paths.ts": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts\\generate-paths.ts",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts\\generate-paths.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts\\generate-paths.ts") }
                },
                "generate-scripts.ts": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts\\generate-scripts.ts",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts\\generate-scripts.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts\\generate-scripts.ts") }
                },
                "rename-index-ts-to-_index-ts.ts": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts\\rename-index-ts-to-_index-ts.ts",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts\\rename-index-ts-to-_index-ts.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts\\rename-index-ts-to-_index-ts.ts") }
                },
                "rename-_index-ts-to-index-ts.ts": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts\\rename-_index-ts-to-index-ts.ts",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts\\rename-_index-ts-to-index-ts.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts\\rename-_index-ts-to-index-ts.ts") }
                },
                "Template": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts\\Template",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts\\Template") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts\\Template") },
                    "remove_txt.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts\\Template\\remove_txt.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts\\Template\\remove_txt.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts\\Template\\remove_txt.ts") }
                    },
                    "rename.ts": {
                        toAbsolutePath:()=> "C:\\app\\languages\\js\\scripts\\Template\\rename.ts",
                        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\scripts\\Template\\rename.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\scripts\\Template\\rename.ts") }
                    }
                }
            },
            "shared.code-workspace": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\shared.code-workspace",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\shared.code-workspace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\shared.code-workspace") }
            },
            "tsconfig.json": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\tsconfig.json",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\tsconfig.json") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\tsconfig.json") }
            },
            "tsconfig.ts": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\tsconfig.ts",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\tsconfig.ts") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\tsconfig.ts") }
            },
            "workspaces": {
                toAbsolutePath:()=> "C:\\app\\languages\\js\\workspaces",
                toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\workspaces") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\workspaces") },
                "apps.code-workspace": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\workspaces\\apps.code-workspace",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\workspaces\\apps.code-workspace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\workspaces\\apps.code-workspace") }
                },
                "auth.code-workspace": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\workspaces\\auth.code-workspace",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\workspaces\\auth.code-workspace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\workspaces\\auth.code-workspace") }
                },
                "blazor-app.code-workspace": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\workspaces\\blazor-app.code-workspace",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\workspaces\\blazor-app.code-workspace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\workspaces\\blazor-app.code-workspace") }
                },
                "shared.code-workspace": {
                    toAbsolutePath:()=> "C:\\app\\languages\\js\\workspaces\\shared.code-workspace",
                    toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\js\\workspaces\\shared.code-workspace") :  path.relative("C:\\app",  "C:\\app\\languages\\js\\workspaces\\shared.code-workspace") }
                }
            }
        },
        "python": {
            toAbsolutePath:()=> "C:\\app\\languages\\python",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\python") :  path.relative("C:\\app",  "C:\\app\\languages\\python") }
        },
        "rust": {
            toAbsolutePath:()=> "C:\\app\\languages\\rust",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\languages\\rust") :  path.relative("C:\\app",  "C:\\app\\languages\\rust") }
        }
    },
    "package.json": {
        toAbsolutePath:()=> "C:\\app\\package.json",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\package.json") :  path.relative("C:\\app",  "C:\\app\\package.json") }
    },
    "secrets": {
        toAbsolutePath:()=> "C:\\app\\secrets",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\secrets") :  path.relative("C:\\app",  "C:\\app\\secrets") },
        "secretstore.json": {
            toAbsolutePath:()=> "C:\\app\\secrets\\secretstore.json",
            toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\secrets\\secretstore.json") :  path.relative("C:\\app",  "C:\\app\\secrets\\secretstore.json") }
        }
    },
    "tye.yaml": {
        toAbsolutePath:()=> "C:\\app\\tye.yaml",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\tye.yaml") :  path.relative("C:\\app",  "C:\\app\\tye.yaml") }
    },
    "tye.yaml2": {
        toAbsolutePath:()=> "C:\\app\\tye.yaml2",
        toRelativePath:(relativeTo?:string)=>{ return relativeTo? path.relative(relativeTo,  "C:\\app\\tye.yaml2") :  path.relative("C:\\app",  "C:\\app\\tye.yaml2") }
    }
});
export const rootPaths = RootPaths.languages.js;