@use 'sass:map';
@use 'sass:string';
@use 'sass:color';
@use 'sass:list';

:root {
    --mdc-theme-primary: var(--primary);
    --mdc-theme-secondary: var(--secondary);
    --mdc-theme-background: var(--background);
    --mdc-theme-surface: var(--surface);
    --mdc-theme-error: var(--error);
    --mdc-theme-on-primary: var(--on-primary);
    --mdc-theme-on-secondary: var(--on-secondary);
    --mdc-theme-on-surface: var(--on-surface);
    --mdc-theme-primary-bg: var(--primary);
    --mdc-theme-secondary-bg: var(--secondary);
    --mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);
    --mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);
    --mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);
    --mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);
    --mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38);
    --mdc-theme-text-primary-on-dark: white;
    --mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);
    --mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);
    --mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5);
    @each $key, $value in get("colors") {
        --#{$key}: #{$value};
    }
}

@each $key, $value in get("colors") {
    .bg-#{$key} {
        --mdc-theme-primary: #{$value};
        --mdc-theme-secondary: #{$value};
        --mdc-theme-background: #{$value};
        --mdc-theme-surface: #{$value};
        @each $key2, $value2 in get("texts.on-#{$key}") {
            // #{$key2}: var(--on-#{$key}-#{$key2});
            #{$key2}: var(--on-#{$key}-#{$key2}, $value2);
            @if ($key2 == "color") {
                --mdc-theme-on-primary: #{$value2};
                --mdc-theme-on-secondary: #{$value2};
                --mdc-theme-on-background: #{$value2};
                --mdc-theme-on-surface: #{$value2};
            }
        }
        a {
            @each $key2, $value2 in get("texts.link-on-#{$key}") {
                // #{$key2}: var(--link-on-#{$key}-#{$key2});
                #{$key2}: var(--link-on-#{$key}-#{$key2}, $value2);
                @if ($key2 == "color") {
                    --mdc-theme-on-primary: #{$value2};
                    --mdc-theme-on-secondary: #{$value2};
                    --mdc-theme-on-background: #{$value2};
                    --mdc-theme-on-surface: #{$value2};
                }
            }

            &:hover {
                @each $key2, $value2 in get("texts.hover-on-link-on-#{$key}") {
                    // #{$key2}: var(--hover-on-link-on-#{$key}-#{$key2});
                    #{$key2}: var(--hover-on-link-on-#{$key}-#{$key2}, $value2);
                    @if ($key2 == "color") {
                        --mdc-theme-on-primary: #{$value2};
                        --mdc-theme-on-secondary: #{$value2};
                        --mdc-theme-on-background: #{$value2};
                        --mdc-theme-on-surface: #{$value2};
                    }
                }
            }
        }
    }
}
