/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "node_modules_node-sass_lib_sync_recursive-shared_tailwind_config_ts-package_json";
exports.ids = ["node_modules_node-sass_lib_sync_recursive-shared_tailwind_config_ts-package_json"];
exports.modules = {

/***/ "../../node_modules/node-sass/lib sync recursive":
/*!**********************************************!*\
  !*** ../../node_modules/node-sass/lib/ sync ***!
  \**********************************************/
/***/ ((module) => {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../node_modules/node-sass/lib sync recursive\";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://blazor-app/../../node_modules/node-sass/lib/_sync?");

/***/ }),

/***/ "../shared/paths.ts":
/*!**************************!*\
  !*** ../shared/paths.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.sharedPaths = void 0;\r\nconst paths_1 = __webpack_require__(/*! @root/paths */ \"../../paths.ts\");\r\nexports.sharedPaths = paths_1.rootPaths.apps.shared;\r\n\n\n//# sourceURL=webpack://blazor-app/../shared/paths.ts?");

/***/ }),

/***/ "../shared/src/web/material/variables/export.ts":
/*!******************************************************!*\
  !*** ../shared/src/web/material/variables/export.ts ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.materialVariables = void 0;\r\nconst sass_export_1 = __webpack_require__(/*! sass-export */ \"../../node_modules/sass-export/dist/index.js\");\r\nconst paths_1 = __webpack_require__(/*! @shared/paths */ \"../shared/paths.ts\");\r\nconst scss_parser_1 = __importDefault(__webpack_require__(/*! scss-parser */ \"../../node_modules/scss-parser/lib/index.js\"));\r\nconst node_sass_1 = __importDefault(__webpack_require__(/*! node-sass */ \"../../node_modules/node-sass/lib/index.js\"));\r\nconst tinycolor2_1 = __importDefault(__webpack_require__(/*! tinycolor2 */ \"../../node_modules/tinycolor2/tinycolor.js\"));\r\nconst options = {\r\n    inputFiles: [\r\n        paths_1.sharedPaths.src.web.material.variables['_material-colors.scss'].toAbsolutePath(),\r\n        paths_1.sharedPaths.src.web.material.variables['_color-types.scss'].toAbsolutePath(),\r\n        paths_1.sharedPaths.src.web.material.variables['_texts-input.scss'].toAbsolutePath(),\r\n        paths_1.sharedPaths.src.web.material.variables['_colors-input.scss'].toAbsolutePath(),\r\n        paths_1.sharedPaths.src.web.material.variables['_text-color-schemes.scss'].toAbsolutePath(),\r\n    ],\r\n};\r\n// import toExport from './index.json';\r\nconst toExport = sass_export_1.exporter(options).getStructured();\r\nfunction parseAst(ast) {\r\n    const toReturn = {};\r\n    switch (ast.type) {\r\n        case 'stylesheet':\r\n            return parseAst(ast.value[0]);\r\n        case 'parentheses':\r\n            ast.value\r\n                .filter((v) => v.type !== 'space')\r\n                .forEach((declaration) => {\r\n                toReturn[declaration.value[0].value[0].value] = parseAst(declaration.value[2]);\r\n            });\r\n            return toReturn;\r\n        case 'value':\r\n            if (ast.value.filter) {\r\n                ast.value = ast.value.filter((v) => v.type !== 'space');\r\n            }\r\n            return parseAst(ast.value[0]);\r\n        case 'identifier':\r\n            return ast.value;\r\n        case 'variable':\r\n            return `$${ast.value}`;\r\n        case 'function':\r\n            const args = ast.value[1].value\r\n                .filter((v) => v.type !== 'punctuation' && v.type !== 'space')\r\n                .map((v) => parseAst(v));\r\n            const ident = ast.value[0].value;\r\n            const finalFunction = `${ident}(${args.join(',')})`;\r\n            if (/^rgba?$/.test(ident)) {\r\n                return getHexColor(finalFunction);\r\n            }\r\n            return finalFunction;\r\n        case 'attribute':\r\n            return ast.value.filter((v) => v.type !== 'punctuation').map((v) => parseAst(v));\r\n        case 'color_hex':\r\n            return `#${ast.value}`;\r\n        case 'string_double':\r\n        case 'number':\r\n        default:\r\n            return ast.value;\r\n    }\r\n}\r\nexports.materialVariables = toExport.variables.reduce((acc, curr) => {\r\n    // const jsName = changeCase.camelCase(curr.nam);\r\n    const jsName = curr.name;\r\n    if (curr.mapValue) {\r\n        const parsed = parseAst(scss_parser_1.default.parse(curr.value));\r\n        acc[jsName] = parsed;\r\n    }\r\n    else if (/\\s?,\\s+/.test(curr.compiledValue)) {\r\n        acc[jsName] = curr.compiledValue.split(/\\s?\"?,\\s+\"?\\s*/);\r\n    }\r\n    else {\r\n        acc[jsName] = curr.compiledValue;\r\n    }\r\n    return acc;\r\n}, {});\r\nfunction getHexColor(color) {\r\n    const c = /color:\\s*(.+);/m.exec(node_sass_1.default.renderSync({ data: `body{color:${color}}`, outputStyle: 'compact' }).css.toString())[1];\r\n    return tinycolor2_1.default(c).toHexString();\r\n}\r\n\n\n//# sourceURL=webpack://blazor-app/../shared/src/web/material/variables/export.ts?");

/***/ }),

/***/ "../shared/src/web/tailwind/tailwind.colors.ts":
/*!*****************************************************!*\
  !*** ../shared/src/web/tailwind/tailwind.colors.ts ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.texts = exports.colors = exports.tailwindColors = void 0;\r\nconst tinycolor2_1 = __importDefault(__webpack_require__(/*! tinycolor2 */ \"../../node_modules/tinycolor2/tinycolor.js\"));\r\nconst color_1 = __webpack_require__(/*! ./utils/color */ \"../shared/src/web/tailwind/utils/color.ts\");\r\nconst deepmerge_1 = __importDefault(__webpack_require__(/*! deepmerge */ \"../../node_modules/deepmerge/dist/cjs.js\"));\r\nconst export_1 = __webpack_require__(/*! ../material/variables/export */ \"../shared/src/web/material/variables/export.ts\");\r\nconst node_sass_1 = __importDefault(__webpack_require__(/*! node-sass */ \"../../node_modules/node-sass/lib/index.js\"));\r\nconst lodash_1 = __importDefault(__webpack_require__(/*! lodash */ \"../../node_modules/lodash/lodash.js\"));\r\nconst colorsInput = export_1.materialVariables['$colors-input'];\r\nconst textsInput = export_1.materialVariables['$texts-input'];\r\nconst materialColors = export_1.materialVariables['$material-colors'];\r\nconst subTypes = export_1.materialVariables['$color-types'];\r\nconst textColorSchemes = export_1.materialVariables['$text-color-schemes'];\r\nconst textLinkColorsInput = export_1.materialVariables['$text-links-input'];\r\nconsole.log('CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC');\r\nconsole.dir(export_1.materialVariables);\r\nconst lightenDarkenDegree = 15;\r\nconst customColors = color_1.generate(colorsInput);\r\nconst convertedMaterialColors = Object.keys(materialColors).reduce((acc, curr) => {\r\n    const lastIndexOf = curr.lastIndexOf('-');\r\n    if (!acc[curr] && lastIndexOf === -1) {\r\n        acc[curr] = {\r\n            DEFAULT: materialColors[curr],\r\n        };\r\n    }\r\n    if (lastIndexOf !== -1) {\r\n        const label = curr.substr(0, lastIndexOf);\r\n        const subLabel = curr.substr(lastIndexOf + 1);\r\n        if (acc[label]) {\r\n            if (subLabel == '500') {\r\n                acc[label]['DEFAULT'] = materialColors[curr];\r\n            }\r\n            acc[label][subLabel] = materialColors[curr];\r\n        }\r\n    }\r\n    return acc;\r\n}, {});\r\nObject.keys(colorsInput).forEach((key) => {\r\n    const color = colorsInput[key];\r\n    if (convertedMaterialColors[color]) {\r\n        subTypes.forEach((num) => {\r\n            if (customColors[key] && convertedMaterialColors[color] && convertedMaterialColors[color][num]) {\r\n                customColors[key][num] = convertedMaterialColors[color][num];\r\n            }\r\n        });\r\n    }\r\n    customColors[key]['DEFAULT'] = customColors[key][500];\r\n});\r\nexports.tailwindColors = deepmerge_1.default(convertedMaterialColors, customColors);\r\nexports.colors = Object.keys(exports.tailwindColors).reduce((acc, curr) => {\r\n    const color = exports.tailwindColors[curr];\r\n    const toReturn = Object.keys(color).reduce((acc2, curr2) => {\r\n        const finalColor = color[curr2];\r\n        let key = curr;\r\n        if (curr2 !== 'DEFAULT') {\r\n            key += `-${curr2}`;\r\n        }\r\n        acc2[key] = finalColor;\r\n        return acc2;\r\n    }, {});\r\n    Object.assign(acc, toReturn);\r\n    return acc;\r\n}, {});\r\n// export const colorsUtilities = {};\r\nexports.texts = Object.keys(exports.colors).reduce((acc, label) => {\r\n    const color = exports.colors[label];\r\n    const isDark = isColorDark(color);\r\n    const textColor = textsInput[isDark ? 'light' : 'dark'];\r\n    const textLinkColor = textLinkColorsInput[isDark ? 'light' : 'dark'];\r\n    acc[`on-${label}`] = getCssObj(textColor.primary);\r\n    acc[`link-on-${label}`] = getCssObj(textLinkColor.primary);\r\n    acc[`hover-on-link-on-${label}`] = textLinkColor.primary['&:hover'];\r\n    textColorSchemes.forEach((textColorScheme) => {\r\n        acc[`text-${textColorScheme}-on-${label}`] = getCssObj(textColor[textColorScheme]);\r\n        acc[`link-${textColorScheme}-on-${label}`] = getCssObj(textLinkColor[textColorScheme]);\r\n        acc[`hover-on-link-${textColorScheme}-on-${label}`] = textLinkColor[textColorScheme]['&:hover'];\r\n    });\r\n    return acc;\r\n}, {});\r\nfunction isColorDark(color) {\r\n    const c = /color:\\s*(.+);/m.exec(node_sass_1.default.renderSync({ data: `body{color:${color}}`, outputStyle: 'compact' }).css.toString())[1];\r\n    return tinycolor2_1.default(c).isDark();\r\n}\r\nfunction getCssObj(obj) {\r\n    return lodash_1.default.omitBy(obj, (value, key) => {\r\n        return key.startsWith('&');\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://blazor-app/../shared/src/web/tailwind/tailwind.colors.ts?");

/***/ }),

/***/ "../shared/src/web/tailwind/utils/color.ts":
/*!*************************************************!*\
  !*** ../shared/src/web/tailwind/utils/color.ts ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\n// Color generation utility borrowed from\r\n// https://github.com/mbitson/mcg/blob/c484a34a4f670d75b7a0824bbdc9945703e3a4f8/scripts/controllers/ColorGeneratorCtrl.js\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.generate = void 0;\r\nconst tinycolor2_1 = __importDefault(__webpack_require__(/*! tinycolor2 */ \"../../node_modules/tinycolor2/tinycolor.js\"));\r\nfunction multiply(rgb1, rgb2) {\r\n    rgb1.b = Math.floor((rgb1.b * rgb2.b) / 255);\r\n    rgb1.g = Math.floor((rgb1.g * rgb2.g) / 255);\r\n    rgb1.r = Math.floor((rgb1.r * rgb2.r) / 255);\r\n    return tinycolor2_1.default('rgb ' + rgb1.r + ' ' + rgb1.g + ' ' + rgb1.b);\r\n}\r\nconst o = (value, name) => ({\r\n    [name]: tinycolor2_1.default(value).toHexString(),\r\n});\r\nconst white = tinycolor2_1.default('#ffffff');\r\nfunction buildPaletteByVarColor(varColor) {\r\n    return {\r\n        '50': `var(${varColor}-50)`,\r\n        '200': `var(${varColor}-200)`,\r\n        '300': `var(${varColor}-300)`,\r\n        '400': `var(${varColor}-400)`,\r\n        '500': `var(${varColor}-500)`,\r\n        '600': `var(${varColor}-600)`,\r\n        '700': `var(${varColor}-700)`,\r\n        '800': `var(${varColor}-800)`,\r\n        '900': `var(${varColor}-900)`,\r\n        'trans-light': `var(${varColor}-trans-light)`,\r\n        trans: `var(${varColor}-trans)`,\r\n        'trans-dark': `var(${varColor}-trans-dark)`,\r\n        a100: `var(${varColor}-a100)`,\r\n        a200: `var(${varColor}-a200)`,\r\n        a400: `var(${varColor}-a400)`,\r\n        a700: `var(${varColor}-a700)`,\r\n    };\r\n}\r\nfunction buildPalette(hex) {\r\n    const varColorMatch = hex.match(/var\\((?<color>[^\\)]+)/);\r\n    if (!!varColorMatch) {\r\n        return buildPaletteByVarColor(varColorMatch.groups.color);\r\n    }\r\n    const baseDark = multiply(tinycolor2_1.default(hex).toRgb(), tinycolor2_1.default(hex).toRgb());\r\n    const baseTriad = tinycolor2_1.default(hex).tetrad();\r\n    const lightest = o(tinycolor2_1.default.mix(white, hex, 30), '50');\r\n    return {\r\n        'trans-light': tinycolor2_1.default(lightest[50]).toRgbString().replace(')', ', 0.15)').replace('rgb(', 'rgba('),\r\n        trans: tinycolor2_1.default(lightest[50]).toRgbString().replace(')', ', 0.7)').replace('rgb(', 'rgba('),\r\n        'trans-dark': tinycolor2_1.default(hex).toRgbString().replace(')', ', 0.15)').replace('rgb(', 'rgba('),\r\n        ...o(tinycolor2_1.default.mix(white, hex, 12), '50'),\r\n        ...lightest,\r\n        ...o(tinycolor2_1.default.mix(white, hex, 50), '200'),\r\n        ...o(tinycolor2_1.default.mix(white, hex, 70), '300'),\r\n        ...o(tinycolor2_1.default.mix(white, hex, 85), '400'),\r\n        ...o(tinycolor2_1.default.mix(white, hex, 100), '500'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, hex, 87), '600'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, hex, 70), '700'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, hex, 54), '800'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, hex, 25), '900'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, baseTriad[3], 15).saturate(80).lighten(65), 'a100'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, baseTriad[3], 15).saturate(80).lighten(55), 'a200'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, baseTriad[3], 15).saturate(100).lighten(45), 'a400'),\r\n        ...o(tinycolor2_1.default.mix(baseDark, baseTriad[3], 15).saturate(100).lighten(40), 'a700'),\r\n    };\r\n}\r\nfunction generate(colors) {\r\n    return Object.keys(colors).reduce((acc, cur) => ({\r\n        ...acc,\r\n        [cur]: buildPalette(colors[cur]),\r\n    }), {});\r\n}\r\nexports.generate = generate;\r\n\n\n//# sourceURL=webpack://blazor-app/../shared/src/web/tailwind/utils/color.ts?");

/***/ }),

/***/ "../shared/tailwind.config.ts":
/*!************************************!*\
  !*** ../shared/tailwind.config.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst deepmerge_1 = __importDefault(__webpack_require__(/*! deepmerge */ \"../../node_modules/deepmerge/dist/cjs.js\"));\r\n// eslint-disable-next-line @typescript-eslint/no-var-requires\r\n// const plugin = require('tailwindcss/plugin');\r\nconst plugin_1 = __importDefault(__webpack_require__(/*! tailwindcss/plugin */ \"../../node_modules/tailwindcss/plugin.js\"));\r\nconst export_1 = __webpack_require__(/*! ./src/web/material/variables/export */ \"../shared/src/web/material/variables/export.ts\");\r\nconst tailwind_colors_1 = __webpack_require__(/*! ./src/web/tailwind/tailwind.colors */ \"../shared/src/web/tailwind/tailwind.colors.ts\");\r\nconst colorsInput = export_1.materialVariables['$colors-input'];\r\nconst materialColors = export_1.materialVariables['$material-colors'];\r\nconst subTypes = export_1.materialVariables['$sub-types'];\r\nconst textColorSchemes = export_1.materialVariables['$text-color-schemes'];\r\nconst textsInput = export_1.materialVariables['$text-input'];\r\nconst defaultColors = {\r\n// primary: '#b027b0',\r\n// secondary: '#009688',\r\n// error: '#f44336',\r\n// success: '#4caf50',\r\n// alert: '#ff9800',\r\n// blue: '#2196f3',\r\n// dark: '#212121',\r\n// These are material palette colors. You should keep only colors that you're using.\r\n// red: \"#f44336\",\r\n// pink: \"#e91e63\",\r\n// purple: \"#9c27b0\",\r\n// \"deep-purple\": \"#673ab7\",\r\n// indigo: \"#3f51b5\",\r\n// blue: \"#2196f3\",\r\n// \"light-blue\": \"#03a9f4\",\r\n// cyan: \"#00bcd4\",\r\n// teal: \"#009688\",\r\n// green: \"#4caf50\",\r\n// \"light-green\": \"#8bc34a\",\r\n// lime: \"#cddc39\",\r\n// yellow: \"#ffeb3b\",\r\n// amber: \"#ffc107\",\r\n// orange: \"#ff9800\",\r\n// \"deep-orange\": \"#ff5722\",\r\n// brown: \"#795548\"\r\n};\r\nconsole.dir(tailwind_colors_1.tailwindColors);\r\n// console.dir(colorsUtilities);\r\n// console.dir(textColors);\r\nexports.default = deepmerge_1.default({}, {\r\n    // important: true,\r\n    purge: [],\r\n    theme: {\r\n        extend: {\r\n            colors: deepmerge_1.default(tailwind_colors_1.tailwindColors, defaultColors),\r\n        },\r\n        // fontSize: {},\r\n        // breakpoints: {},\r\n        // lineHeight: {},\r\n    },\r\n    variants: {},\r\n    plugins: [\r\n        // tailwindImportant(),\r\n        // tailwindcssElevation(['responsive'], {\r\n        //     // color: '77,192,181',\r\n        //     // opacityBoost: '0.23'\r\n        // }),\r\n        plugin_1.default(function ({ addUtilities, addComponents, e, prefix, config, addBase }) {\r\n            const newUtilities = {\r\n            // '.skew-10deg': {\r\n            //     transform: 'skewY(-10deg)',\r\n            // },\r\n            // '.skew-15deg': {\r\n            //     transform: 'skewY(-15deg)',\r\n            // },\r\n            };\r\n            // addUtilities(colorsUtilities);\r\n        }),\r\n        // plugin(function ({ addBase, config }) {\r\n        //     addBase({\r\n        //         h1: { fontSize: config('theme.fontSize.3xl') },\r\n        //         h2: { fontSize: config('theme.fontSize.2xl') },\r\n        //         h3: { fontSize: config('theme.fontSize.xl') },\r\n        //         h4: { fontSize: config('theme.fontSize.lg') },\r\n        //     });\r\n        // }),\r\n    ],\r\n});\r\n\n\n//# sourceURL=webpack://blazor-app/../shared/tailwind.config.ts?");

/***/ }),

/***/ "../../package.json":
/*!**************************!*\
  !*** ../../package.json ***!
  \**************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"name\":\"client\",\"version\":\"1.0.0\",\"private\":true,\"description\":\"\",\"keywords\":[],\"license\":\"ISC\",\"author\":\"\",\"main\":\"index.js\",\"scripts\":{\"lint\":\"cross-env NODE_OPTIONS=--max_old_space_size=4096 eslint **/*.ts --fix --no-eslintrc -c .eslintrc.json\",\"setup\":\"ts-node -r tsconfig-paths/register ./scripts/generate-scripts.ts\",\"setup:shared\":\"cd ./apps/shared && npm run setup\",\"setup:blazor\":\"cd ./apps/blazor-app && npm run setup\",\"setup:auth\":\"cd ./apps/auth && npm run setup\",\"setup:all\":\"npm-run-all --parallel \\\\\"setup -- {@}\\\\\" --\",\"prebuild\":\"rimraf dist\",\"prebuild:shared\":\"cd ./apps/shared && npm run prebuild\",\"prebuild:blazor\":\"cd ./apps/blazor-app && npm run prebuild\",\"prebuild:auth\":\"cd ./apps/auth && npm run prebuild\",\"prebuild:all\":\"npm-run-all --parallel \\\\\"prebuild:shared -- {@}\\\\\" \\\\\"prebuild:blazor -- {@}\\\\\" \\\\\"prebuild:auth -- {@}\\\\\" --\",\"build\":\"nest build\",\"build:shared\":\"cd ./apps/shared && npm run build\",\"build:blazor\":\"cd ./apps/blazor-app && npm run build\",\"build:auth\":\"cd ./apps/auth && npm run build\",\"build:all\":\"npm-run-all --parallel \\\\\"build:shared -- {@}\\\\\" \\\\\"build:blazor -- {@}\\\\\" \\\\\"build:auth -- {@}\\\\\" --\",\"format\":\"prettier --write \\\\\"src/**/*.ts\\\\\" \\\\\"test/**/*.ts\\\\\"\",\"format:shared\":\"cd ./apps/shared && npm run format\",\"format:blazor\":\"cd ./apps/blazor-app && npm run format\",\"format:auth\":\"cd ./apps/auth && npm run format\",\"format:all\":\"npm-run-all --parallel \\\\\"format:shared -- {@}\\\\\" \\\\\"format:blazor -- {@}\\\\\" \\\\\"format:auth -- {@}\\\\\" --\",\"start\":\"nest start\",\"start:shared\":\"cd ./apps/shared && npm run start\",\"start:blazor\":\"cd ./apps/blazor-app && npm run start\",\"start:auth\":\"cd ./apps/auth && npm run start\",\"start:all\":\"npm-run-all --parallel \\\\\"start:shared -- {@}\\\\\" \\\\\"start:blazor -- {@}\\\\\" \\\\\"start:auth -- {@}\\\\\" --\",\"start:dev\":\"nest start --watch --debug --progress\",\"start:dev:shared\":\"cd ./apps/shared && npm run start:dev\",\"start:dev:blazor\":\"cd ./apps/blazor-app && npm run start:dev\",\"start:dev:auth\":\"cd ./apps/auth && npm run start:dev\",\"start:dev:all\":\"npm-run-all --parallel \\\\\"start:dev:shared -- {@}\\\\\" \\\\\"start:dev:blazor -- {@}\\\\\" \\\\\"start:dev:auth -- {@}\\\\\" --\",\"start:debug\":\"nest start --debug --watch\",\"start:debug:shared\":\"cd ./apps/shared && npm run start:debug\",\"start:debug:blazor\":\"cd ./apps/blazor-app && npm run start:debug\",\"start:debug:auth\":\"cd ./apps/auth && npm run start:debug\",\"start:debug:all\":\"npm-run-all --parallel \\\\\"start:debug:shared -- {@}\\\\\" \\\\\"start:debug:blazor -- {@}\\\\\" \\\\\"start:debug:auth -- {@}\\\\\" --\",\"start:prod\":\"node dist/main\",\"start:prod:shared\":\"cd ./apps/shared && npm run start:prod\",\"start:prod:blazor\":\"cd ./apps/blazor-app && npm run start:prod\",\"start:prod:auth\":\"cd ./apps/auth && npm run start:prod\",\"start:prod:all\":\"npm-run-all --parallel \\\\\"start:prod:shared -- {@}\\\\\" \\\\\"start:prod:blazor -- {@}\\\\\" \\\\\"start:prod:auth -- {@}\\\\\" --\",\"test\":\"jest\",\"test:shared\":\"cd ./apps/shared && npm run test\",\"test:blazor\":\"cd ./apps/blazor-app && npm run test\",\"test:auth\":\"cd ./apps/auth && npm run test\",\"test:all\":\"npm-run-all --parallel \\\\\"test:shared -- {@}\\\\\" \\\\\"test:blazor -- {@}\\\\\" \\\\\"test:auth -- {@}\\\\\" --\",\"test:watch\":\"jest --watch\",\"test:watch:shared\":\"cd ./apps/shared && npm run test:watch\",\"test:watch:blazor\":\"cd ./apps/blazor-app && npm run test:watch\",\"test:watch:auth\":\"cd ./apps/auth && npm run test:watch\",\"test:watch:all\":\"npm-run-all --parallel \\\\\"test:watch:shared -- {@}\\\\\" \\\\\"test:watch:blazor -- {@}\\\\\" \\\\\"test:watch:auth -- {@}\\\\\" --\",\"test:cov\":\"jest --coverage\",\"test:cov:shared\":\"cd ./apps/shared && npm run test:cov\",\"test:cov:blazor\":\"cd ./apps/blazor-app && npm run test:cov\",\"test:cov:auth\":\"cd ./apps/auth && npm run test:cov\",\"test:cov:all\":\"npm-run-all --parallel \\\\\"test:cov:shared -- {@}\\\\\" \\\\\"test:cov:blazor -- {@}\\\\\" \\\\\"test:cov:auth -- {@}\\\\\" --\",\"test:debug\":\"node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand\",\"test:debug:shared\":\"cd ./apps/shared && npm run test:debug\",\"test:debug:blazor\":\"cd ./apps/blazor-app && npm run test:debug\",\"test:debug:auth\":\"cd ./apps/auth && npm run test:debug\",\"test:debug:all\":\"npm-run-all --parallel \\\\\"test:debug:shared -- {@}\\\\\" \\\\\"test:debug:blazor -- {@}\\\\\" \\\\\"test:debug:auth -- {@}\\\\\" --\",\"test:e2e\":\"jest --config ./test/jest-e2e.json\",\"test:e2e:shared\":\"cd ./apps/shared && npm run test:e2e\",\"test:e2e:blazor\":\"cd ./apps/blazor-app && npm run test:e2e\",\"test:e2e:auth\":\"cd ./apps/auth && npm run test:e2e\",\"test:e2e:all\":\"npm-run-all --parallel \\\\\"test:e2e:shared -- {@}\\\\\" \\\\\"test:e2e:blazor -- {@}\\\\\" \\\\\"test:e2e:auth -- {@}\\\\\" --\",\"lint:shared\":\"cd ./apps/shared && npm run lint\",\"lint:blazor\":\"cd ./apps/blazor-app && npm run lint\",\"lint:auth\":\"cd ./apps/auth && npm run lint\",\"lint:all\":\"npm-run-all --parallel \\\\\"lint:shared -- {@}\\\\\" \\\\\"lint:blazor -- {@}\\\\\" \\\\\"lint:auth -- {@}\\\\\" --\",\"build:webpack\":\"cross-env NODE_OPTIONS=\\\\\"--max_old_space_size=4096 -r tsconfig-paths/register\\\\\" webpack --mode=development --config webpack.dev.ts\",\"build:webpack:shared\":\"cd ./apps/shared && npm run build:webpack\",\"build:webpack:blazor\":\"cd ./apps/blazor-app && npm run build:webpack\",\"build:webpack:auth\":\"cd ./apps/auth && npm run build:webpack\",\"build:webpack:all\":\"npm-run-all --parallel \\\\\"build:webpack:shared -- {@}\\\\\" \\\\\"build:webpack:blazor -- {@}\\\\\" \\\\\"build:webpack:auth -- {@}\\\\\" --\",\"build:prod:webpack\":\"cross-env NODE_OPTIONS=\\\\\"--max_old_space_size=4096 -r tsconfig-paths/register\\\\\" webpack --mode=production --config webpack.prod.ts\",\"build:prod:webpack:shared\":\"cd ./apps/shared && npm run build:prod:webpack\",\"build:prod:webpack:blazor\":\"cd ./apps/blazor-app && npm run build:prod:webpack\",\"build:prod:webpack:auth\":\"cd ./apps/auth && npm run build:prod:webpack\",\"build:prod:webpack:all\":\"npm-run-all --parallel \\\\\"build:prod:webpack:shared -- {@}\\\\\" \\\\\"build:prod:webpack:blazor -- {@}\\\\\" \\\\\"build:prod:webpack:auth -- {@}\\\\\" --\",\"watch:webpack\":\"cross-env NODE_OPTIONS=\\\\\"--max_old_space_size=4096 -r tsconfig-paths/register\\\\\" webpack --mode=development --watch --config webpack.dev.ts\",\"watch:webpack:shared\":\"cd ./apps/shared && npm run watch:webpack\",\"watch:webpack:blazor\":\"cd ./apps/blazor-app && npm run watch:webpack\",\"watch:webpack:auth\":\"cd ./apps/auth && npm run watch:webpack\",\"watch:webpack:all\":\"npm-run-all --parallel \\\\\"watch:webpack:shared -- {@}\\\\\" \\\\\"watch:webpack:blazor -- {@}\\\\\" \\\\\"watch:webpack:auth -- {@}\\\\\" --\",\"watch:prod:webpack\":\"cross-env NODE_OPTIONS=\\\\\"--max_old_space_size=4096 -r tsconfig-paths/register\\\\\" webpack --mode=production --watch --config webpack.prod.ts\",\"watch:prod:webpack:shared\":\"cd ./apps/shared && npm run watch:prod:webpack\",\"watch:prod:webpack:blazor\":\"cd ./apps/blazor-app && npm run watch:prod:webpack\",\"watch:prod:webpack:auth\":\"cd ./apps/auth && npm run watch:prod:webpack\",\"watch:prod:webpack:all\":\"npm-run-all --parallel \\\\\"watch:prod:webpack:shared -- {@}\\\\\" \\\\\"watch:prod:webpack:blazor -- {@}\\\\\" \\\\\"watch:prod:webpack:auth -- {@}\\\\\" --\",\"start:pwa\":\"http-server dist\",\"start:pwa:shared\":\"cd ./apps/shared && npm run start:pwa\",\"start:pwa:blazor\":\"cd ./apps/blazor-app && npm run start:pwa\",\"start:pwa:auth\":\"cd ./apps/auth && npm run start:pwa\",\"start:pwa:all\":\"npm-run-all --parallel \\\\\"start:pwa:shared -- {@}\\\\\" \\\\\"start:pwa:blazor -- {@}\\\\\" \\\\\"start:pwa:auth -- {@}\\\\\" --\",\"start:webpack:devserver\":\"webpack-dev-server --open --config webpack.dev.ts\",\"start:webpack:devserver:shared\":\"cd ./apps/shared && npm run start:webpack:devserver\",\"start:webpack:devserver:blazor\":\"cd ./apps/blazor-app && npm run start:webpack:devserver\",\"start:webpack:devserver:auth\":\"cd ./apps/auth && npm run start:webpack:devserver\",\"start:webpack:devserver:all\":\"npm-run-all --parallel \\\\\"start:webpack:devserver:shared -- {@}\\\\\" \\\\\"start:webpack:devserver:blazor -- {@}\\\\\" \\\\\"start:webpack:devserver:auth -- {@}\\\\\" --\",\"start:webpack:devserver:prod\":\"webpack-dev-server --open --config webpack.prod.ts\",\"start:webpack:devserver:prod:shared\":\"cd ./apps/shared && npm run start:webpack:devserver:prod\",\"start:webpack:devserver:prod:blazor\":\"cd ./apps/blazor-app && npm run start:webpack:devserver:prod\",\"start:webpack:devserver:prod:auth\":\"cd ./apps/auth && npm run start:webpack:devserver:prod\",\"start:webpack:devserver:prod:all\":\"npm-run-all --parallel \\\\\"start:webpack:devserver:prod:shared -- {@}\\\\\" \\\\\"start:webpack:devserver:prod:blazor -- {@}\\\\\" \\\\\"start:webpack:devserver:prod:auth -- {@}\\\\\" --\",\"watch\":\"\",\"watch:shared\":\"cd ./apps/shared && npm run watch\",\"watch:blazor\":\"cd ./apps/blazor-app && npm run watch\",\"watch:auth\":\"cd ./apps/auth && npm run watch\",\"watch:all\":\"npm-run-all --parallel \\\\\"watch:shared -- {@}\\\\\" \\\\\"watch:blazor -- {@}\\\\\" \\\\\"watch:auth -- {@}\\\\\" --\",\"watch:dotnet\":\"dotnet watch run\",\"watch:dotnet:shared\":\"cd ./apps/shared && npm run watch:dotnet\",\"watch:dotnet:blazor\":\"cd ./apps/blazor-app && npm run watch:dotnet\",\"watch:dotnet:auth\":\"cd ./apps/auth && npm run watch:dotnet\",\"watch:dotnet:all\":\"npm-run-all --parallel \\\\\"watch:dotnet:shared -- {@}\\\\\" \\\\\"watch:dotnet:blazor -- {@}\\\\\" \\\\\"watch:dotnet:auth -- {@}\\\\\" --\",\"inst\":\"npm install\",\"inst:shared\":\"cd ./apps/shared && npm run inst\",\"inst:blazor\":\"cd ./apps/blazor-app && npm run inst\",\"inst:auth\":\"cd ./apps/auth && npm run inst\",\"inst:all\":\"npm-run-all --parallel \\\\\"inst -- {@}\\\\\" \\\\\"inst:shared -- {@}\\\\\" \\\\\"inst:blazor -- {@}\\\\\" \\\\\"inst:auth -- {@}\\\\\" --\",\"inst:force\":\"npm install --force\",\"inst:force:shared\":\"cd ./apps/shared && npm run inst:force\",\"inst:force:blazor\":\"cd ./apps/blazor-app && npm run inst:force\",\"inst:force:auth\":\"cd ./apps/auth && npm run inst:force\",\"inst:force:all\":\"npm-run-all --parallel \\\\\"inst:force -- {@}\\\\\" \\\\\"inst:force:shared -- {@}\\\\\" \\\\\"inst:force:blazor -- {@}\\\\\" \\\\\"inst:force:auth -- {@}\\\\\" --\",\"uninst\":\"npm uninstall\",\"uninst:shared\":\"cd ./apps/shared && npm run uninst\",\"uninst:blazor\":\"cd ./apps/blazor-app && npm run uninst\",\"uninst:auth\":\"cd ./apps/auth && npm run uninst\",\"uninst:all\":\"npm-run-all --parallel \\\\\"uninst -- {@}\\\\\" \\\\\"uninst:shared -- {@}\\\\\" \\\\\"uninst:blazor -- {@}\\\\\" \\\\\"uninst:auth -- {@}\\\\\" --\",\"init\":\"npm install -D concurrently npm-run-all\",\"init:shared\":\"cd ./apps/shared && npm run init\",\"init:blazor\":\"cd ./apps/blazor-app && npm run init\",\"init:auth\":\"cd ./apps/auth && npm run init\",\"init:all\":\"npm-run-all --parallel \\\\\"init -- {@}\\\\\" \\\\\"init:shared -- {@}\\\\\" \\\\\"init:blazor -- {@}\\\\\" \\\\\"init:auth -- {@}\\\\\" --\",\"nuke\":\"rimraf node_modules\",\"nuke:shared\":\"cd ./apps/shared && npm run nuke\",\"nuke:blazor\":\"cd ./apps/blazor-app && npm run nuke\",\"nuke:auth\":\"cd ./apps/auth && npm run nuke\",\"nuke:all\":\"npm-run-all --parallel \\\\\"nuke -- {@}\\\\\" \\\\\"nuke:shared -- {@}\\\\\" \\\\\"nuke:blazor -- {@}\\\\\" \\\\\"nuke:auth -- {@}\\\\\" --\",\"reset\":\"npm run nuke && npm run init && npm run inst\",\"reset:shared\":\"cd ./apps/shared && npm run reset\",\"reset:blazor\":\"cd ./apps/blazor-app && npm run reset\",\"reset:auth\":\"cd ./apps/auth && npm run reset\",\"reset:all\":\"npm-run-all --parallel \\\\\"reset -- {@}\\\\\" \\\\\"reset:shared -- {@}\\\\\" \\\\\"reset:blazor -- {@}\\\\\" \\\\\"reset:auth -- {@}\\\\\" --\",\"generate:paths\":\"ts-node -r tsconfig-paths/register ./scripts/generate-paths.ts\",\"generate:paths:shared\":\"cd ./apps/shared && npm run generate:paths\",\"generate:paths:blazor\":\"cd ./apps/blazor-app && npm run generate:paths\",\"generate:paths:auth\":\"cd ./apps/auth && npm run generate:paths\",\"generate:paths:all\":\"npm-run-all --parallel \\\\\"generate:paths -- {@}\\\\\" --\"},\"dependencies\":{\"@fortawesome/fontawesome-free\":\"^5.15.3\",\"@icon/open-iconic\":\"^1.1.1-alpha.3\",\"@material/button\":\"^11.0.0\",\"@material/checkbox\":\"^11.0.0\",\"@material/drawer\":\"^11.0.0\",\"@material/icon-button\":\"^11.0.0\",\"@material/list\":\"^11.0.0\",\"@material/menu\":\"^11.0.0\",\"@material/snackbar\":\"^11.0.0\",\"@material/textfield\":\"^11.0.0\",\"@material/theme\":\"^11.0.0\",\"@material/tooltip\":\"^11.0.0\",\"@material/top-app-bar\":\"^11.0.0\",\"@material/typography\":\"^11.0.0\",\"@microsoft/microsoft-graph-client\":\"^2.2.1\",\"@nestjs/cli\":\"^7.6.0\",\"@nestjs/common\":\"^7.6.17\",\"@nestjs/core\":\"^7.6.17\",\"@nestjs/platform-express\":\"^7.6.17\",\"bootstrap\":\"^5.0.1\",\"bootstrap-icons\":\"^1.5.0\",\"change-case\":\"^4.1.2\",\"css-color-converter\":\"^2.0.0\",\"deepmerge\":\"^4.2.2\",\"escape-string-regexp\":\"^5.0.0\",\"express\":\"^4.17.1\",\"fast-deep-equal\":\"^3.1.3\",\"fiber\":\"^1.0.4\",\"glob-base\":\"^0.3.0\",\"glob-to-regexp\":\"^0.4.1\",\"immutability-helper\":\"^3.1.1\",\"injection-js\":\"^2.4.0\",\"jquery\":\"^3.6.0\",\"jquery-validation\":\"^1.19.3\",\"jquery-validation-unobtrusive\":\"^3.2.12\",\"material-colors\":\"^1.2.6\",\"material-components-web\":\"^11.0.0\",\"material-design-icons\":\"^3.0.1\",\"path-browserify\":\"^1.0.1\",\"path-to-regexp\":\"^6.2.0\",\"react\":\"^17.0.2\",\"reflect-metadata\":\"^0.1.13\",\"rxjs\":\"~7.1.0\",\"sanitize-filename\":\"^1.6.3\",\"sass-material-colors\":\"0.0.5\",\"slash\":\"^4.0.0\",\"symlink-dir\":\"^5.0.1\",\"tinycolor\":\"0.0.1\",\"tinycolor2\":\"^1.4.2\",\"ts-nameof\":\"^5.0.0\",\"ts-simple-nameof\":\"^1.3.1\",\"tslib\":\"^2.2.0\",\"tsyringe\":\"^4.5.0\",\"uuid\":\"^8.3.2\",\"workbox-background-sync\":\"^6.1.5\",\"workbox-broadcast-update\":\"^6.1.5\",\"workbox-cacheable-response\":\"^6.1.5\",\"workbox-core\":\"^6.1.5\",\"workbox-expiration\":\"^6.1.5\",\"workbox-google-analytics\":\"^6.1.5\",\"workbox-navigation-preload\":\"^6.1.5\",\"workbox-precaching\":\"^6.1.5\",\"workbox-routing\":\"^6.1.5\",\"workbox-strategies\":\"^6.1.5\",\"workbox-sw\":\"^6.1.5\",\"workbox-window\":\"^6.1.5\",\"zone.js\":\"~0.11.4\"},\"devDependencies\":{\"@fullhuman/postcss-purgecss\":\"^4.0.3\",\"@nestjs/testing\":\"^7.6.17\",\"@prisma/cli\":\"^2.20.1\",\"@tailwindcss/aspect-ratio\":\"^0.2.1\",\"@tailwindcss/typography\":\"^0.4.1\",\"@teamsupercell/typings-for-css-modules-loader\":\"^2.5.1\",\"@types/clean-webpack-plugin\":\"^0.1.3\",\"@types/copy-webpack-plugin\":\"^8.0.0\",\"@types/css-minimizer-webpack-plugin\":\"^1.3.0\",\"@types/escape-string-regexp\":\"^2.0.1\",\"@types/eslint\":\"^7.2.12\",\"@types/glob-to-regexp\":\"^0.4.0\",\"@types/html-webpack-plugin\":\"^3.2.5\",\"@types/jasmine\":\"~3.7.6\",\"@types/jasminewd2\":\"~2.0.9\",\"@types/jest\":\"^26.0.23\",\"@types/lodash\":\"^4.14.170\",\"@types/mini-css-extract-plugin\":\"^1.4.3\",\"@types/node\":\"^15.6.1\",\"@types/optimize-css-assets-webpack-plugin\":\"^5.0.3\",\"@types/path-to-regexp\":\"^1.7.0\",\"@types/postcss-import\":\"^12.0.0\",\"@types/postcss-preset-env\":\"^6.7.2\",\"@types/postcss-reporter\":\"^7.0.0\",\"@types/prettier\":\"^2.2.3\",\"@types/sharp\":\"^0.28.2\",\"@types/stylelint\":\"^9.10.1\",\"@types/svg-sprite-loader\":\"^3.9.3\",\"@types/svg-spritemap-webpack-plugin\":\"^3.9.1\",\"@types/terser-webpack-plugin\":\"^5.0.3\",\"@types/tinycolor2\":\"^1.4.2\",\"@types/ts-nameof\":\"^4.2.1\",\"@types/webpack\":\"^5.28.0\",\"@types/webpack-bundle-analyzer\":\"^4.4.0\",\"@types/webpack-dev-server\":\"^3.11.4\",\"@types/webpack-merge\":\"^4.1.5\",\"@types/workbox-webpack-plugin\":\"^5.1.6\",\"@typescript-eslint/eslint-plugin\":\"^4.25.0\",\"@typescript-eslint/eslint-plugin-tslint\":\"^4.25.0\",\"@typescript-eslint/parser\":\"^4.25.0\",\"@typescript-eslint/typescript-estree\":\"^4.25.0\",\"@zerollup/ts-transform-paths\":\"^1.7.18\",\"astroturf\":\"^0.10.5\",\"autoprefixer\":\"^10.2.6\",\"chokidar\":\"^3.5.1\",\"class-transformer\":\"^0.4.0\",\"clean-webpack-plugin\":\"^3.0.0\",\"closure-webpack-plugin\":\"^2.5.0\",\"codelyzer\":\"^6.0.2\",\"concurrently\":\"^6.2.0\",\"copy-webpack-plugin\":\"^9.0.0\",\"copyfiles\":\"^2.4.1\",\"cross-env\":\"^7.0.3\",\"css-loader\":\"^5.2.6\",\"css-minimizer-webpack-plugin\":\"^3.0.0\",\"cssnano\":\"^5.0.5\",\"cssnext-loader\":\"^0.2.0\",\"csv-loader\":\"^3.0.3\",\"error-overlay-webpack-plugin\":\"^0.4.2\",\"eslint\":\"^7.27.0\",\"eslint-config-prettier\":\"^8.3.0\",\"eslint-plugin-prettier\":\"^3.4.0\",\"eslint-plugin-react\":\"^7.24.0\",\"eslint-plugin-unused-imports\":\"^1.1.1\",\"extra-watch-webpack-plugin\":\"^1.0.3\",\"extract-svg-sprite-webpack-plugin\":\"^0.8.1\",\"favicons-webpack-plugin\":\"^5.0.2\",\"fibers\":\"^5.0.0\",\"file-loader\":\"^6.2.0\",\"filewatcher-webpack-plugin\":\"^1.2.0\",\"glob\":\"^7.1.7\",\"google-closure-compiler\":\"^20210505.0.0\",\"graphviz\":\"0.0.9\",\"hex-rgb\":\"^5.0.0\",\"html-webpack-plugin\":\"^5.3.1\",\"http-server\":\"^0.12.3\",\"jasmine-core\":\"~3.7.1\",\"jasmine-spec-reporter\":\"~7.0.0\",\"jest\":\"^27.0.3\",\"karma\":\"~6.3.2\",\"karma-chrome-launcher\":\"~3.1.0\",\"karma-coverage-istanbul-reporter\":\"~3.0.3\",\"karma-jasmine\":\"~4.0.1\",\"karma-jasmine-html-reporter\":\"^1.6.0\",\"lerna\":\"^4.0.0\",\"loader-runner\":\"^4.2.0\",\"loader-utils\":\"^2.0.0\",\"madge\":\"^4.0.2\",\"mini-css-extract-plugin\":\"^1.6.0\",\"mini-svg-data-uri\":\"^1.3.3\",\"node-sass\":\"^6.0.0\",\"node-sass-js-importer\":\"^4.0.3\",\"node-sass-utils\":\"^1.1.3\",\"npm-run-all\":\"^4.1.5\",\"null-loader\":\"^4.0.1\",\"on-build-webpack\":\"^0.1.0\",\"optimize-css-assets-webpack-plugin\":\"^6.0.0\",\"postcss\":\"^8.3.0\",\"postcss-advanced-variables\":\"^3.0.1\",\"postcss-browser-reporter\":\"^0.6.0\",\"postcss-cli\":\"^8.3.1\",\"postcss-combine-duplicated-selectors\":\"^10.0.3\",\"postcss-comment\":\"^2.0.0\",\"postcss-conditionals\":\"^2.1.0\",\"postcss-cssnext\":\"^3.1.0\",\"postcss-each\":\"^1.0.0\",\"postcss-export-vars\":\"^0.2.0\",\"postcss-extend-rule\":\"^3.0.0\",\"postcss-font-magician\":\"^3.0.0\",\"postcss-for\":\"^2.1.1\",\"postcss-functions\":\"^4.0.2\",\"postcss-import\":\"^14.0.2\",\"postcss-loader\":\"^5.3.0\",\"postcss-nested\":\"^5.0.5\",\"postcss-nested-props\":\"^2.0.0\",\"postcss-preset-env\":\"^6.7.0\",\"postcss-raw-append\":\"^1.0.0\",\"postcss-reporter\":\"^7.0.2\",\"postcss-responsive-font\":\"^1.0.6\",\"postcss-responsive-type\":\"^1.0.0\",\"postcss-rfs-autopilot\":\"^1.1.3\",\"postcss-sassy-import\":\"^1.2.3\",\"postcss-scss\":\"^3.0.5\",\"postcss-simple-vars\":\"^6.0.3\",\"postcss-strip-inline-comments\":\"^0.1.5\",\"postcss-url\":\"^10.1.3\",\"precss\":\"^4.0.0\",\"prettier\":\"^2.3.0\",\"protractor\":\"~7.0.0\",\"remove-files-webpack-plugin\":\"^1.4.4\",\"require-from-string\":\"^2.0.2\",\"responsive-loader\":\"^2.3.0\",\"rfs\":\"^9.0.3\",\"rimraf\":\"^3.0.2\",\"sass\":\"^1.34.0\",\"sass-export\":\"^2.0.1\",\"sass-loader\":\"^11.1.1\",\"sast\":\"^0.8.1\",\"schema-utils\":\"^3.0.0\",\"scss-parser\":\"^1.0.4\",\"string-replace-loader\":\"^3.0.2\",\"style-loader\":\"^2.0.0\",\"stylelint\":\"^13.13.1\",\"stylelint-config-standard\":\"^22.0.0\",\"stylelint-scss\":\"^3.19.0\",\"supertest\":\"^6.1.3\",\"svelte\":\"^3.38.2\",\"svg-inline-loader\":\"^0.8.2\",\"svg-sprite-loader\":\"^6.0.7\",\"svg-spritemap-webpack-plugin\":\"^4.0.3\",\"svgo\":\"^2.3.0\",\"svgo-loader\":\"^3.0.0\",\"tailwind-css-variables\":\"^3.0.1\",\"tailwindcss\":\"npm:@tailwindcss/postcss7-compat@^2.1.2\",\"tailwindcss-aspect-ratio\":\"^3.0.0\",\"tailwindcss-elevation\":\"^1.0.1\",\"tailwindcss-important\":\"^1.0.0\",\"tailwindcss-pseudo-elements\":\"^2.0.0\",\"terser-webpack-plugin\":\"^5.1.2\",\"ts-loader\":\"^9.2.2\",\"ts-node\":\"~10.0.0\",\"ts-transpile\":\"^1.2.4\",\"tsc-prog\":\"^2.2.1\",\"tsconfig-paths\":\"^3.9.0\",\"tsconfig-paths-webpack-plugin\":\"^3.5.1\",\"tslint\":\"~6.1.0\",\"ttypescript\":\"^1.5.12\",\"typescript\":\"~4.3.2\",\"typescript-plugin-css-modules\":\"^3.2.0\",\"url-loader\":\"^4.1.1\",\"watchpack\":\"^2.2.0\",\"webpack\":\"^5.38.1\",\"webpack-bundle-analyzer\":\"^4.4.2\",\"webpack-chokidar-plugin\":\"^1.0.5\",\"webpack-cli\":\"^4.7.0\",\"webpack-copy-after-build-plugin\":\"^1.0.1\",\"webpack-dev-middleware\":\"^4.3.0\",\"webpack-dev-server\":\"^3.11.2\",\"webpack-fix-style-only-entries\":\"^0.6.1\",\"webpack-glob-entry\":\"^2.1.1\",\"webpack-hot-middleware\":\"^2.25.0\",\"webpack-manifest-plugin\":\"^3.1.1\",\"webpack-merge\":\"^5.7.3\",\"webpack-pwa-manifest\":\"^4.3.0\",\"webpack-sources\":\"^2.3.0\",\"webpack-watch-files-plugin\":\"^1.1.0\",\"webpack-watched-glob-entries-plugin\":\"^2.1.9\",\"workbox-build\":\"^6.1.5\",\"workbox-webpack-plugin\":\"^6.1.5\",\"xml-loader\":\"^1.2.1\"},\"peerDependencies\":{\"postcss\":\"^8.3.0\"}}');\n\n//# sourceURL=webpack://blazor-app/../../package.json?");

/***/ })

};
;